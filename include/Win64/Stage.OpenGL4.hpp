// CodeGear C++Builder
// Copyright (c) 1995, 2025 by Embarcadero Technologies, Inc.
// All rights reserved

// (DO NOT EDIT: machine generated header) 'Stage.OpenGL4.pas' rev: 36.00 (Windows)

#ifndef Stage_OpenGL4HPP
#define Stage_OpenGL4HPP

#pragma delphiheader begin
#pragma option push
#if defined(__BORLANDC__) && !defined(__clang__)
#pragma option -w-      // All warnings off
#pragma option -Vx      // Zero-length empty class member 
#endif
#pragma pack(push,8)
#include <System.hpp>
#include <SysInit.hpp>
#include <System.SysUtils.hpp>
#include <System.Math.hpp>
#include <Winapi.Windows.hpp>
#include <Stage.VectorTypes.hpp>
#include <System.Types.hpp>

//-- user supplied -----------------------------------------------------------

namespace Stage
{
namespace Opengl4
{
//-- forward type declarations -----------------------------------------------
struct _WGLSWAP;
struct TGPUDEVICE;
struct DECLSPEC_DRECORD TGLUNurbs
{
};


struct DECLSPEC_DRECORD TGLUQuadric
{
};


struct DECLSPEC_DRECORD TGLUTesselator
{
};


class DELPHICLASS EOpenGLError;
//-- type declarations -------------------------------------------------------
enum DECLSPEC_DENUM Stage_Opengl4__1 : unsigned char { opDoubleBuffered, opGDI, opStereo };

typedef System::Set<Stage_Opengl4__1, Stage_Opengl4__1::opDoubleBuffered, Stage_Opengl4__1::opStereo> TRCOptions;

typedef char * PGLChar;

typedef System::AnsiString TGLString;

typedef unsigned TGLEnum;

typedef unsigned *PGLenum;

typedef System::ByteBool TGLboolean;

typedef System::ByteBool *PGLboolean;

typedef unsigned TGLbitfield;

typedef unsigned *PGLbitfield;

typedef System::Int8 TGLbyte;

typedef System::Int8 *PGLbyte;

typedef short TGLshort;

typedef short *PGLshort;

typedef int TGLint;

typedef int *PGLint;

typedef int TGLsizei;

typedef int *PGLsizei;

typedef __int64 TGLint64;

typedef __int64 *PGLint64;

typedef __int64 GLint64EXT;

typedef __int64 TGLint64EXT;

typedef __int64 *PGLint64EXT;

typedef unsigned __int64 GLuint64;

typedef unsigned __int64 TGLuint64;

typedef unsigned __int64 *PGLuint64;

typedef unsigned __int64 GLuint64EXT;

typedef unsigned __int64 TGLuint64EXT;

typedef unsigned __int64 *PGLuint64EXT;

typedef System::Byte TGLubyte;

typedef System::PByte PGLubyte;

typedef System::Word TGLushort;

typedef System::PWord PGLushort;

typedef unsigned TGLuint;

typedef unsigned *PGLuint;

typedef float TGLfloat;

typedef System::PSingle PGLfloat;

typedef float TGLclampf;

typedef float *PGLclampf;

typedef double TGLdouble;

typedef System::PDouble PGLdouble;

typedef double GLclampd;

typedef double TGLclampd;

typedef double *PGLclampd;

typedef unsigned GLhandleARB;

typedef unsigned *PGLhandleARB;

typedef char * *PGLPCharArray;

typedef void * PGLvoid;

typedef System::StaticArray<void *, 4> TVector4p;

typedef void * *PGLPointer;

typedef System::NativeInt TGLintptr;

typedef __int64 *PGLintptr;

typedef System::NativeInt TGLsizeiptr;

typedef System::NativeInt TGLsync;

typedef _WGLSWAP *PWGLSwap;

#pragma pack(push,1)
struct DECLSPEC_DRECORD _WGLSWAP
{
public:
	HDC hdc;
	unsigned uiFlags;
};
#pragma pack(pop)


typedef _WGLSWAP TWGLSwap;

typedef _WGLSWAP WGLSWAP;

typedef int HPBUFFERARB;

typedef unsigned __int64 *PHGPUNV;

typedef Winapi::Windows::THandle HGPUNV;

typedef Winapi::Windows::THandle HVIDEOINPUTDEVICENV;

typedef unsigned __int64 *PHVIDEOINPUTDEVICENV;

typedef TGPUDEVICE *PGPUDEVICE;

struct DECLSPEC_DRECORD TGPUDEVICE
{
public:
	unsigned cb;
	System::StaticArray<char, 32> DeviceName;
	System::StaticArray<char, 128> DeviceString;
	unsigned Flags;
	Winapi::Windows::TRect rcVirtualScreen;
};


typedef TGLUNurbs *PGLUNurbs;

typedef TGLUQuadric *PGLUQuadric;

typedef TGLUTesselator *PGLUTesselator;

typedef TGLUNurbs TGLUNurbsObj;

typedef TGLUQuadric TGLUQuadricObj;

typedef TGLUTesselator TGLUTesselatorObj;

typedef TGLUTesselator TGLUTriangulatorObj;

typedef PGLUNurbs PGLUNurbsObj;

typedef PGLUQuadric PGLUQuadricObj;

typedef PGLUTesselator PGLUTesselatorObj;

typedef PGLUTesselator PGLUTriangulatorObj;

typedef void __stdcall (*TGLUQuadricErrorProc)(unsigned errorCode);

typedef void __stdcall (*TGLUTessBeginProc)(unsigned AType);

typedef void __stdcall (*TGLUTessEdgeFlagProc)(TGLboolean Flag);

typedef void __stdcall (*TGLUTessVertexProc)(void * VertexData);

typedef void __stdcall (*TGLUTessEndProc)(void);

typedef void __stdcall (*TGLUTessErrorProc)(unsigned ErrNo);

typedef void __stdcall (*TGLUTessCombineProc)(const Stage::Vectortypes::TVector3d &Coords, const TVector4p &VertexData, const Stage::Vectortypes::TVector4f &Weight, PGLPointer OutData);

typedef void __stdcall (*TGLUTessBeginDataProc)(unsigned AType, void * UserData);

typedef void __stdcall (*TGLUTessEdgeFlagDataProc)(TGLboolean Flag, void * UserData);

typedef void __stdcall (*TGLUTessVertexDataProc)(void * VertexData, void * UserData);

typedef void __stdcall (*TGLUTessEndDataProc)(void * UserData);

typedef void __stdcall (*TGLUTessErrorDataProc)(unsigned ErrNo, void * UserData);

typedef void __stdcall (*TGLUTessCombineDataProc)(const Stage::Vectortypes::TVector3d &Coords, const TVector4p &VertexData, const Stage::Vectortypes::TVector4f &Weight, PGLPointer OutData, void * UserData);

typedef void __stdcall (*TGLUNurbsErrorProc)(unsigned errorCode);

class PASCALIMPLEMENTATION EOpenGLError : public System::Sysutils::Exception
{
	typedef System::Sysutils::Exception inherited;
	
public:
	/* Exception.Create */ inline __fastcall EOpenGLError(const System::UnicodeString Msg) : System::Sysutils::Exception(Msg) { }
	/* Exception.CreateFmt */ inline __fastcall EOpenGLError(const System::UnicodeString Msg, const System::TVarRec *Args, const System::NativeInt Args_High) : System::Sysutils::Exception(Msg, Args, Args_High) { }
	/* Exception.CreateRes */ inline __fastcall EOpenGLError(System::NativeUInt Ident)/* overload */ : System::Sysutils::Exception(Ident) { }
	/* Exception.CreateRes */ inline __fastcall EOpenGLError(System::PResStringRec ResStringRec)/* overload */ : System::Sysutils::Exception(ResStringRec) { }
	/* Exception.CreateResFmt */ inline __fastcall EOpenGLError(System::NativeUInt Ident, const System::TVarRec *Args, const System::NativeInt Args_High)/* overload */ : System::Sysutils::Exception(Ident, Args, Args_High) { }
	/* Exception.CreateResFmt */ inline __fastcall EOpenGLError(System::PResStringRec ResStringRec, const System::TVarRec *Args, const System::NativeInt Args_High)/* overload */ : System::Sysutils::Exception(ResStringRec, Args, Args_High) { }
	/* Exception.CreateHelp */ inline __fastcall EOpenGLError(const System::UnicodeString Msg, int AHelpContext) : System::Sysutils::Exception(Msg, AHelpContext) { }
	/* Exception.CreateFmtHelp */ inline __fastcall EOpenGLError(const System::UnicodeString Msg, const System::TVarRec *Args, const System::NativeInt Args_High, int AHelpContext) : System::Sysutils::Exception(Msg, Args, Args_High, AHelpContext) { }
	/* Exception.CreateResHelp */ inline __fastcall EOpenGLError(System::NativeUInt Ident, int AHelpContext)/* overload */ : System::Sysutils::Exception(Ident, AHelpContext) { }
	/* Exception.CreateResHelp */ inline __fastcall EOpenGLError(System::PResStringRec ResStringRec, int AHelpContext)/* overload */ : System::Sysutils::Exception(ResStringRec, AHelpContext) { }
	/* Exception.CreateResFmtHelp */ inline __fastcall EOpenGLError(System::PResStringRec ResStringRec, const System::TVarRec *Args, const System::NativeInt Args_High, int AHelpContext)/* overload */ : System::Sysutils::Exception(ResStringRec, Args, Args_High, AHelpContext) { }
	/* Exception.CreateResFmtHelp */ inline __fastcall EOpenGLError(System::NativeUInt Ident, const System::TVarRec *Args, const System::NativeInt Args_High, int AHelpContext)/* overload */ : System::Sysutils::Exception(Ident, Args, Args_High, AHelpContext) { }
	/* Exception.Destroy */ inline __fastcall virtual ~EOpenGLError() { }
	
};


//-- var, const, procedure ---------------------------------------------------
#define opengl32 L"OpenGL32.dll"
#define glu32 L"GLU32.dll"
#define libEGL L"libEGL.dll"
#define libGLES2 L"libGLESv2.dll"
extern DELPHI_PACKAGE bool GL_VERSION_4_0;
extern DELPHI_PACKAGE bool GL_VERSION_4_1;
extern DELPHI_PACKAGE bool GL_VERSION_4_2;
extern DELPHI_PACKAGE bool GL_VERSION_4_3;
extern DELPHI_PACKAGE bool GL_VERSION_4_4;
extern DELPHI_PACKAGE bool GL_VERSION_4_5;
extern DELPHI_PACKAGE bool GL_VERSION_4_6;
extern DELPHI_PACKAGE bool GLU_VERSION_1_3;
extern DELPHI_PACKAGE bool GL_3DFX_multisample;
extern DELPHI_PACKAGE bool GL_3DFX_tbuffer;
extern DELPHI_PACKAGE bool GL_3DFX_texture_compression_FXT1;
extern DELPHI_PACKAGE bool GL_APPLE_client_storage;
extern DELPHI_PACKAGE bool GL_APPLE_element_array;
extern DELPHI_PACKAGE bool GL_APPLE_fence;
extern DELPHI_PACKAGE bool GL_APPLE_specular_vector;
extern DELPHI_PACKAGE bool GL_APPLE_transform_hint;
extern DELPHI_PACKAGE bool GL_APPLE_vertex_array_object;
extern DELPHI_PACKAGE bool GL_APPLE_vertex_array_range;
extern DELPHI_PACKAGE bool GL_APPLE_ycbcr_422;
extern DELPHI_PACKAGE bool GL_APPLE_texture_range;
extern DELPHI_PACKAGE bool GL_APPLE_float_pixels;
extern DELPHI_PACKAGE bool GL_APPLE_vertex_program_evaluators;
extern DELPHI_PACKAGE bool GL_APPLE_aux_depth_stencil;
extern DELPHI_PACKAGE bool GL_APPLE_object_purgeable;
extern DELPHI_PACKAGE bool GL_APPLE_row_bytes;
extern DELPHI_PACKAGE bool GL_APPLE_rgb_422;
extern DELPHI_PACKAGE bool GL_ARB_depth_texture;
extern DELPHI_PACKAGE bool GL_ARB_fragment_program;
extern DELPHI_PACKAGE bool GL_ARB_imaging;
extern DELPHI_PACKAGE bool GL_ARB_matrix_palette;
extern DELPHI_PACKAGE bool GL_ARB_multisample;
extern DELPHI_PACKAGE bool GL_ARB_multitexture;
extern DELPHI_PACKAGE bool GL_ARB_point_parameters;
extern DELPHI_PACKAGE bool GL_ARB_shadow;
extern DELPHI_PACKAGE bool GL_ARB_shadow_ambient;
extern DELPHI_PACKAGE bool GL_ARB_texture_border_clamp;
extern DELPHI_PACKAGE bool GL_ARB_texture_compression;
extern DELPHI_PACKAGE bool GL_ARB_texture_cube_map;
extern DELPHI_PACKAGE bool GL_ARB_texture_env_add;
extern DELPHI_PACKAGE bool GL_ARB_texture_env_combine;
extern DELPHI_PACKAGE bool GL_ARB_texture_env_crossbar;
extern DELPHI_PACKAGE bool GL_ARB_texture_env_dot3;
extern DELPHI_PACKAGE bool GL_ARB_texture_filter_minmax;
extern DELPHI_PACKAGE bool GL_ARB_texture_mirrored_repeat;
extern DELPHI_PACKAGE bool GL_ARB_transpose_matrix;
extern DELPHI_PACKAGE bool GL_ARB_vertex_blend;
extern DELPHI_PACKAGE bool GL_ARB_vertex_buffer_object;
extern DELPHI_PACKAGE bool GL_ARB_vertex_program;
extern DELPHI_PACKAGE bool GL_ARB_window_pos;
extern DELPHI_PACKAGE bool GL_ARB_shader_objects;
extern DELPHI_PACKAGE bool GL_ARB_vertex_shader;
extern DELPHI_PACKAGE bool GL_ARB_fragment_shader;
extern DELPHI_PACKAGE bool GL_ARB_fragment_shader_interlock;
extern DELPHI_PACKAGE bool GL_ARB_shading_language_100;
extern DELPHI_PACKAGE bool GL_ARB_occlusion_query;
extern DELPHI_PACKAGE bool GL_ARB_texture_non_power_of_two;
extern DELPHI_PACKAGE bool GL_ARB_point_sprite;
extern DELPHI_PACKAGE bool GL_ARB_fragment_program_shadow;
extern DELPHI_PACKAGE bool GL_ARB_draw_buffers;
extern DELPHI_PACKAGE bool GL_ARB_texture_rectangle;
extern DELPHI_PACKAGE bool GL_ARB_color_buffer_float;
extern DELPHI_PACKAGE bool GL_ARB_half_float_pixel;
extern DELPHI_PACKAGE bool GL_ARB_texture_float;
extern DELPHI_PACKAGE bool GL_ARB_pixel_buffer_object;
extern DELPHI_PACKAGE bool GL_ARB_depth_buffer_float;
extern DELPHI_PACKAGE bool GL_ARB_draw_instanced;
extern DELPHI_PACKAGE bool GL_ARB_framebuffer_object;
extern DELPHI_PACKAGE bool GL_ARB_framebuffer_sRGB;
extern DELPHI_PACKAGE bool GL_ARB_geometry_shader4;
extern DELPHI_PACKAGE bool GL_ARB_half_float_vertex;
extern DELPHI_PACKAGE bool GL_ARB_instanced_arrays;
extern DELPHI_PACKAGE bool GL_ARB_map_buffer_range;
extern DELPHI_PACKAGE bool GL_ARB_texture_buffer_object;
extern DELPHI_PACKAGE bool GL_ARB_texture_compression_rgtc;
extern DELPHI_PACKAGE bool GL_ARB_texture_rg;
extern DELPHI_PACKAGE bool GL_ARB_vertex_array_object;
extern DELPHI_PACKAGE bool GL_ARB_uniform_buffer_object;
extern DELPHI_PACKAGE bool GL_ARB_compatibility;
extern DELPHI_PACKAGE bool GL_ARB_copy_buffer;
extern DELPHI_PACKAGE bool GL_ARB_shader_texture_lod;
extern DELPHI_PACKAGE bool GL_ARB_shader_viewport_layer_array;
extern DELPHI_PACKAGE bool GL_ARB_depth_clamp;
extern DELPHI_PACKAGE bool GL_ARB_draw_elements_base_vertex;
extern DELPHI_PACKAGE bool GL_ARB_fragment_coord_conventions;
extern DELPHI_PACKAGE bool GL_ARB_provoking_vertex;
extern DELPHI_PACKAGE bool GL_ARB_seamless_cube_map;
extern DELPHI_PACKAGE bool GL_ARB_sync;
extern DELPHI_PACKAGE bool GL_ARB_texture_multisample;
extern DELPHI_PACKAGE bool GL_ARB_vertex_array_bgra;
extern DELPHI_PACKAGE bool GL_ARB_draw_buffers_blend;
extern DELPHI_PACKAGE bool GL_ARB_sample_shading;
extern DELPHI_PACKAGE bool GL_ARB_sample_locations;
extern DELPHI_PACKAGE bool GL_ARB_sparse_texture2;
extern DELPHI_PACKAGE bool GL_ARB_sparse_texture_clamp;
extern DELPHI_PACKAGE bool GL_ARB_texture_cube_map_array;
extern DELPHI_PACKAGE bool GL_ARB_texture_gather;
extern DELPHI_PACKAGE bool GL_ARB_texture_query_lod;
extern DELPHI_PACKAGE bool GL_ARB_shading_language_include;
extern DELPHI_PACKAGE bool GL_ARB_texture_compression_bptc;
extern DELPHI_PACKAGE bool GL_ARB_blend_func_extended;
extern DELPHI_PACKAGE bool GL_ARB_explicit_attrib_location;
extern DELPHI_PACKAGE bool GL_ARB_occlusion_query2;
extern DELPHI_PACKAGE bool GL_ARB_parallel_shader_compile;
extern DELPHI_PACKAGE bool GL_ARB_post_depth_coverage;
extern DELPHI_PACKAGE bool GL_ARB_sampler_objects;
extern DELPHI_PACKAGE bool GL_ARB_shader_bit_encoding;
extern DELPHI_PACKAGE bool GL_ARB_shader_clock;
extern DELPHI_PACKAGE bool GL_ARB_texture_rgb10_a2ui;
extern DELPHI_PACKAGE bool GL_ARB_texture_swizzle;
extern DELPHI_PACKAGE bool GL_ARB_timer_query;
extern DELPHI_PACKAGE bool GL_ARB_vertex_type_2_10_10_10_rev;
extern DELPHI_PACKAGE bool GL_ARB_draw_indirect;
extern DELPHI_PACKAGE bool GL_ARB_gpu_shader5;
extern DELPHI_PACKAGE bool GL_ARB_gpu_shader_fp64;
extern DELPHI_PACKAGE bool GL_ARB_gpu_shader_int64;
extern DELPHI_PACKAGE bool GL_ARB_shader_subroutine;
extern DELPHI_PACKAGE bool GL_ARB_tessellation_shader;
extern DELPHI_PACKAGE bool GL_ARB_texture_buffer_object_rgb32;
extern DELPHI_PACKAGE bool GL_ARB_transform_feedback2;
extern DELPHI_PACKAGE bool GL_ARB_transform_feedback3;
extern DELPHI_PACKAGE bool GL_ARB_ES2_compatibility;
extern DELPHI_PACKAGE bool GL_ARB_ES3_2_compatibility;
extern DELPHI_PACKAGE bool GL_ARB_get_program_binary;
extern DELPHI_PACKAGE bool GL_ARB_separate_shader_objects;
extern DELPHI_PACKAGE bool GL_ARB_shader_precision;
extern DELPHI_PACKAGE bool GL_ARB_shader_ballot;
extern DELPHI_PACKAGE bool GL_ARB_vertex_attrib_64bit;
extern DELPHI_PACKAGE bool GL_ARB_viewport_array;
extern DELPHI_PACKAGE bool GL_ARB_base_instance;
extern DELPHI_PACKAGE bool GL_ARB_shading_language_420pack;
extern DELPHI_PACKAGE bool GL_ARB_transform_feedback_instanced;
extern DELPHI_PACKAGE bool GL_ARB_compressed_texture_pixel_storage;
extern DELPHI_PACKAGE bool GL_ARB_conservative_depth;
extern DELPHI_PACKAGE bool GL_ARB_internalformat_query;
extern DELPHI_PACKAGE bool GL_ARB_map_buffer_alignment;
extern DELPHI_PACKAGE bool GL_ARB_shader_atomic_counters;
extern DELPHI_PACKAGE bool GL_ARB_shader_image_load_store;
extern DELPHI_PACKAGE bool GL_ARB_shading_language_packing;
extern DELPHI_PACKAGE bool GL_ARB_texture_storage;
extern DELPHI_PACKAGE bool GL_ARB_arrays_of_arrays;
extern DELPHI_PACKAGE bool GL_ARB_fragment_layer_viewport;
extern DELPHI_PACKAGE bool GL_ARB_shader_image_size;
extern DELPHI_PACKAGE bool GL_ARB_ES3_compatibility;
extern DELPHI_PACKAGE bool GL_ARB_clear_buffer_object;
extern DELPHI_PACKAGE bool GL_ARB_compute_shader;
extern DELPHI_PACKAGE bool GL_ARB_copy_image;
extern DELPHI_PACKAGE bool GL_KHR_debug;
extern DELPHI_PACKAGE bool GL_ARB_explicit_uniform_location;
extern DELPHI_PACKAGE bool GL_ARB_framebuffer_no_attachments;
extern DELPHI_PACKAGE bool GL_ARB_internalformat_query2;
extern DELPHI_PACKAGE bool GL_ARB_invalidate_subdata;
extern DELPHI_PACKAGE bool GL_ARB_multi_draw_indirect;
extern DELPHI_PACKAGE bool GL_ARB_program_interface_query;
extern DELPHI_PACKAGE bool GL_ARB_robust_buffer_access_behavior;
extern DELPHI_PACKAGE bool GL_ARB_shader_storage_buffer_object;
extern DELPHI_PACKAGE bool GL_ARB_stencil_texturing;
extern DELPHI_PACKAGE bool GL_ARB_texture_buffer_range;
extern DELPHI_PACKAGE bool GL_ARB_texture_query_levels;
extern DELPHI_PACKAGE bool GL_ARB_texture_storage_multisample;
extern DELPHI_PACKAGE bool GL_ARB_texture_view;
extern DELPHI_PACKAGE bool GL_ARB_vertex_attrib_binding;
extern DELPHI_PACKAGE bool GL_NV_path_rendering;
extern DELPHI_PACKAGE bool GL_AMD_pinned_memory;
extern DELPHI_PACKAGE bool GL_AMD_stencil_operation_extended;
extern DELPHI_PACKAGE bool GL_AMD_vertex_shader_viewport_index;
extern DELPHI_PACKAGE bool GL_AMD_vertex_shader_layer;
extern DELPHI_PACKAGE bool GL_NV_bindless_texture;
extern DELPHI_PACKAGE bool GL_NV_shader_atomic_float;
extern DELPHI_PACKAGE bool GL_AMD_query_buffer_object;
extern DELPHI_PACKAGE bool GL_ARB_buffer_storage;
extern DELPHI_PACKAGE bool GL_ARB_clear_texture;
extern DELPHI_PACKAGE bool GL_ARB_enhanced_layouts;
extern DELPHI_PACKAGE bool GL_ARB_multi_bind;
extern DELPHI_PACKAGE bool GL_ARB_query_buffer_object;
extern DELPHI_PACKAGE bool GL_ARB_texture_mirror_clamp_to_edge;
extern DELPHI_PACKAGE bool GL_ARB_texture_stencil8;
extern DELPHI_PACKAGE bool GL_ARB_vertex_type_10f_11f_11f_rev;
extern DELPHI_PACKAGE bool GL_ARB_bindless_texture;
extern DELPHI_PACKAGE bool GL_ARB_sparse_texture;
extern DELPHI_PACKAGE bool GL_ARB_clip_control;
extern DELPHI_PACKAGE bool GL_ARB_cull_distance;
extern DELPHI_PACKAGE bool GL_ARB_ES3_1_compatibility;
extern DELPHI_PACKAGE bool GL_ARB_conditional_render_inverted;
extern DELPHI_PACKAGE bool GL_KHR_context_flush_control;
extern DELPHI_PACKAGE bool GL_ARB_derivative_control;
extern DELPHI_PACKAGE bool GL_ARB_direct_state_access;
extern DELPHI_PACKAGE bool GL_ARB_get_texture_sub_image;
extern DELPHI_PACKAGE bool GL_KHR_robustness;
extern DELPHI_PACKAGE bool GL_KHR_blend_equation_advanced;
extern DELPHI_PACKAGE bool GL_KHR_blend_equation_advanced_coherent;
extern DELPHI_PACKAGE bool GL_KHR_robust_buffer_access_behavior;
extern DELPHI_PACKAGE bool GL_ARB_shader_texture_image_samples;
extern DELPHI_PACKAGE bool GL_ARB_texture_barrier;
extern DELPHI_PACKAGE bool GL_ARB_indirect_parameters;
extern DELPHI_PACKAGE bool GL_ARB_pipeline_statistics_query;
extern DELPHI_PACKAGE bool GL_ARB_polygon_offset_clamp;
extern DELPHI_PACKAGE bool GL_KHR_no_error;
extern DELPHI_PACKAGE bool GL_ARB_shader_atomic_counter_ops;
extern DELPHI_PACKAGE bool GL_ARB_shader_draw_parameters;
extern DELPHI_PACKAGE bool GL_ARB_shader_group_vote;
extern DELPHI_PACKAGE bool GL_ARB_gl_spirv;
extern DELPHI_PACKAGE bool GL_ARB_spirv_extensions;
extern DELPHI_PACKAGE bool GL_ARB_texture_filter_anisotropic;
extern DELPHI_PACKAGE bool GL_ARB_transform_feedback_overflow_query;
extern DELPHI_PACKAGE bool GL_ARB_cl_event;
extern DELPHI_PACKAGE bool GL_ARB_compute_variable_group_size;
extern DELPHI_PACKAGE bool GL_ARB_debug_output;
extern DELPHI_PACKAGE bool GL_ARB_robustness;
extern DELPHI_PACKAGE bool GL_ARB_shader_stencil_export;
extern DELPHI_PACKAGE bool GL_ATI_draw_buffers;
extern DELPHI_PACKAGE bool GL_ATI_element_array;
extern DELPHI_PACKAGE bool GL_ATI_envmap_bumpmap;
extern DELPHI_PACKAGE bool GL_ATI_fragment_shader;
extern DELPHI_PACKAGE bool GL_ATI_map_object_buffer;
extern DELPHI_PACKAGE bool GL_ATI_pn_triangles;
extern DELPHI_PACKAGE bool GL_ATI_separate_stencil;
extern DELPHI_PACKAGE bool GL_ATI_text_fragment_shader;
extern DELPHI_PACKAGE bool GL_ATI_texture_env_combine3;
extern DELPHI_PACKAGE bool GL_ATI_texture_float;
extern DELPHI_PACKAGE bool GL_ATI_texture_mirror_once;
extern DELPHI_PACKAGE bool GL_ATI_vertex_array_object;
extern DELPHI_PACKAGE bool GL_ATI_vertex_attrib_array_object;
extern DELPHI_PACKAGE bool GL_ATI_vertex_streams;
extern DELPHI_PACKAGE bool GL_ATI_meminfo;
extern DELPHI_PACKAGE bool GL_AMD_performance_monitor;
extern DELPHI_PACKAGE bool GL_AMD_texture_texture4;
extern DELPHI_PACKAGE bool GL_AMD_vertex_shader_tesselator;
extern DELPHI_PACKAGE bool GL_AMD_draw_buffers_blend;
extern DELPHI_PACKAGE bool GL_AMD_shader_stencil_export;
extern DELPHI_PACKAGE bool GL_AMD_seamless_cubemap_per_texture;
extern DELPHI_PACKAGE bool GL_AMD_conservative_depth;
extern DELPHI_PACKAGE bool GL_AMD_name_gen_delete;
extern DELPHI_PACKAGE bool GL_AMD_debug_output;
extern DELPHI_PACKAGE bool GL_AMD_transform_feedback3_lines_triangles;
extern DELPHI_PACKAGE bool GL_AMD_depth_clamp_separate;
extern DELPHI_PACKAGE bool GL_EXT_422_pixels;
extern DELPHI_PACKAGE bool GL_EXT_abgr;
extern DELPHI_PACKAGE bool GL_EXT_bgra;
extern DELPHI_PACKAGE bool GL_EXT_blend_color;
extern DELPHI_PACKAGE bool GL_EXT_blend_func_separate;
extern DELPHI_PACKAGE bool GL_EXT_blend_logic_op;
extern DELPHI_PACKAGE bool GL_EXT_blend_minmax;
extern DELPHI_PACKAGE bool GL_EXT_blend_subtract;
extern DELPHI_PACKAGE bool GL_EXT_clip_volume_hint;
extern DELPHI_PACKAGE bool GL_EXT_cmyka;
extern DELPHI_PACKAGE bool GL_EXT_color_matrix;
extern DELPHI_PACKAGE bool GL_EXT_color_subtable;
extern DELPHI_PACKAGE bool GL_EXT_compiled_vertex_array;
extern DELPHI_PACKAGE bool GL_EXT_convolution;
extern DELPHI_PACKAGE bool GL_EXT_coordinate_frame;
extern DELPHI_PACKAGE bool GL_EXT_copy_texture;
extern DELPHI_PACKAGE bool GL_EXT_cull_vertex;
extern DELPHI_PACKAGE bool GL_EXT_draw_range_elements;
extern DELPHI_PACKAGE bool GL_EXT_fog_coord;
extern DELPHI_PACKAGE bool GL_EXT_framebuffer_object;
extern DELPHI_PACKAGE bool GL_EXT_histogram;
extern DELPHI_PACKAGE bool GL_EXT_index_array_formats;
extern DELPHI_PACKAGE bool GL_EXT_index_func;
extern DELPHI_PACKAGE bool GL_EXT_index_material;
extern DELPHI_PACKAGE bool GL_EXT_index_texture;
extern DELPHI_PACKAGE bool GL_EXT_light_texture;
extern DELPHI_PACKAGE bool GL_EXT_misc_attribute;
extern DELPHI_PACKAGE bool GL_EXT_multi_draw_arrays;
extern DELPHI_PACKAGE bool GL_EXT_multisample;
extern DELPHI_PACKAGE bool GL_EXT_packed_pixels;
extern DELPHI_PACKAGE bool GL_EXT_paletted_texture;
extern DELPHI_PACKAGE bool GL_EXT_pixel_transform;
extern DELPHI_PACKAGE bool GL_EXT_pixel_transform_color_table;
extern DELPHI_PACKAGE bool GL_EXT_point_parameters;
extern DELPHI_PACKAGE bool GL_EXT_polygon_offset;
extern DELPHI_PACKAGE bool GL_EXT_rescale_normal;
extern DELPHI_PACKAGE bool GL_EXT_secondary_color;
extern DELPHI_PACKAGE bool GL_EXT_separate_specular_color;
extern DELPHI_PACKAGE bool GL_EXT_shadow_funcs;
extern DELPHI_PACKAGE bool GL_EXT_shared_texture_palette;
extern DELPHI_PACKAGE bool GL_EXT_stencil_two_side;
extern DELPHI_PACKAGE bool GL_EXT_stencil_wrap;
extern DELPHI_PACKAGE bool GL_EXT_subtexture;
extern DELPHI_PACKAGE bool GL_EXT_texture;
extern DELPHI_PACKAGE bool GL_EXT_texture3D;
extern DELPHI_PACKAGE bool GL_EXT_texture_compression_s3tc;
extern DELPHI_PACKAGE bool GL_EXT_texture_cube_map;
extern DELPHI_PACKAGE bool GL_EXT_texture_edge_clamp;
extern DELPHI_PACKAGE bool GL_EXT_texture_env_add;
extern DELPHI_PACKAGE bool GL_EXT_texture_env_combine;
extern DELPHI_PACKAGE bool GL_EXT_texture_env_dot3;
extern DELPHI_PACKAGE bool GL_EXT_texture_filter_anisotropic;
extern DELPHI_PACKAGE bool GL_EXT_texture_lod_bias;
extern DELPHI_PACKAGE bool GL_EXT_texture_object;
extern DELPHI_PACKAGE bool GL_EXT_texture_perturb_normal;
extern DELPHI_PACKAGE bool GL_EXT_texture_rectangle;
extern DELPHI_PACKAGE bool GL_EXT_vertex_array;
extern DELPHI_PACKAGE bool GL_EXT_vertex_shader;
extern DELPHI_PACKAGE bool GL_EXT_vertex_weighting;
extern DELPHI_PACKAGE bool GL_EXT_depth_bounds_test;
extern DELPHI_PACKAGE bool GL_EXT_texture_mirror_clamp;
extern DELPHI_PACKAGE bool GL_EXT_blend_equation_separate;
extern DELPHI_PACKAGE bool GL_EXT_pixel_buffer_object;
extern DELPHI_PACKAGE bool GL_EXT_texture_compression_dxt1;
extern DELPHI_PACKAGE bool GL_EXT_stencil_clear_tag;
extern DELPHI_PACKAGE bool GL_EXT_packed_depth_stencil;
extern DELPHI_PACKAGE bool GL_EXT_texture_sRGB;
extern DELPHI_PACKAGE bool GL_EXT_framebuffer_blit;
extern DELPHI_PACKAGE bool GL_EXT_framebuffer_multisample;
extern DELPHI_PACKAGE bool GL_EXT_timer_query;
extern DELPHI_PACKAGE bool GL_EXT_gpu_program_parameters;
extern DELPHI_PACKAGE bool GL_EXT_bindable_uniform;
extern DELPHI_PACKAGE bool GL_EXT_draw_buffers2;
extern DELPHI_PACKAGE bool GL_EXT_draw_instanced;
extern DELPHI_PACKAGE bool GL_EXT_framebuffer_sRGB;
extern DELPHI_PACKAGE bool GL_EXT_geometry_shader4;
extern DELPHI_PACKAGE bool GL_EXT_gpu_shader4;
extern DELPHI_PACKAGE bool GL_EXT_packed_float;
extern DELPHI_PACKAGE bool GL_EXT_texture_array;
extern DELPHI_PACKAGE bool GL_EXT_texture_buffer_object;
extern DELPHI_PACKAGE bool GL_EXT_texture_compression_latc;
extern DELPHI_PACKAGE bool GL_EXT_texture_compression_rgtc;
extern DELPHI_PACKAGE bool GL_EXT_texture_integer;
extern DELPHI_PACKAGE bool GL_EXT_texture_shared_exponent;
extern DELPHI_PACKAGE bool GL_EXT_transform_feedback;
extern DELPHI_PACKAGE bool GL_EXT_direct_state_access;
extern DELPHI_PACKAGE bool GL_EXT_vertex_array_bgra;
extern DELPHI_PACKAGE bool GL_EXT_texture_swizzle;
extern DELPHI_PACKAGE bool GL_EXT_provoking_vertex;
extern DELPHI_PACKAGE bool GL_EXT_texture_snorm;
extern DELPHI_PACKAGE bool GL_EXT_separate_shader_objects;
extern DELPHI_PACKAGE bool GL_EXT_shader_image_load_store;
extern DELPHI_PACKAGE bool GL_EXT_vertex_attrib_64bit;
extern DELPHI_PACKAGE bool GL_EXT_texture_sRGB_decode;
extern DELPHI_PACKAGE bool GL_FfdMaskSGIX;
extern DELPHI_PACKAGE bool GL_HP_convolution_border_modes;
extern DELPHI_PACKAGE bool GL_HP_image_transform;
extern DELPHI_PACKAGE bool GL_HP_occlusion_test;
extern DELPHI_PACKAGE bool GL_HP_texture_lighting;
extern DELPHI_PACKAGE bool GL_IBM_cull_vertex;
extern DELPHI_PACKAGE bool GL_IBM_multimode_draw_arrays;
extern DELPHI_PACKAGE bool GL_IBM_rasterpos_clip;
extern DELPHI_PACKAGE bool GL_IBM_texture_mirrored_repeat;
extern DELPHI_PACKAGE bool GL_IBM_vertex_array_lists;
extern DELPHI_PACKAGE bool GL_INGR_blend_func_separate;
extern DELPHI_PACKAGE bool GL_INGR_color_clamp;
extern DELPHI_PACKAGE bool GL_INGR_interlace_read;
extern DELPHI_PACKAGE bool GL_INGR_palette_buffer;
extern DELPHI_PACKAGE bool GL_INTEL_framebuffer_CMAA;
extern DELPHI_PACKAGE bool GL_INTEL_parallel_arrays;
extern DELPHI_PACKAGE bool GL_INTEL_texture_scissor;
extern DELPHI_PACKAGE bool GL_MESA_resize_buffers;
extern DELPHI_PACKAGE bool GL_MESA_window_pos;
extern DELPHI_PACKAGE bool GL_NV_blend_square;
extern DELPHI_PACKAGE bool GL_NV_copy_depth_to_color;
extern DELPHI_PACKAGE bool GL_NV_depth_clamp;
extern DELPHI_PACKAGE bool GL_NV_evaluators;
extern DELPHI_PACKAGE bool GL_NV_fence;
extern DELPHI_PACKAGE bool GL_NV_float_buffer;
extern DELPHI_PACKAGE bool GL_NV_fog_distance;
extern DELPHI_PACKAGE bool GL_NV_fragment_program;
extern DELPHI_PACKAGE bool GL_NV_half_float;
extern DELPHI_PACKAGE bool GL_NV_light_max_exponent;
extern DELPHI_PACKAGE bool GL_NV_multisample_filter_hint;
extern DELPHI_PACKAGE bool GL_NV_occlusion_query;
extern DELPHI_PACKAGE bool GL_NV_packed_depth_stencil;
extern DELPHI_PACKAGE bool GL_NV_pixel_data_range;
extern DELPHI_PACKAGE bool GL_NV_point_sprite;
extern DELPHI_PACKAGE bool GL_NV_primitive_restart;
extern DELPHI_PACKAGE bool GL_NV_register_combiners;
extern DELPHI_PACKAGE bool GL_NV_register_combiners2;
extern DELPHI_PACKAGE bool GL_NV_texgen_emboss;
extern DELPHI_PACKAGE bool GL_NV_texgen_reflection;
extern DELPHI_PACKAGE bool GL_NV_texture_compression_vtc;
extern DELPHI_PACKAGE bool GL_NV_texture_env_combine4;
extern DELPHI_PACKAGE bool GL_NV_texture_expand_normal;
extern DELPHI_PACKAGE bool GL_NV_texture_rectangle;
extern DELPHI_PACKAGE bool GL_NV_texture_shader;
extern DELPHI_PACKAGE bool GL_NV_texture_shader2;
extern DELPHI_PACKAGE bool GL_NV_texture_shader3;
extern DELPHI_PACKAGE bool GL_NV_vertex_array_range;
extern DELPHI_PACKAGE bool GL_NV_vertex_array_range2;
extern DELPHI_PACKAGE bool GL_NV_vertex_program;
extern DELPHI_PACKAGE bool GL_NV_vertex_program1_1;
extern DELPHI_PACKAGE bool GL_NV_vertex_program2;
extern DELPHI_PACKAGE bool GL_NV_fragment_program_option;
extern DELPHI_PACKAGE bool GL_NV_fragment_program2;
extern DELPHI_PACKAGE bool GL_NV_vertex_program2_option;
extern DELPHI_PACKAGE bool GL_NV_vertex_program3;
extern DELPHI_PACKAGE bool GL_NV_depth_buffer_float;
extern DELPHI_PACKAGE bool GL_NV_fragment_program4;
extern DELPHI_PACKAGE bool GL_NV_framebuffer_multisample_coverage;
extern DELPHI_PACKAGE bool GL_NV_geometry_program4;
extern DELPHI_PACKAGE bool GL_NV_gpu_program4;
extern DELPHI_PACKAGE bool GL_NV_parameter_buffer_object;
extern DELPHI_PACKAGE bool GL_NV_transform_feedback;
extern DELPHI_PACKAGE bool GL_NV_vertex_program4;
extern DELPHI_PACKAGE bool GL_NV_conditional_render;
extern DELPHI_PACKAGE bool GL_NV_conservative_raster;
extern DELPHI_PACKAGE bool GL_NV_conservative_raster_dilate;
extern DELPHI_PACKAGE bool GL_NV_present_video;
extern DELPHI_PACKAGE bool GL_NV_explicit_multisample;
extern DELPHI_PACKAGE bool GL_NV_transform_feedback2;
extern DELPHI_PACKAGE bool GL_NV_video_capture;
extern DELPHI_PACKAGE bool GL_NV_copy_image;
extern DELPHI_PACKAGE bool GL_NV_parameter_buffer_object2;
extern DELPHI_PACKAGE bool GL_NV_shader_buffer_load;
extern DELPHI_PACKAGE bool GL_NV_vertex_buffer_unified_memory;
extern DELPHI_PACKAGE bool GL_NV_gpu_program5;
extern DELPHI_PACKAGE bool GL_NV_gpu_shader5;
extern DELPHI_PACKAGE bool GL_NV_shader_buffer_store;
extern DELPHI_PACKAGE bool GL_NV_tessellation_program5;
extern DELPHI_PACKAGE bool GL_NV_vertex_attrib_integer_64bit;
extern DELPHI_PACKAGE bool GL_NV_multisample_coverage;
extern DELPHI_PACKAGE bool GL_NV_vdpau_interop;
extern DELPHI_PACKAGE bool GL_NV_texture_barrier;
extern DELPHI_PACKAGE bool GL_OML_interlace;
extern DELPHI_PACKAGE bool GL_OML_resample;
extern DELPHI_PACKAGE bool GL_OML_subsample;
extern DELPHI_PACKAGE bool GL_OVR_multiview;
extern DELPHI_PACKAGE bool GL_OVR_multiview2;
extern DELPHI_PACKAGE bool GL_PGI_misc_hints;
extern DELPHI_PACKAGE bool GL_PGI_vertex_hints;
extern DELPHI_PACKAGE bool GL_REND_screen_coordinates;
extern DELPHI_PACKAGE bool GL_S3_s3tc;
extern DELPHI_PACKAGE bool GL_SGIS_detail_texture;
extern DELPHI_PACKAGE bool GL_SGIS_fog_function;
extern DELPHI_PACKAGE bool GL_SGIS_generate_mipmap;
extern DELPHI_PACKAGE bool GL_SGIS_multisample;
extern DELPHI_PACKAGE bool GL_SGIS_pixel_texture;
extern DELPHI_PACKAGE bool GL_SGIS_point_line_texgen;
extern DELPHI_PACKAGE bool GL_SGIS_point_parameters;
extern DELPHI_PACKAGE bool GL_SGIS_sharpen_texture;
extern DELPHI_PACKAGE bool GL_SGIS_texture4D;
extern DELPHI_PACKAGE bool GL_SGIS_texture_border_clamp;
extern DELPHI_PACKAGE bool GL_SGIS_texture_color_mask;
extern DELPHI_PACKAGE bool GL_SGIS_texture_edge_clamp;
extern DELPHI_PACKAGE bool GL_SGIS_texture_filter4;
extern DELPHI_PACKAGE bool GL_SGIS_texture_lod;
extern DELPHI_PACKAGE bool GL_SGIS_texture_select;
extern DELPHI_PACKAGE bool GL_SGIX_async;
extern DELPHI_PACKAGE bool GL_SGIX_async_histogram;
extern DELPHI_PACKAGE bool GL_SGIX_async_pixel;
extern DELPHI_PACKAGE bool GL_SGIX_blend_alpha_minmax;
extern DELPHI_PACKAGE bool GL_SGIX_calligraphic_fragment;
extern DELPHI_PACKAGE bool GL_SGIX_clipmap;
extern DELPHI_PACKAGE bool GL_SGIX_convolution_accuracy;
extern DELPHI_PACKAGE bool GL_SGIX_depth_pass_instrument;
extern DELPHI_PACKAGE bool GL_SGIX_depth_texture;
extern DELPHI_PACKAGE bool GL_SGIX_flush_raster;
extern DELPHI_PACKAGE bool GL_SGIX_fog_offset;
extern DELPHI_PACKAGE bool GL_SGIX_fog_scale;
extern DELPHI_PACKAGE bool GL_SGIX_fragment_lighting;
extern DELPHI_PACKAGE bool GL_SGIX_framezoom;
extern DELPHI_PACKAGE bool GL_SGIX_igloo_interface;
extern DELPHI_PACKAGE bool GL_SGIX_impact_pixel_texture;
extern DELPHI_PACKAGE bool GL_SGIX_instruments;
extern DELPHI_PACKAGE bool GL_SGIX_interlace;
extern DELPHI_PACKAGE bool GL_SGIX_ir_instrument1;
extern DELPHI_PACKAGE bool GL_SGIX_list_priority;
extern DELPHI_PACKAGE bool GL_SGIX_pixel_texture;
extern DELPHI_PACKAGE bool GL_SGIX_pixel_tiles;
extern DELPHI_PACKAGE bool GL_SGIX_polynomial_ffd;
extern DELPHI_PACKAGE bool GL_SGIX_reference_plane;
extern DELPHI_PACKAGE bool GL_SGIX_resample;
extern DELPHI_PACKAGE bool GL_SGIX_scalebias_hint;
extern DELPHI_PACKAGE bool GL_SGIX_shadow;
extern DELPHI_PACKAGE bool GL_SGIX_shadow_ambient;
extern DELPHI_PACKAGE bool GL_SGIX_sprite;
extern DELPHI_PACKAGE bool GL_SGIX_subsample;
extern DELPHI_PACKAGE bool GL_SGIX_tag_sample_buffer;
extern DELPHI_PACKAGE bool GL_SGIX_texture_add_env;
extern DELPHI_PACKAGE bool GL_SGIX_texture_coordinate_clamp;
extern DELPHI_PACKAGE bool GL_SGIX_texture_lod_bias;
extern DELPHI_PACKAGE bool GL_SGIX_texture_multi_buffer;
extern DELPHI_PACKAGE bool GL_SGIX_texture_scale_bias;
extern DELPHI_PACKAGE bool GL_SGIX_texture_select;
extern DELPHI_PACKAGE bool GL_SGIX_vertex_preclip;
extern DELPHI_PACKAGE bool GL_SGIX_ycrcb;
extern DELPHI_PACKAGE bool GL_SGIX_ycrcb_subsample;
extern DELPHI_PACKAGE bool GL_SGIX_ycrcba;
extern DELPHI_PACKAGE bool GL_SGI_color_matrix;
extern DELPHI_PACKAGE bool GL_SGI_color_table;
extern DELPHI_PACKAGE bool GL_SGI_depth_pass_instrument;
extern DELPHI_PACKAGE bool GL_SGI_texture_color_table;
extern DELPHI_PACKAGE bool GL_SUNX_constant_data;
extern DELPHI_PACKAGE bool GL_SUN_convolution_border_modes;
extern DELPHI_PACKAGE bool GL_SUN_global_alpha;
extern DELPHI_PACKAGE bool GL_SUN_mesh_array;
extern DELPHI_PACKAGE bool GL_SUN_slice_accum;
extern DELPHI_PACKAGE bool GL_SUN_triangle_list;
extern DELPHI_PACKAGE bool GL_SUN_vertex;
extern DELPHI_PACKAGE bool GL_WIN_phong_shading;
extern DELPHI_PACKAGE bool GL_WIN_specular_fog;
extern DELPHI_PACKAGE bool WGL_3DFX_multisample;
extern DELPHI_PACKAGE bool WGL_ARB_buffer_region;
extern DELPHI_PACKAGE bool WGL_ARB_extensions_string;
extern DELPHI_PACKAGE bool WGL_ARB_make_current_read;
extern DELPHI_PACKAGE bool WGL_ARB_multisample;
extern DELPHI_PACKAGE bool WGL_ARB_pbuffer;
extern DELPHI_PACKAGE bool WGL_ARB_pixel_format;
extern DELPHI_PACKAGE bool WGL_ARB_pixel_format_float;
extern DELPHI_PACKAGE bool WGL_ARB_render_texture;
extern DELPHI_PACKAGE bool WGL_ARB_create_context;
extern DELPHI_PACKAGE bool WGL_ARB_create_context_profile;
extern DELPHI_PACKAGE bool WGL_ARB_framebuffer_sRGB;
extern DELPHI_PACKAGE bool WGL_ARB_create_context_robustness;
extern DELPHI_PACKAGE bool WGL_ATI_pixel_format_float;
extern DELPHI_PACKAGE bool WGL_AMD_gpu_association;
extern DELPHI_PACKAGE bool WGL_EXT_depth_float;
extern DELPHI_PACKAGE bool WGL_EXT_display_color_table;
extern DELPHI_PACKAGE bool WGL_EXT_extensions_string;
extern DELPHI_PACKAGE bool WGL_EXT_make_current_read;
extern DELPHI_PACKAGE bool WGL_EXT_multisample;
extern DELPHI_PACKAGE bool WGL_EXT_pbuffer;
extern DELPHI_PACKAGE bool WGL_EXT_pixel_format;
extern DELPHI_PACKAGE bool WGL_EXT_swap_control;
extern DELPHI_PACKAGE bool WGL_EXT_create_context_es2_profile;
extern DELPHI_PACKAGE bool WGL_I3D_digital_video_control;
extern DELPHI_PACKAGE bool WGL_I3D_gamma;
extern DELPHI_PACKAGE bool WGL_I3D_genlock;
extern DELPHI_PACKAGE bool WGL_I3D_image_buffer;
extern DELPHI_PACKAGE bool WGL_I3D_swap_frame_lock;
extern DELPHI_PACKAGE bool WGL_I3D_swap_frame_usage;
extern DELPHI_PACKAGE bool WGL_NV_float_buffer;
extern DELPHI_PACKAGE bool WGL_NV_render_depth_texture;
extern DELPHI_PACKAGE bool WGL_NV_render_texture_rectangle;
extern DELPHI_PACKAGE bool WGL_NV_vertex_array_range;
extern DELPHI_PACKAGE bool WGL_NV_present_video;
extern DELPHI_PACKAGE bool WGL_NV_video_output;
extern DELPHI_PACKAGE bool WGL_NV_swap_group;
extern DELPHI_PACKAGE bool WGL_NV_gpu_affinity;
extern DELPHI_PACKAGE bool WGL_NV_video_capture;
extern DELPHI_PACKAGE bool WGL_NV_copy_image;
extern DELPHI_PACKAGE bool WGL_NV_multisample_coverage;
extern DELPHI_PACKAGE bool WGL_NV_DX_interop;
extern DELPHI_PACKAGE bool WGL_OML_sync_control;
extern DELPHI_PACKAGE bool WGL_3DL_stereo_control;
extern DELPHI_PACKAGE bool WGL_ARB_context_flush_control;
extern DELPHI_PACKAGE bool WIN_draw_range_elements;
extern DELPHI_PACKAGE bool WIN_swap_hint;
extern DELPHI_PACKAGE bool GLX_VERSION_1_4;
extern DELPHI_PACKAGE bool GLX_ARB_multisample;
extern DELPHI_PACKAGE bool GLX_ARB_fbconfig_float;
extern DELPHI_PACKAGE bool GLX_ARB_get_proc_address;
extern DELPHI_PACKAGE bool GLX_ARB_create_context;
extern DELPHI_PACKAGE bool GLX_ARB_create_context_profile;
extern DELPHI_PACKAGE bool GLX_ARB_vertex_buffer_object;
extern DELPHI_PACKAGE bool GLX_ARB_framebuffer_sRGB;
extern DELPHI_PACKAGE bool GLX_ARB_create_context_robustness;
extern DELPHI_PACKAGE bool GLX_EXT_visual_info;
extern DELPHI_PACKAGE bool GLX_EXT_visual_rating;
extern DELPHI_PACKAGE bool GLX_EXT_import_context;
extern DELPHI_PACKAGE bool GLX_EXT_fbconfig_packed_float;
extern DELPHI_PACKAGE bool GLX_EXT_framebuffer_sRGB;
extern DELPHI_PACKAGE bool GLX_EXT_texture_from_pixmap;
extern DELPHI_PACKAGE bool GLX_EXT_swap_control;
extern DELPHI_PACKAGE bool GLX_ARB_context_flush_control;
extern DELPHI_PACKAGE bool GLX_EXT_create_context_es2_profile;
static _DELPHI_CONST System::Word GL_DEPTH_BUFFER_BIT = System::Word(0x100);
static _DELPHI_CONST System::Word GL_STENCIL_BUFFER_BIT = System::Word(0x400);
static _DELPHI_CONST System::Word GL_COLOR_BUFFER_BIT = System::Word(0x4000);
static _DELPHI_CONST System::Int8 GL_TRUE = System::Int8(0x1);
static _DELPHI_CONST System::Int8 GL_FALSE = System::Int8(0x0);
static _DELPHI_CONST System::Int8 GL_POINTS = System::Int8(0x0);
static _DELPHI_CONST System::Int8 GL_LINES = System::Int8(0x1);
static _DELPHI_CONST System::Int8 GL_LINE_LOOP = System::Int8(0x2);
static _DELPHI_CONST System::Int8 GL_LINE_STRIP = System::Int8(0x3);
static _DELPHI_CONST System::Int8 GL_TRIANGLES = System::Int8(0x4);
static _DELPHI_CONST System::Int8 GL_TRIANGLE_STRIP = System::Int8(0x5);
static _DELPHI_CONST System::Int8 GL_TRIANGLE_FAN = System::Int8(0x6);
static _DELPHI_CONST System::Word GL_NEVER = System::Word(0x200);
static _DELPHI_CONST System::Word GL_LESS = System::Word(0x201);
static _DELPHI_CONST System::Word GL_EQUAL = System::Word(0x202);
static _DELPHI_CONST System::Word GL_LEQUAL = System::Word(0x203);
static _DELPHI_CONST System::Word GL_GREATER = System::Word(0x204);
static _DELPHI_CONST System::Word GL_NOTEQUAL = System::Word(0x205);
static _DELPHI_CONST System::Word GL_GEQUAL = System::Word(0x206);
static _DELPHI_CONST System::Word GL_ALWAYS = System::Word(0x207);
static _DELPHI_CONST System::Int8 GL_ZERO = System::Int8(0x0);
static _DELPHI_CONST System::Int8 GL_ONE = System::Int8(0x1);
static _DELPHI_CONST System::Word GL_SRC_COLOR = System::Word(0x300);
static _DELPHI_CONST System::Word GL_ONE_MINUS_SRC_COLOR = System::Word(0x301);
static _DELPHI_CONST System::Word GL_SRC_ALPHA = System::Word(0x302);
static _DELPHI_CONST System::Word GL_ONE_MINUS_SRC_ALPHA = System::Word(0x303);
static _DELPHI_CONST System::Word GL_DST_ALPHA = System::Word(0x304);
static _DELPHI_CONST System::Word GL_ONE_MINUS_DST_ALPHA = System::Word(0x305);
static _DELPHI_CONST System::Word GL_DST_COLOR = System::Word(0x306);
static _DELPHI_CONST System::Word GL_ONE_MINUS_DST_COLOR = System::Word(0x307);
static _DELPHI_CONST System::Word GL_SRC_ALPHA_SATURATE = System::Word(0x308);
static _DELPHI_CONST System::Int8 GL_NONE = System::Int8(0x0);
static _DELPHI_CONST System::Word GL_FRONT_LEFT = System::Word(0x400);
static _DELPHI_CONST System::Word GL_FRONT_RIGHT = System::Word(0x401);
static _DELPHI_CONST System::Word GL_BACK_LEFT = System::Word(0x402);
static _DELPHI_CONST System::Word GL_BACK_RIGHT = System::Word(0x403);
static _DELPHI_CONST System::Word GL_FRONT = System::Word(0x404);
static _DELPHI_CONST System::Word GL_BACK = System::Word(0x405);
static _DELPHI_CONST System::Word GL_LEFT = System::Word(0x406);
static _DELPHI_CONST System::Word GL_RIGHT = System::Word(0x407);
static _DELPHI_CONST System::Word GL_FRONT_AND_BACK = System::Word(0x408);
static _DELPHI_CONST System::Int8 GL_NO_ERROR = System::Int8(0x0);
static _DELPHI_CONST System::Word GL_INVALID_ENUM = System::Word(0x500);
static _DELPHI_CONST System::Word GL_INVALID_VALUE = System::Word(0x501);
static _DELPHI_CONST System::Word GL_INVALID_OPERATION = System::Word(0x502);
static _DELPHI_CONST System::Word GL_OUT_OF_MEMORY = System::Word(0x505);
static _DELPHI_CONST System::Word GL_CW = System::Word(0x900);
static _DELPHI_CONST System::Word GL_CCW = System::Word(0x901);
static _DELPHI_CONST System::Word GL_POINT_SIZE = System::Word(0xb11);
static _DELPHI_CONST System::Word GL_POINT_SIZE_RANGE = System::Word(0xb12);
static _DELPHI_CONST System::Word GL_POINT_SIZE_GRANULARITY = System::Word(0xb13);
static _DELPHI_CONST System::Word GL_LINE_SMOOTH = System::Word(0xb20);
static _DELPHI_CONST System::Word GL_LINE_WIDTH = System::Word(0xb21);
static _DELPHI_CONST System::Word GL_LINE_WIDTH_RANGE = System::Word(0xb22);
static _DELPHI_CONST System::Word GL_LINE_WIDTH_GRANULARITY = System::Word(0xb23);
static _DELPHI_CONST System::Word GL_POLYGON_SMOOTH = System::Word(0xb41);
static _DELPHI_CONST System::Word GL_CULL_FACE = System::Word(0xb44);
static _DELPHI_CONST System::Word GL_CULL_FACE_MODE = System::Word(0xb45);
static _DELPHI_CONST System::Word GL_FRONT_FACE = System::Word(0xb46);
static _DELPHI_CONST System::Word GL_DEPTH_RANGE = System::Word(0xb70);
static _DELPHI_CONST System::Word GL_DEPTH_TEST = System::Word(0xb71);
static _DELPHI_CONST System::Word GL_DEPTH_WRITEMASK = System::Word(0xb72);
static _DELPHI_CONST System::Word GL_DEPTH_CLEAR_VALUE = System::Word(0xb73);
static _DELPHI_CONST System::Word GL_DEPTH_FUNC = System::Word(0xb74);
static _DELPHI_CONST System::Word GL_STENCIL_TEST = System::Word(0xb90);
static _DELPHI_CONST System::Word GL_STENCIL_CLEAR_VALUE = System::Word(0xb91);
static _DELPHI_CONST System::Word GL_STENCIL_FUNC = System::Word(0xb92);
static _DELPHI_CONST System::Word GL_STENCIL_VALUE_MASK = System::Word(0xb93);
static _DELPHI_CONST System::Word GL_STENCIL_FAIL = System::Word(0xb94);
static _DELPHI_CONST System::Word GL_STENCIL_PASS_DEPTH_FAIL = System::Word(0xb95);
static _DELPHI_CONST System::Word GL_STENCIL_PASS_DEPTH_PASS = System::Word(0xb96);
static _DELPHI_CONST System::Word GL_STENCIL_REF = System::Word(0xb97);
static _DELPHI_CONST System::Word GL_STENCIL_WRITEMASK = System::Word(0xb98);
static _DELPHI_CONST System::Word GL_VIEWPORT = System::Word(0xba2);
static _DELPHI_CONST System::Word GL_DITHER = System::Word(0xbd0);
static _DELPHI_CONST System::Word GL_BLEND_DST = System::Word(0xbe0);
static _DELPHI_CONST System::Word GL_BLEND_SRC = System::Word(0xbe1);
static _DELPHI_CONST System::Word GL_BLEND = System::Word(0xbe2);
static _DELPHI_CONST System::Word GL_LOGIC_OP_MODE = System::Word(0xbf0);
static _DELPHI_CONST System::Word GL_COLOR_LOGIC_OP = System::Word(0xbf2);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER = System::Word(0xc01);
static _DELPHI_CONST System::Word GL_READ_BUFFER = System::Word(0xc02);
static _DELPHI_CONST System::Word GL_SCISSOR_BOX = System::Word(0xc10);
static _DELPHI_CONST System::Word GL_SCISSOR_TEST = System::Word(0xc11);
static _DELPHI_CONST System::Word GL_COLOR_CLEAR_VALUE = System::Word(0xc22);
static _DELPHI_CONST System::Word GL_COLOR_WRITEMASK = System::Word(0xc23);
static _DELPHI_CONST System::Word GL_DOUBLEBUFFER = System::Word(0xc32);
static _DELPHI_CONST System::Word GL_STEREO = System::Word(0xc33);
static _DELPHI_CONST System::Word GL_LINE_SMOOTH_HINT = System::Word(0xc52);
static _DELPHI_CONST System::Word GL_POLYGON_SMOOTH_HINT = System::Word(0xc53);
static _DELPHI_CONST System::Word GL_UNPACK_SWAP_BYTES = System::Word(0xcf0);
static _DELPHI_CONST System::Word GL_UNPACK_LSB_FIRST = System::Word(0xcf1);
static _DELPHI_CONST System::Word GL_UNPACK_ROW_LENGTH = System::Word(0xcf2);
static _DELPHI_CONST System::Word GL_UNPACK_SKIP_ROWS = System::Word(0xcf3);
static _DELPHI_CONST System::Word GL_UNPACK_SKIP_PIXELS = System::Word(0xcf4);
static _DELPHI_CONST System::Word GL_UNPACK_ALIGNMENT = System::Word(0xcf5);
static _DELPHI_CONST System::Word GL_PACK_SWAP_BYTES = System::Word(0xd00);
static _DELPHI_CONST System::Word GL_PACK_LSB_FIRST = System::Word(0xd01);
static _DELPHI_CONST System::Word GL_PACK_ROW_LENGTH = System::Word(0xd02);
static _DELPHI_CONST System::Word GL_PACK_SKIP_ROWS = System::Word(0xd03);
static _DELPHI_CONST System::Word GL_PACK_SKIP_PIXELS = System::Word(0xd04);
static _DELPHI_CONST System::Word GL_PACK_ALIGNMENT = System::Word(0xd05);
static _DELPHI_CONST System::Word GL_MAX_TEXTURE_SIZE = System::Word(0xd33);
static _DELPHI_CONST System::Word GL_MAX_VIEWPORT_DIMS = System::Word(0xd3a);
static _DELPHI_CONST System::Word GL_SUBPIXEL_BITS = System::Word(0xd50);
static _DELPHI_CONST System::Word GL_TEXTURE_1D = System::Word(0xde0);
static _DELPHI_CONST System::Word GL_TEXTURE_2D = System::Word(0xde1);
static _DELPHI_CONST System::Word GL_POLYGON_OFFSET_UNITS = System::Word(0x2a00);
static _DELPHI_CONST System::Word GL_POLYGON_OFFSET_POINT = System::Word(0x2a01);
static _DELPHI_CONST System::Word GL_POLYGON_OFFSET_LINE = System::Word(0x2a02);
static _DELPHI_CONST System::Word GL_POLYGON_OFFSET_FILL = System::Word(0x8037);
static _DELPHI_CONST System::Word GL_POLYGON_OFFSET_FACTOR = System::Word(0x8038);
static _DELPHI_CONST System::Word GL_TEXTURE_BINDING_1D = System::Word(0x8068);
static _DELPHI_CONST System::Word GL_TEXTURE_BINDING_2D = System::Word(0x8069);
static _DELPHI_CONST System::Word GL_TEXTURE_WIDTH = System::Word(0x1000);
static _DELPHI_CONST System::Word GL_TEXTURE_HEIGHT = System::Word(0x1001);
static _DELPHI_CONST System::Word GL_TEXTURE_INTERNAL_FORMAT = System::Word(0x1003);
static _DELPHI_CONST System::Word GL_TEXTURE_BORDER_COLOR = System::Word(0x1004);
static _DELPHI_CONST System::Word GL_TEXTURE_BORDER = System::Word(0x1005);
static _DELPHI_CONST System::Word GL_TEXTURE_RED_SIZE = System::Word(0x805c);
static _DELPHI_CONST System::Word GL_TEXTURE_GREEN_SIZE = System::Word(0x805d);
static _DELPHI_CONST System::Word GL_TEXTURE_BLUE_SIZE = System::Word(0x805e);
static _DELPHI_CONST System::Word GL_TEXTURE_ALPHA_SIZE = System::Word(0x805f);
static _DELPHI_CONST System::Word GL_DONT_CARE = System::Word(0x1100);
static _DELPHI_CONST System::Word GL_FASTEST = System::Word(0x1101);
static _DELPHI_CONST System::Word GL_NICEST = System::Word(0x1102);
static _DELPHI_CONST System::Word GL_BYTE = System::Word(0x1400);
static _DELPHI_CONST System::Word GL_UNSIGNED_BYTE = System::Word(0x1401);
static _DELPHI_CONST System::Word GL_SHORT = System::Word(0x1402);
static _DELPHI_CONST System::Word GL_UNSIGNED_SHORT = System::Word(0x1403);
static _DELPHI_CONST System::Word GL_INT = System::Word(0x1404);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT = System::Word(0x1405);
static _DELPHI_CONST System::Word GL_FLOAT = System::Word(0x1406);
static _DELPHI_CONST System::Word GL_DOUBLE = System::Word(0x140a);
static _DELPHI_CONST System::Word GL_CLEAR = System::Word(0x1500);
static _DELPHI_CONST System::Word GL_AND = System::Word(0x1501);
static _DELPHI_CONST System::Word GL_AND_REVERSE = System::Word(0x1502);
static _DELPHI_CONST System::Word GL_COPY = System::Word(0x1503);
static _DELPHI_CONST System::Word GL_AND_INVERTED = System::Word(0x1504);
static _DELPHI_CONST System::Word GL_NOOP = System::Word(0x1505);
static _DELPHI_CONST System::Word GL_XOR = System::Word(0x1506);
static _DELPHI_CONST System::Word GL_OR = System::Word(0x1507);
static _DELPHI_CONST System::Word GL_NOR = System::Word(0x1508);
static _DELPHI_CONST System::Word GL_EQUIV = System::Word(0x1509);
static _DELPHI_CONST System::Word GL_INVERT = System::Word(0x150a);
static _DELPHI_CONST System::Word GL_OR_REVERSE = System::Word(0x150b);
static _DELPHI_CONST System::Word GL_COPY_INVERTED = System::Word(0x150c);
static _DELPHI_CONST System::Word GL_OR_INVERTED = System::Word(0x150d);
static _DELPHI_CONST System::Word GL_NAND = System::Word(0x150e);
static _DELPHI_CONST System::Word GL_SET = System::Word(0x150f);
static _DELPHI_CONST System::Word GL_TEXTURE = System::Word(0x1702);
static _DELPHI_CONST System::Word GL_COLOR = System::Word(0x1800);
static _DELPHI_CONST System::Word GL_DEPTH = System::Word(0x1801);
static _DELPHI_CONST System::Word GL_STENCIL = System::Word(0x1802);
static _DELPHI_CONST System::Word GL_STENCIL_INDEX = System::Word(0x1901);
static _DELPHI_CONST System::Word GL_DEPTH_COMPONENT = System::Word(0x1902);
static _DELPHI_CONST System::Word GL_RED = System::Word(0x1903);
static _DELPHI_CONST System::Word GL_GREEN = System::Word(0x1904);
static _DELPHI_CONST System::Word GL_BLUE = System::Word(0x1905);
static _DELPHI_CONST System::Word GL_ALPHA = System::Word(0x1906);
static _DELPHI_CONST System::Word GL_RGB = System::Word(0x1907);
static _DELPHI_CONST System::Word GL_RGBA = System::Word(0x1908);
static _DELPHI_CONST System::Word GL_POINT = System::Word(0x1b00);
static _DELPHI_CONST System::Word GL_LINE = System::Word(0x1b01);
static _DELPHI_CONST System::Word GL_FILL = System::Word(0x1b02);
static _DELPHI_CONST System::Word GL_KEEP = System::Word(0x1e00);
static _DELPHI_CONST System::Word GL_REPLACE = System::Word(0x1e01);
static _DELPHI_CONST System::Word GL_INCR = System::Word(0x1e02);
static _DELPHI_CONST System::Word GL_DECR = System::Word(0x1e03);
static _DELPHI_CONST System::Word GL_VENDOR = System::Word(0x1f00);
static _DELPHI_CONST System::Word GL_RENDERER = System::Word(0x1f01);
static _DELPHI_CONST System::Word GL_VERSION = System::Word(0x1f02);
static _DELPHI_CONST System::Word GL_EXTENSIONS = System::Word(0x1f03);
static _DELPHI_CONST System::Word GL_NEAREST = System::Word(0x2600);
static _DELPHI_CONST System::Word GL_LINEAR = System::Word(0x2601);
static _DELPHI_CONST System::Word GL_NEAREST_MIPMAP_NEAREST = System::Word(0x2700);
static _DELPHI_CONST System::Word GL_LINEAR_MIPMAP_NEAREST = System::Word(0x2701);
static _DELPHI_CONST System::Word GL_NEAREST_MIPMAP_LINEAR = System::Word(0x2702);
static _DELPHI_CONST System::Word GL_LINEAR_MIPMAP_LINEAR = System::Word(0x2703);
static _DELPHI_CONST System::Word GL_TEXTURE_MAG_FILTER = System::Word(0x2800);
static _DELPHI_CONST System::Word GL_TEXTURE_MIN_FILTER = System::Word(0x2801);
static _DELPHI_CONST System::Word GL_TEXTURE_WRAP_S = System::Word(0x2802);
static _DELPHI_CONST System::Word GL_TEXTURE_WRAP_T = System::Word(0x2803);
static _DELPHI_CONST System::Word GL_PROXY_TEXTURE_1D = System::Word(0x8063);
static _DELPHI_CONST System::Word GL_PROXY_TEXTURE_2D = System::Word(0x8064);
static _DELPHI_CONST System::Word GL_REPEAT = System::Word(0x2901);
static _DELPHI_CONST System::Word GL_R3_G3_B2 = System::Word(0x2a10);
static _DELPHI_CONST System::Word GL_RGB4 = System::Word(0x804f);
static _DELPHI_CONST System::Word GL_RGB5 = System::Word(0x8050);
static _DELPHI_CONST System::Word GL_RGB8 = System::Word(0x8051);
static _DELPHI_CONST System::Word GL_RGB10 = System::Word(0x8052);
static _DELPHI_CONST System::Word GL_RGB12 = System::Word(0x8053);
static _DELPHI_CONST System::Word GL_RGB16 = System::Word(0x8054);
static _DELPHI_CONST System::Word GL_RGBA2 = System::Word(0x8055);
static _DELPHI_CONST System::Word GL_RGBA4 = System::Word(0x8056);
static _DELPHI_CONST System::Word GL_RGB5_A1 = System::Word(0x8057);
static _DELPHI_CONST System::Word GL_RGBA8 = System::Word(0x8058);
static _DELPHI_CONST System::Word GL_RGB10_A2 = System::Word(0x8059);
static _DELPHI_CONST System::Word GL_RGBA12 = System::Word(0x805a);
static _DELPHI_CONST System::Word GL_RGBA16 = System::Word(0x805b);
static _DELPHI_CONST System::Word GL_ACCUM = System::Word(0x100);
static _DELPHI_CONST System::Word GL_LOAD = System::Word(0x101);
static _DELPHI_CONST System::Word GL_RETURN = System::Word(0x102);
static _DELPHI_CONST System::Word GL_MULT = System::Word(0x103);
static _DELPHI_CONST System::Word GL_ADD = System::Word(0x104);
static _DELPHI_CONST System::Int8 GL_CURRENT_BIT = System::Int8(0x1);
static _DELPHI_CONST System::Int8 GL_POINT_BIT = System::Int8(0x2);
static _DELPHI_CONST System::Int8 GL_LINE_BIT = System::Int8(0x4);
static _DELPHI_CONST System::Int8 GL_POLYGON_BIT = System::Int8(0x8);
static _DELPHI_CONST System::Int8 GL_POLYGON_STIPPLE_BIT = System::Int8(0x10);
static _DELPHI_CONST System::Int8 GL_PIXEL_MODE_BIT = System::Int8(0x20);
static _DELPHI_CONST System::Int8 GL_LIGHTING_BIT = System::Int8(0x40);
static _DELPHI_CONST System::Byte GL_FOG_BIT = System::Byte(0x80);
static _DELPHI_CONST System::Word GL_ACCUM_BUFFER_BIT = System::Word(0x200);
static _DELPHI_CONST System::Word GL_VIEWPORT_BIT = System::Word(0x800);
static _DELPHI_CONST System::Word GL_TRANSFORM_BIT = System::Word(0x1000);
static _DELPHI_CONST System::Word GL_ENABLE_BIT = System::Word(0x2000);
static _DELPHI_CONST System::Word GL_HINT_BIT = System::Word(0x8000);
static _DELPHI_CONST int GL_EVAL_BIT = int(0x10000);
static _DELPHI_CONST int GL_LIST_BIT = int(0x20000);
static _DELPHI_CONST int GL_TEXTURE_BIT = int(0x40000);
static _DELPHI_CONST int GL_SCISSOR_BIT = int(0x80000);
static _DELPHI_CONST int GL_ALL_ATTRIB_BITS = int(0xfffff);
static _DELPHI_CONST System::Int8 GL_QUADS = System::Int8(0x7);
static _DELPHI_CONST System::Int8 GL_QUAD_STRIP = System::Int8(0x8);
static _DELPHI_CONST System::Int8 GL_POLYGON = System::Int8(0x9);
static _DELPHI_CONST System::Word GL_CLIP_PLANE0 = System::Word(0x3000);
static _DELPHI_CONST System::Word GL_CLIP_PLANE1 = System::Word(0x3001);
static _DELPHI_CONST System::Word GL_CLIP_PLANE2 = System::Word(0x3002);
static _DELPHI_CONST System::Word GL_CLIP_PLANE3 = System::Word(0x3003);
static _DELPHI_CONST System::Word GL_CLIP_PLANE4 = System::Word(0x3004);
static _DELPHI_CONST System::Word GL_CLIP_PLANE5 = System::Word(0x3005);
static _DELPHI_CONST System::Word GL_2_BYTES = System::Word(0x1407);
static _DELPHI_CONST System::Word GL_3_BYTES = System::Word(0x1408);
static _DELPHI_CONST System::Word GL_4_BYTES = System::Word(0x1409);
static _DELPHI_CONST System::Word GL_AUX0 = System::Word(0x409);
static _DELPHI_CONST System::Word GL_AUX1 = System::Word(0x40a);
static _DELPHI_CONST System::Word GL_AUX2 = System::Word(0x40b);
static _DELPHI_CONST System::Word GL_AUX3 = System::Word(0x40c);
static _DELPHI_CONST System::Word GL_STACK_OVERFLOW = System::Word(0x503);
static _DELPHI_CONST System::Word GL_STACK_UNDERFLOW = System::Word(0x504);
static _DELPHI_CONST System::Word GL_2D = System::Word(0x600);
static _DELPHI_CONST System::Word GL_3D = System::Word(0x601);
static _DELPHI_CONST System::Word GL_3D_COLOR = System::Word(0x602);
static _DELPHI_CONST System::Word GL_3D_COLOR_TEXTURE = System::Word(0x603);
static _DELPHI_CONST System::Word GL_4D_COLOR_TEXTURE = System::Word(0x604);
static _DELPHI_CONST System::Word GL_PASS_THROUGH_TOKEN = System::Word(0x700);
static _DELPHI_CONST System::Word GL_POINT_TOKEN = System::Word(0x701);
static _DELPHI_CONST System::Word GL_LINE_TOKEN = System::Word(0x702);
static _DELPHI_CONST System::Word GL_POLYGON_TOKEN = System::Word(0x703);
static _DELPHI_CONST System::Word GL_BITMAP_TOKEN = System::Word(0x704);
static _DELPHI_CONST System::Word GL_DRAW_PIXEL_TOKEN = System::Word(0x705);
static _DELPHI_CONST System::Word GL_COPY_PIXEL_TOKEN = System::Word(0x706);
static _DELPHI_CONST System::Word GL_LINE_RESET_TOKEN = System::Word(0x707);
static _DELPHI_CONST System::Word GL_EXP = System::Word(0x800);
static _DELPHI_CONST System::Word GL_EXP2 = System::Word(0x801);
static _DELPHI_CONST System::Word GL_COEFF = System::Word(0xa00);
static _DELPHI_CONST System::Word GL_ORDER = System::Word(0xa01);
static _DELPHI_CONST System::Word GL_DOMAIN = System::Word(0xa02);
static _DELPHI_CONST System::Word GL_CURRENT_COLOR = System::Word(0xb00);
static _DELPHI_CONST System::Word GL_CURRENT_INDEX = System::Word(0xb01);
static _DELPHI_CONST System::Word GL_CURRENT_NORMAL = System::Word(0xb02);
static _DELPHI_CONST System::Word GL_CURRENT_TEXTURE_COORDS = System::Word(0xb03);
static _DELPHI_CONST System::Word GL_CURRENT_RASTER_COLOR = System::Word(0xb04);
static _DELPHI_CONST System::Word GL_CURRENT_RASTER_INDEX = System::Word(0xb05);
static _DELPHI_CONST System::Word GL_CURRENT_RASTER_TEXTURE_COORDS = System::Word(0xb06);
static _DELPHI_CONST System::Word GL_CURRENT_RASTER_POSITION = System::Word(0xb07);
static _DELPHI_CONST System::Word GL_CURRENT_RASTER_POSITION_VALID = System::Word(0xb08);
static _DELPHI_CONST System::Word GL_CURRENT_RASTER_DISTANCE = System::Word(0xb09);
static _DELPHI_CONST System::Word GL_POINT_SMOOTH = System::Word(0xb10);
static _DELPHI_CONST System::Word GL_LINE_STIPPLE = System::Word(0xb24);
static _DELPHI_CONST System::Word GL_LINE_STIPPLE_PATTERN = System::Word(0xb25);
static _DELPHI_CONST System::Word GL_LINE_STIPPLE_REPEAT = System::Word(0xb26);
static _DELPHI_CONST System::Word GL_LIST_MODE = System::Word(0xb30);
static _DELPHI_CONST System::Word GL_MAX_LIST_NESTING = System::Word(0xb31);
static _DELPHI_CONST System::Word GL_LIST_BASE = System::Word(0xb32);
static _DELPHI_CONST System::Word GL_LIST_INDEX = System::Word(0xb33);
static _DELPHI_CONST System::Word GL_POLYGON_MODE = System::Word(0xb40);
static _DELPHI_CONST System::Word GL_POLYGON_STIPPLE = System::Word(0xb42);
static _DELPHI_CONST System::Word GL_EDGE_FLAG = System::Word(0xb43);
static _DELPHI_CONST System::Word GL_LIGHTING = System::Word(0xb50);
static _DELPHI_CONST System::Word GL_LIGHT_MODEL_LOCAL_VIEWER = System::Word(0xb51);
static _DELPHI_CONST System::Word GL_LIGHT_MODEL_TWO_SIDE = System::Word(0xb52);
static _DELPHI_CONST System::Word GL_LIGHT_MODEL_AMBIENT = System::Word(0xb53);
static _DELPHI_CONST System::Word GL_SHADE_MODEL = System::Word(0xb54);
static _DELPHI_CONST System::Word GL_COLOR_MATERIAL_FACE = System::Word(0xb55);
static _DELPHI_CONST System::Word GL_COLOR_MATERIAL_PARAMETER = System::Word(0xb56);
static _DELPHI_CONST System::Word GL_COLOR_MATERIAL = System::Word(0xb57);
static _DELPHI_CONST System::Word GL_FOG = System::Word(0xb60);
static _DELPHI_CONST System::Word GL_FOG_INDEX = System::Word(0xb61);
static _DELPHI_CONST System::Word GL_FOG_DENSITY = System::Word(0xb62);
static _DELPHI_CONST System::Word GL_FOG_START = System::Word(0xb63);
static _DELPHI_CONST System::Word GL_FOG_END = System::Word(0xb64);
static _DELPHI_CONST System::Word GL_FOG_MODE = System::Word(0xb65);
static _DELPHI_CONST System::Word GL_FOG_COLOR = System::Word(0xb66);
static _DELPHI_CONST System::Word GL_ACCUM_CLEAR_VALUE = System::Word(0xb80);
static _DELPHI_CONST System::Word GL_MATRIX_MODE = System::Word(0xba0);
static _DELPHI_CONST System::Word GL_NORMALIZE = System::Word(0xba1);
static _DELPHI_CONST System::Word GL_MODELVIEW_STACK_DEPTH = System::Word(0xba3);
static _DELPHI_CONST System::Word GL_PROJECTION_STACK_DEPTH = System::Word(0xba4);
static _DELPHI_CONST System::Word GL_TEXTURE_STACK_DEPTH = System::Word(0xba5);
static _DELPHI_CONST System::Word GL_MODELVIEW_MATRIX = System::Word(0xba6);
static _DELPHI_CONST System::Word GL_PROJECTION_MATRIX = System::Word(0xba7);
static _DELPHI_CONST System::Word GL_TEXTURE_MATRIX = System::Word(0xba8);
static _DELPHI_CONST System::Word GL_ATTRIB_STACK_DEPTH = System::Word(0xbb0);
static _DELPHI_CONST System::Word GL_CLIENT_ATTRIB_STACK_DEPTH = System::Word(0xbb1);
static _DELPHI_CONST System::Word GL_ALPHA_TEST = System::Word(0xbc0);
static _DELPHI_CONST System::Word GL_ALPHA_TEST_FUNC = System::Word(0xbc1);
static _DELPHI_CONST System::Word GL_ALPHA_TEST_REF = System::Word(0xbc2);
static _DELPHI_CONST System::Word GL_INDEX_LOGIC_OP = System::Word(0xbf1);
static _DELPHI_CONST System::Word GL_AUX_BUFFERS = System::Word(0xc00);
static _DELPHI_CONST System::Word GL_INDEX_CLEAR_VALUE = System::Word(0xc20);
static _DELPHI_CONST System::Word GL_INDEX_WRITEMASK = System::Word(0xc21);
static _DELPHI_CONST System::Word GL_INDEX_MODE = System::Word(0xc30);
static _DELPHI_CONST System::Word GL_RGBA_MODE = System::Word(0xc31);
static _DELPHI_CONST System::Word GL_RENDER_MODE = System::Word(0xc40);
static _DELPHI_CONST System::Word GL_PERSPECTIVE_CORRECTION_HINT = System::Word(0xc50);
static _DELPHI_CONST System::Word GL_POINT_SMOOTH_HINT = System::Word(0xc51);
static _DELPHI_CONST System::Word GL_FOG_HINT = System::Word(0xc54);
static _DELPHI_CONST System::Word GL_TEXTURE_GEN_S = System::Word(0xc60);
static _DELPHI_CONST System::Word GL_TEXTURE_GEN_T = System::Word(0xc61);
static _DELPHI_CONST System::Word GL_TEXTURE_GEN_R = System::Word(0xc62);
static _DELPHI_CONST System::Word GL_TEXTURE_GEN_Q = System::Word(0xc63);
static _DELPHI_CONST System::Word GL_PIXEL_MAP_I_TO_I = System::Word(0xc70);
static _DELPHI_CONST System::Word GL_PIXEL_MAP_S_TO_S = System::Word(0xc71);
static _DELPHI_CONST System::Word GL_PIXEL_MAP_I_TO_R = System::Word(0xc72);
static _DELPHI_CONST System::Word GL_PIXEL_MAP_I_TO_G = System::Word(0xc73);
static _DELPHI_CONST System::Word GL_PIXEL_MAP_I_TO_B = System::Word(0xc74);
static _DELPHI_CONST System::Word GL_PIXEL_MAP_I_TO_A = System::Word(0xc75);
static _DELPHI_CONST System::Word GL_PIXEL_MAP_R_TO_R = System::Word(0xc76);
static _DELPHI_CONST System::Word GL_PIXEL_MAP_G_TO_G = System::Word(0xc77);
static _DELPHI_CONST System::Word GL_PIXEL_MAP_B_TO_B = System::Word(0xc78);
static _DELPHI_CONST System::Word GL_PIXEL_MAP_A_TO_A = System::Word(0xc79);
static _DELPHI_CONST System::Word GL_PIXEL_MAP_I_TO_I_SIZE = System::Word(0xcb0);
static _DELPHI_CONST System::Word GL_PIXEL_MAP_S_TO_S_SIZE = System::Word(0xcb1);
static _DELPHI_CONST System::Word GL_PIXEL_MAP_I_TO_R_SIZE = System::Word(0xcb2);
static _DELPHI_CONST System::Word GL_PIXEL_MAP_I_TO_G_SIZE = System::Word(0xcb3);
static _DELPHI_CONST System::Word GL_PIXEL_MAP_I_TO_B_SIZE = System::Word(0xcb4);
static _DELPHI_CONST System::Word GL_PIXEL_MAP_I_TO_A_SIZE = System::Word(0xcb5);
static _DELPHI_CONST System::Word GL_PIXEL_MAP_R_TO_R_SIZE = System::Word(0xcb6);
static _DELPHI_CONST System::Word GL_PIXEL_MAP_G_TO_G_SIZE = System::Word(0xcb7);
static _DELPHI_CONST System::Word GL_PIXEL_MAP_B_TO_B_SIZE = System::Word(0xcb8);
static _DELPHI_CONST System::Word GL_PIXEL_MAP_A_TO_A_SIZE = System::Word(0xcb9);
static _DELPHI_CONST System::Word GL_MAP_COLOR = System::Word(0xd10);
static _DELPHI_CONST System::Word GL_MAP_STENCIL = System::Word(0xd11);
static _DELPHI_CONST System::Word GL_INDEX_SHIFT = System::Word(0xd12);
static _DELPHI_CONST System::Word GL_INDEX_OFFSET = System::Word(0xd13);
static _DELPHI_CONST System::Word GL_RED_SCALE = System::Word(0xd14);
static _DELPHI_CONST System::Word GL_RED_BIAS = System::Word(0xd15);
static _DELPHI_CONST System::Word GL_ZOOM_X = System::Word(0xd16);
static _DELPHI_CONST System::Word GL_ZOOM_Y = System::Word(0xd17);
static _DELPHI_CONST System::Word GL_GREEN_SCALE = System::Word(0xd18);
static _DELPHI_CONST System::Word GL_GREEN_BIAS = System::Word(0xd19);
static _DELPHI_CONST System::Word GL_BLUE_SCALE = System::Word(0xd1a);
static _DELPHI_CONST System::Word GL_BLUE_BIAS = System::Word(0xd1b);
static _DELPHI_CONST System::Word GL_ALPHA_SCALE = System::Word(0xd1c);
static _DELPHI_CONST System::Word GL_ALPHA_BIAS = System::Word(0xd1d);
static _DELPHI_CONST System::Word GL_DEPTH_SCALE = System::Word(0xd1e);
static _DELPHI_CONST System::Word GL_DEPTH_BIAS = System::Word(0xd1f);
static _DELPHI_CONST System::Word GL_MAX_EVAL_ORDER = System::Word(0xd30);
static _DELPHI_CONST System::Word GL_MAX_LIGHTS = System::Word(0xd31);
static _DELPHI_CONST System::Word GL_MAX_CLIP_PLANES = System::Word(0xd32);
static _DELPHI_CONST System::Word GL_MAX_PIXEL_MAP_TABLE = System::Word(0xd34);
static _DELPHI_CONST System::Word GL_MAX_ATTRIB_STACK_DEPTH = System::Word(0xd35);
static _DELPHI_CONST System::Word GL_MAX_MODELVIEW_STACK_DEPTH = System::Word(0xd36);
static _DELPHI_CONST System::Word GL_MAX_NAME_STACK_DEPTH = System::Word(0xd37);
static _DELPHI_CONST System::Word GL_MAX_PROJECTION_STACK_DEPTH = System::Word(0xd38);
static _DELPHI_CONST System::Word GL_MAX_TEXTURE_STACK_DEPTH = System::Word(0xd39);
static _DELPHI_CONST System::Word GL_MAX_CLIENT_ATTRIB_STACK_DEPTH = System::Word(0xd3b);
static _DELPHI_CONST System::Word GL_INDEX_BITS = System::Word(0xd51);
static _DELPHI_CONST System::Word GL_RED_BITS = System::Word(0xd52);
static _DELPHI_CONST System::Word GL_GREEN_BITS = System::Word(0xd53);
static _DELPHI_CONST System::Word GL_BLUE_BITS = System::Word(0xd54);
static _DELPHI_CONST System::Word GL_ALPHA_BITS = System::Word(0xd55);
static _DELPHI_CONST System::Word GL_DEPTH_BITS = System::Word(0xd56);
static _DELPHI_CONST System::Word GL_STENCIL_BITS = System::Word(0xd57);
static _DELPHI_CONST System::Word GL_ACCUM_RED_BITS = System::Word(0xd58);
static _DELPHI_CONST System::Word GL_ACCUM_GREEN_BITS = System::Word(0xd59);
static _DELPHI_CONST System::Word GL_ACCUM_BLUE_BITS = System::Word(0xd5a);
static _DELPHI_CONST System::Word GL_ACCUM_ALPHA_BITS = System::Word(0xd5b);
static _DELPHI_CONST System::Word GL_NAME_STACK_DEPTH = System::Word(0xd70);
static _DELPHI_CONST System::Word GL_AUTO_NORMAL = System::Word(0xd80);
static _DELPHI_CONST System::Word GL_MAP1_COLOR_4 = System::Word(0xd90);
static _DELPHI_CONST System::Word GL_MAP1_INDEX = System::Word(0xd91);
static _DELPHI_CONST System::Word GL_MAP1_NORMAL = System::Word(0xd92);
static _DELPHI_CONST System::Word GL_MAP1_TEXTURE_COORD_1 = System::Word(0xd93);
static _DELPHI_CONST System::Word GL_MAP1_TEXTURE_COORD_2 = System::Word(0xd94);
static _DELPHI_CONST System::Word GL_MAP1_TEXTURE_COORD_3 = System::Word(0xd95);
static _DELPHI_CONST System::Word GL_MAP1_TEXTURE_COORD_4 = System::Word(0xd96);
static _DELPHI_CONST System::Word GL_MAP1_VERTEX_3 = System::Word(0xd97);
static _DELPHI_CONST System::Word GL_MAP1_VERTEX_4 = System::Word(0xd98);
static _DELPHI_CONST System::Word GL_MAP2_COLOR_4 = System::Word(0xdb0);
static _DELPHI_CONST System::Word GL_MAP2_INDEX = System::Word(0xdb1);
static _DELPHI_CONST System::Word GL_MAP2_NORMAL = System::Word(0xdb2);
static _DELPHI_CONST System::Word GL_MAP2_TEXTURE_COORD_1 = System::Word(0xdb3);
static _DELPHI_CONST System::Word GL_MAP2_TEXTURE_COORD_2 = System::Word(0xdb4);
static _DELPHI_CONST System::Word GL_MAP2_TEXTURE_COORD_3 = System::Word(0xdb5);
static _DELPHI_CONST System::Word GL_MAP2_TEXTURE_COORD_4 = System::Word(0xdb6);
static _DELPHI_CONST System::Word GL_MAP2_VERTEX_3 = System::Word(0xdb7);
static _DELPHI_CONST System::Word GL_MAP2_VERTEX_4 = System::Word(0xdb8);
static _DELPHI_CONST System::Word GL_MAP1_GRID_DOMAIN = System::Word(0xdd0);
static _DELPHI_CONST System::Word GL_MAP1_GRID_SEGMENTS = System::Word(0xdd1);
static _DELPHI_CONST System::Word GL_MAP2_GRID_DOMAIN = System::Word(0xdd2);
static _DELPHI_CONST System::Word GL_MAP2_GRID_SEGMENTS = System::Word(0xdd3);
static _DELPHI_CONST System::Word GL_FEEDBACK_BUFFER_POINTER = System::Word(0xdf0);
static _DELPHI_CONST System::Word GL_FEEDBACK_BUFFER_SIZE = System::Word(0xdf1);
static _DELPHI_CONST System::Word GL_FEEDBACK_BUFFER_TYPE = System::Word(0xdf2);
static _DELPHI_CONST System::Word GL_SELECTION_BUFFER_POINTER = System::Word(0xdf3);
static _DELPHI_CONST System::Word GL_SELECTION_BUFFER_SIZE = System::Word(0xdf4);
static _DELPHI_CONST System::Word GL_LIGHT0 = System::Word(0x4000);
static _DELPHI_CONST System::Word GL_LIGHT1 = System::Word(0x4001);
static _DELPHI_CONST System::Word GL_LIGHT2 = System::Word(0x4002);
static _DELPHI_CONST System::Word GL_LIGHT3 = System::Word(0x4003);
static _DELPHI_CONST System::Word GL_LIGHT4 = System::Word(0x4004);
static _DELPHI_CONST System::Word GL_LIGHT5 = System::Word(0x4005);
static _DELPHI_CONST System::Word GL_LIGHT6 = System::Word(0x4006);
static _DELPHI_CONST System::Word GL_LIGHT7 = System::Word(0x4007);
static _DELPHI_CONST System::Word GL_AMBIENT = System::Word(0x1200);
static _DELPHI_CONST System::Word GL_DIFFUSE = System::Word(0x1201);
static _DELPHI_CONST System::Word GL_SPECULAR = System::Word(0x1202);
static _DELPHI_CONST System::Word GL_POSITION = System::Word(0x1203);
static _DELPHI_CONST System::Word GL_SPOT_DIRECTION = System::Word(0x1204);
static _DELPHI_CONST System::Word GL_SPOT_EXPONENT = System::Word(0x1205);
static _DELPHI_CONST System::Word GL_SPOT_CUTOFF = System::Word(0x1206);
static _DELPHI_CONST System::Word GL_CONSTANT_ATTENUATION = System::Word(0x1207);
static _DELPHI_CONST System::Word GL_LINEAR_ATTENUATION = System::Word(0x1208);
static _DELPHI_CONST System::Word GL_QUADRATIC_ATTENUATION = System::Word(0x1209);
static _DELPHI_CONST System::Word GL_COMPILE = System::Word(0x1300);
static _DELPHI_CONST System::Word GL_COMPILE_AND_EXECUTE = System::Word(0x1301);
static _DELPHI_CONST System::Word GL_EMISSION = System::Word(0x1600);
static _DELPHI_CONST System::Word GL_SHININESS = System::Word(0x1601);
static _DELPHI_CONST System::Word GL_AMBIENT_AND_DIFFUSE = System::Word(0x1602);
static _DELPHI_CONST System::Word GL_COLOR_INDEXES = System::Word(0x1603);
static _DELPHI_CONST System::Word GL_MODELVIEW = System::Word(0x1700);
static _DELPHI_CONST System::Word GL_PROJECTION = System::Word(0x1701);
static _DELPHI_CONST System::Word GL_COLOR_INDEX = System::Word(0x1900);
static _DELPHI_CONST System::Word GL_LUMINANCE = System::Word(0x1909);
static _DELPHI_CONST System::Word GL_LUMINANCE_ALPHA = System::Word(0x190a);
static _DELPHI_CONST System::Word GL_BITMAP = System::Word(0x1a00);
static _DELPHI_CONST System::Word GL_RENDER = System::Word(0x1c00);
static _DELPHI_CONST System::Word GL_FEEDBACK = System::Word(0x1c01);
static _DELPHI_CONST System::Word GL_SELECT = System::Word(0x1c02);
static _DELPHI_CONST System::Word GL_FLAT = System::Word(0x1d00);
static _DELPHI_CONST System::Word GL_SMOOTH = System::Word(0x1d01);
static _DELPHI_CONST System::Word GL_S = System::Word(0x2000);
static _DELPHI_CONST System::Word GL_T = System::Word(0x2001);
static _DELPHI_CONST System::Word GL_R = System::Word(0x2002);
static _DELPHI_CONST System::Word GL_Q = System::Word(0x2003);
static _DELPHI_CONST System::Word GL_MODULATE = System::Word(0x2100);
static _DELPHI_CONST System::Word GL_DECAL = System::Word(0x2101);
static _DELPHI_CONST System::Word GL_TEXTURE_ENV_MODE = System::Word(0x2200);
static _DELPHI_CONST System::Word GL_TEXTURE_ENV_COLOR = System::Word(0x2201);
static _DELPHI_CONST System::Word GL_TEXTURE_ENV = System::Word(0x2300);
static _DELPHI_CONST System::Word GL_EYE_LINEAR = System::Word(0x2400);
static _DELPHI_CONST System::Word GL_OBJECT_LINEAR = System::Word(0x2401);
static _DELPHI_CONST System::Word GL_SPHERE_MAP = System::Word(0x2402);
static _DELPHI_CONST System::Word GL_TEXTURE_GEN_MODE = System::Word(0x2500);
static _DELPHI_CONST System::Word GL_OBJECT_PLANE = System::Word(0x2501);
static _DELPHI_CONST System::Word GL_EYE_PLANE = System::Word(0x2502);
static _DELPHI_CONST System::Word GL_CLAMP = System::Word(0x2900);
static _DELPHI_CONST System::Int8 GL_CLIENT_PIXEL_STORE_BIT = System::Int8(0x1);
static _DELPHI_CONST System::Int8 GL_CLIENT_VERTEX_ARRAY_BIT = System::Int8(0x2);
static _DELPHI_CONST unsigned GL_CLIENT_ALL_ATTRIB_BITS = unsigned(0xffffffff);
static _DELPHI_CONST System::Word GL_ALPHA4 = System::Word(0x803b);
static _DELPHI_CONST System::Word GL_ALPHA8 = System::Word(0x803c);
static _DELPHI_CONST System::Word GL_ALPHA12 = System::Word(0x803d);
static _DELPHI_CONST System::Word GL_ALPHA16 = System::Word(0x803e);
static _DELPHI_CONST System::Word GL_LUMINANCE4 = System::Word(0x803f);
static _DELPHI_CONST System::Word GL_LUMINANCE8 = System::Word(0x8040);
static _DELPHI_CONST System::Word GL_LUMINANCE12 = System::Word(0x8041);
static _DELPHI_CONST System::Word GL_LUMINANCE16 = System::Word(0x8042);
static _DELPHI_CONST System::Word GL_LUMINANCE4_ALPHA4 = System::Word(0x8043);
static _DELPHI_CONST System::Word GL_LUMINANCE6_ALPHA2 = System::Word(0x8044);
static _DELPHI_CONST System::Word GL_LUMINANCE8_ALPHA8 = System::Word(0x8045);
static _DELPHI_CONST System::Word GL_LUMINANCE12_ALPHA4 = System::Word(0x8046);
static _DELPHI_CONST System::Word GL_LUMINANCE12_ALPHA12 = System::Word(0x8047);
static _DELPHI_CONST System::Word GL_LUMINANCE16_ALPHA16 = System::Word(0x8048);
static _DELPHI_CONST System::Word GL_INTENSITY = System::Word(0x8049);
static _DELPHI_CONST System::Word GL_INTENSITY4 = System::Word(0x804a);
static _DELPHI_CONST System::Word GL_INTENSITY8 = System::Word(0x804b);
static _DELPHI_CONST System::Word GL_INTENSITY12 = System::Word(0x804c);
static _DELPHI_CONST System::Word GL_INTENSITY16 = System::Word(0x804d);
static _DELPHI_CONST System::Word GL_TEXTURE_LUMINANCE_SIZE = System::Word(0x8060);
static _DELPHI_CONST System::Word GL_TEXTURE_INTENSITY_SIZE = System::Word(0x8061);
static _DELPHI_CONST System::Word GL_TEXTURE_PRIORITY = System::Word(0x8066);
static _DELPHI_CONST System::Word GL_TEXTURE_RESIDENT = System::Word(0x8067);
static _DELPHI_CONST System::Word GL_VERTEX_ARRAY = System::Word(0x8074);
static _DELPHI_CONST System::Word GL_NORMAL_ARRAY = System::Word(0x8075);
static _DELPHI_CONST System::Word GL_COLOR_ARRAY = System::Word(0x8076);
static _DELPHI_CONST System::Word GL_INDEX_ARRAY = System::Word(0x8077);
static _DELPHI_CONST System::Word GL_TEXTURE_COORD_ARRAY = System::Word(0x8078);
static _DELPHI_CONST System::Word GL_EDGE_FLAG_ARRAY = System::Word(0x8079);
static _DELPHI_CONST System::Word GL_VERTEX_ARRAY_SIZE = System::Word(0x807a);
static _DELPHI_CONST System::Word GL_VERTEX_ARRAY_TYPE = System::Word(0x807b);
static _DELPHI_CONST System::Word GL_VERTEX_ARRAY_STRIDE = System::Word(0x807c);
static _DELPHI_CONST System::Word GL_NORMAL_ARRAY_TYPE = System::Word(0x807e);
static _DELPHI_CONST System::Word GL_NORMAL_ARRAY_STRIDE = System::Word(0x807f);
static _DELPHI_CONST System::Word GL_COLOR_ARRAY_SIZE = System::Word(0x8081);
static _DELPHI_CONST System::Word GL_COLOR_ARRAY_TYPE = System::Word(0x8082);
static _DELPHI_CONST System::Word GL_COLOR_ARRAY_STRIDE = System::Word(0x8083);
static _DELPHI_CONST System::Word GL_INDEX_ARRAY_TYPE = System::Word(0x8085);
static _DELPHI_CONST System::Word GL_INDEX_ARRAY_STRIDE = System::Word(0x8086);
static _DELPHI_CONST System::Word GL_TEXTURE_COORD_ARRAY_SIZE = System::Word(0x8088);
static _DELPHI_CONST System::Word GL_TEXTURE_COORD_ARRAY_TYPE = System::Word(0x8089);
static _DELPHI_CONST System::Word GL_TEXTURE_COORD_ARRAY_STRIDE = System::Word(0x808a);
static _DELPHI_CONST System::Word GL_EDGE_FLAG_ARRAY_STRIDE = System::Word(0x808c);
static _DELPHI_CONST System::Word GL_VERTEX_ARRAY_POINTER = System::Word(0x808e);
static _DELPHI_CONST System::Word GL_NORMAL_ARRAY_POINTER = System::Word(0x808f);
static _DELPHI_CONST System::Word GL_COLOR_ARRAY_POINTER = System::Word(0x8090);
static _DELPHI_CONST System::Word GL_INDEX_ARRAY_POINTER = System::Word(0x8091);
static _DELPHI_CONST System::Word GL_TEXTURE_COORD_ARRAY_POINTER = System::Word(0x8092);
static _DELPHI_CONST System::Word GL_EDGE_FLAG_ARRAY_POINTER = System::Word(0x8093);
static _DELPHI_CONST System::Word GL_V2F = System::Word(0x2a20);
static _DELPHI_CONST System::Word GL_V3F = System::Word(0x2a21);
static _DELPHI_CONST System::Word GL_C4UB_V2F = System::Word(0x2a22);
static _DELPHI_CONST System::Word GL_C4UB_V3F = System::Word(0x2a23);
static _DELPHI_CONST System::Word GL_C3F_V3F = System::Word(0x2a24);
static _DELPHI_CONST System::Word GL_N3F_V3F = System::Word(0x2a25);
static _DELPHI_CONST System::Word GL_C4F_N3F_V3F = System::Word(0x2a26);
static _DELPHI_CONST System::Word GL_T2F_V3F = System::Word(0x2a27);
static _DELPHI_CONST System::Word GL_T4F_V4F = System::Word(0x2a28);
static _DELPHI_CONST System::Word GL_T2F_C4UB_V3F = System::Word(0x2a29);
static _DELPHI_CONST System::Word GL_T2F_C3F_V3F = System::Word(0x2a2a);
static _DELPHI_CONST System::Word GL_T2F_N3F_V3F = System::Word(0x2a2b);
static _DELPHI_CONST System::Word GL_T2F_C4F_N3F_V3F = System::Word(0x2a2c);
static _DELPHI_CONST System::Word GL_T4F_C4F_N3F_V4F = System::Word(0x2a2d);
static _DELPHI_CONST System::Word GL_COLOR_TABLE_FORMAT_EXT = System::Word(0x80d8);
static _DELPHI_CONST System::Word GL_COLOR_TABLE_WIDTH_EXT = System::Word(0x80d9);
static _DELPHI_CONST System::Word GL_COLOR_TABLE_RED_SIZE_EXT = System::Word(0x80da);
static _DELPHI_CONST System::Word GL_COLOR_TABLE_GREEN_SIZE_EXT = System::Word(0x80db);
static _DELPHI_CONST System::Word GL_COLOR_TABLE_BLUE_SIZE_EXT = System::Word(0x80dc);
static _DELPHI_CONST System::Word GL_COLOR_TABLE_ALPHA_SIZE_EXT = System::Word(0x80dd);
static _DELPHI_CONST System::Word GL_COLOR_TABLE_LUMINANCE_SIZE_EXT = System::Word(0x80de);
static _DELPHI_CONST System::Word GL_COLOR_TABLE_INTENSITY_SIZE_EXT = System::Word(0x80df);
static _DELPHI_CONST System::Word GL_LOGIC_OP = System::Word(0xbf1);
static _DELPHI_CONST System::Word GL_TEXTURE_COMPONENTS = System::Word(0x1003);
static _DELPHI_CONST System::Word GL_UNSIGNED_BYTE_3_3_2 = System::Word(0x8032);
static _DELPHI_CONST System::Word GL_UNSIGNED_SHORT_4_4_4_4 = System::Word(0x8033);
static _DELPHI_CONST System::Word GL_UNSIGNED_SHORT_5_5_5_1 = System::Word(0x8034);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_8_8_8_8 = System::Word(0x8035);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_10_10_10_2 = System::Word(0x8036);
static _DELPHI_CONST System::Word GL_TEXTURE_BINDING_3D = System::Word(0x806a);
static _DELPHI_CONST System::Word GL_PACK_SKIP_IMAGES = System::Word(0x806b);
static _DELPHI_CONST System::Word GL_PACK_IMAGE_HEIGHT = System::Word(0x806c);
static _DELPHI_CONST System::Word GL_UNPACK_SKIP_IMAGES = System::Word(0x806d);
static _DELPHI_CONST System::Word GL_UNPACK_IMAGE_HEIGHT = System::Word(0x806e);
static _DELPHI_CONST System::Word GL_TEXTURE_3D = System::Word(0x806f);
static _DELPHI_CONST System::Word GL_PROXY_TEXTURE_3D = System::Word(0x8070);
static _DELPHI_CONST System::Word GL_TEXTURE_DEPTH = System::Word(0x8071);
static _DELPHI_CONST System::Word GL_TEXTURE_WRAP_R = System::Word(0x8072);
static _DELPHI_CONST System::Word GL_MAX_3D_TEXTURE_SIZE = System::Word(0x8073);
static _DELPHI_CONST System::Word GL_UNSIGNED_BYTE_2_3_3_REV = System::Word(0x8362);
static _DELPHI_CONST System::Word GL_UNSIGNED_SHORT_5_6_5 = System::Word(0x8363);
static _DELPHI_CONST System::Word GL_UNSIGNED_SHORT_5_6_5_REV = System::Word(0x8364);
static _DELPHI_CONST System::Word GL_UNSIGNED_SHORT_4_4_4_4_REV = System::Word(0x8365);
static _DELPHI_CONST System::Word GL_UNSIGNED_SHORT_1_5_5_5_REV = System::Word(0x8366);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_8_8_8_8_REV = System::Word(0x8367);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_2_10_10_10_REV = System::Word(0x8368);
static _DELPHI_CONST System::Word GL_BGR = System::Word(0x80e0);
static _DELPHI_CONST System::Word GL_BGRA = System::Word(0x80e1);
static _DELPHI_CONST System::Word GL_MAX_ELEMENTS_VERTICES = System::Word(0x80e8);
static _DELPHI_CONST System::Word GL_MAX_ELEMENTS_INDICES = System::Word(0x80e9);
static _DELPHI_CONST System::Word GL_CLAMP_TO_EDGE = System::Word(0x812f);
static _DELPHI_CONST System::Word GL_TEXTURE_MIN_LOD = System::Word(0x813a);
static _DELPHI_CONST System::Word GL_TEXTURE_MAX_LOD = System::Word(0x813b);
static _DELPHI_CONST System::Word GL_TEXTURE_BASE_LEVEL = System::Word(0x813c);
static _DELPHI_CONST System::Word GL_TEXTURE_MAX_LEVEL = System::Word(0x813d);
static _DELPHI_CONST System::Word GL_SMOOTH_POINT_SIZE_RANGE = System::Word(0xb12);
static _DELPHI_CONST System::Word GL_SMOOTH_POINT_SIZE_GRANULARITY = System::Word(0xb13);
static _DELPHI_CONST System::Word GL_SMOOTH_LINE_WIDTH_RANGE = System::Word(0xb22);
static _DELPHI_CONST System::Word GL_SMOOTH_LINE_WIDTH_GRANULARITY = System::Word(0xb23);
static _DELPHI_CONST System::Word GL_ALIASED_LINE_WIDTH_RANGE = System::Word(0x846e);
static _DELPHI_CONST System::Word GL_RESCALE_NORMAL = System::Word(0x803a);
static _DELPHI_CONST System::Word GL_LIGHT_MODEL_COLOR_CONTROL = System::Word(0x81f8);
static _DELPHI_CONST System::Word GL_SINGLE_COLOR = System::Word(0x81f9);
static _DELPHI_CONST System::Word GL_SEPARATE_SPECULAR_COLOR = System::Word(0x81fa);
static _DELPHI_CONST System::Word GL_ALIASED_POINT_SIZE_RANGE = System::Word(0x846d);
static _DELPHI_CONST System::Word GL_TEXTURE0 = System::Word(0x84c0);
static _DELPHI_CONST System::Word GL_TEXTURE1 = System::Word(0x84c1);
static _DELPHI_CONST System::Word GL_TEXTURE2 = System::Word(0x84c2);
static _DELPHI_CONST System::Word GL_TEXTURE3 = System::Word(0x84c3);
static _DELPHI_CONST System::Word GL_TEXTURE4 = System::Word(0x84c4);
static _DELPHI_CONST System::Word GL_TEXTURE5 = System::Word(0x84c5);
static _DELPHI_CONST System::Word GL_TEXTURE6 = System::Word(0x84c6);
static _DELPHI_CONST System::Word GL_TEXTURE7 = System::Word(0x84c7);
static _DELPHI_CONST System::Word GL_TEXTURE8 = System::Word(0x84c8);
static _DELPHI_CONST System::Word GL_TEXTURE9 = System::Word(0x84c9);
static _DELPHI_CONST System::Word GL_TEXTURE10 = System::Word(0x84ca);
static _DELPHI_CONST System::Word GL_TEXTURE11 = System::Word(0x84cb);
static _DELPHI_CONST System::Word GL_TEXTURE12 = System::Word(0x84cc);
static _DELPHI_CONST System::Word GL_TEXTURE13 = System::Word(0x84cd);
static _DELPHI_CONST System::Word GL_TEXTURE14 = System::Word(0x84ce);
static _DELPHI_CONST System::Word GL_TEXTURE15 = System::Word(0x84cf);
static _DELPHI_CONST System::Word GL_TEXTURE16 = System::Word(0x84d0);
static _DELPHI_CONST System::Word GL_TEXTURE17 = System::Word(0x84d1);
static _DELPHI_CONST System::Word GL_TEXTURE18 = System::Word(0x84d2);
static _DELPHI_CONST System::Word GL_TEXTURE19 = System::Word(0x84d3);
static _DELPHI_CONST System::Word GL_TEXTURE20 = System::Word(0x84d4);
static _DELPHI_CONST System::Word GL_TEXTURE21 = System::Word(0x84d5);
static _DELPHI_CONST System::Word GL_TEXTURE22 = System::Word(0x84d6);
static _DELPHI_CONST System::Word GL_TEXTURE23 = System::Word(0x84d7);
static _DELPHI_CONST System::Word GL_TEXTURE24 = System::Word(0x84d8);
static _DELPHI_CONST System::Word GL_TEXTURE25 = System::Word(0x84d9);
static _DELPHI_CONST System::Word GL_TEXTURE26 = System::Word(0x84da);
static _DELPHI_CONST System::Word GL_TEXTURE27 = System::Word(0x84db);
static _DELPHI_CONST System::Word GL_TEXTURE28 = System::Word(0x84dc);
static _DELPHI_CONST System::Word GL_TEXTURE29 = System::Word(0x84dd);
static _DELPHI_CONST System::Word GL_TEXTURE30 = System::Word(0x84de);
static _DELPHI_CONST System::Word GL_TEXTURE31 = System::Word(0x84df);
static _DELPHI_CONST System::Word GL_ACTIVE_TEXTURE = System::Word(0x84e0);
static _DELPHI_CONST System::Word GL_MULTISAMPLE = System::Word(0x809d);
static _DELPHI_CONST System::Word GL_SAMPLE_ALPHA_TO_COVERAGE = System::Word(0x809e);
static _DELPHI_CONST System::Word GL_SAMPLE_ALPHA_TO_ONE = System::Word(0x809f);
static _DELPHI_CONST System::Word GL_SAMPLE_COVERAGE = System::Word(0x80a0);
static _DELPHI_CONST System::Word GL_SAMPLE_BUFFERS = System::Word(0x80a8);
static _DELPHI_CONST System::Word GL_SAMPLES = System::Word(0x80a9);
static _DELPHI_CONST System::Word GL_SAMPLE_COVERAGE_VALUE = System::Word(0x80aa);
static _DELPHI_CONST System::Word GL_SAMPLE_COVERAGE_INVERT = System::Word(0x80ab);
static _DELPHI_CONST System::Word GL_TEXTURE_CUBE_MAP = System::Word(0x8513);
static _DELPHI_CONST System::Word GL_TEXTURE_BINDING_CUBE_MAP = System::Word(0x8514);
static _DELPHI_CONST System::Word GL_TEXTURE_CUBE_MAP_POSITIVE_X = System::Word(0x8515);
static _DELPHI_CONST System::Word GL_TEXTURE_CUBE_MAP_NEGATIVE_X = System::Word(0x8516);
static _DELPHI_CONST System::Word GL_TEXTURE_CUBE_MAP_POSITIVE_Y = System::Word(0x8517);
static _DELPHI_CONST System::Word GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = System::Word(0x8518);
static _DELPHI_CONST System::Word GL_TEXTURE_CUBE_MAP_POSITIVE_Z = System::Word(0x8519);
static _DELPHI_CONST System::Word GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = System::Word(0x851a);
static _DELPHI_CONST System::Word GL_PROXY_TEXTURE_CUBE_MAP = System::Word(0x851b);
static _DELPHI_CONST System::Word GL_MAX_CUBE_MAP_TEXTURE_SIZE = System::Word(0x851c);
static _DELPHI_CONST System::Word GL_COMPRESSED_RGB = System::Word(0x84ed);
static _DELPHI_CONST System::Word GL_COMPRESSED_RGBA = System::Word(0x84ee);
static _DELPHI_CONST System::Word GL_TEXTURE_COMPRESSION_HINT = System::Word(0x84ef);
static _DELPHI_CONST System::Word GL_TEXTURE_COMPRESSED_IMAGE_SIZE = System::Word(0x86a0);
static _DELPHI_CONST System::Word GL_TEXTURE_COMPRESSED = System::Word(0x86a1);
static _DELPHI_CONST System::Word GL_NUM_COMPRESSED_TEXTURE_FORMATS = System::Word(0x86a2);
static _DELPHI_CONST System::Word GL_COMPRESSED_TEXTURE_FORMATS = System::Word(0x86a3);
static _DELPHI_CONST System::Word GL_CLAMP_TO_BORDER = System::Word(0x812d);
static _DELPHI_CONST System::Word GL_CLIENT_ACTIVE_TEXTURE = System::Word(0x84e1);
static _DELPHI_CONST System::Word GL_MAX_TEXTURE_UNITS = System::Word(0x84e2);
static _DELPHI_CONST System::Word GL_TRANSPOSE_MODELVIEW_MATRIX = System::Word(0x84e3);
static _DELPHI_CONST System::Word GL_TRANSPOSE_PROJECTION_MATRIX = System::Word(0x84e4);
static _DELPHI_CONST System::Word GL_TRANSPOSE_TEXTURE_MATRIX = System::Word(0x84e5);
static _DELPHI_CONST System::Word GL_TRANSPOSE_COLOR_MATRIX = System::Word(0x84e6);
static _DELPHI_CONST int GL_MULTISAMPLE_BIT = int(0x20000000);
static _DELPHI_CONST System::Word GL_NORMAL_MAP = System::Word(0x8511);
static _DELPHI_CONST System::Word GL_REFLECTION_MAP = System::Word(0x8512);
static _DELPHI_CONST System::Word GL_COMPRESSED_ALPHA = System::Word(0x84e9);
static _DELPHI_CONST System::Word GL_COMPRESSED_LUMINANCE = System::Word(0x84ea);
static _DELPHI_CONST System::Word GL_COMPRESSED_LUMINANCE_ALPHA = System::Word(0x84eb);
static _DELPHI_CONST System::Word GL_COMPRESSED_INTENSITY = System::Word(0x84ec);
static _DELPHI_CONST System::Word GL_COMBINE = System::Word(0x8570);
static _DELPHI_CONST System::Word GL_COMBINE_RGB = System::Word(0x8571);
static _DELPHI_CONST System::Word GL_COMBINE_ALPHA = System::Word(0x8572);
static _DELPHI_CONST System::Word GL_SOURCE0_RGB = System::Word(0x8580);
static _DELPHI_CONST System::Word GL_SOURCE1_RGB = System::Word(0x8581);
static _DELPHI_CONST System::Word GL_SOURCE2_RGB = System::Word(0x8582);
static _DELPHI_CONST System::Word GL_SOURCE0_ALPHA = System::Word(0x8588);
static _DELPHI_CONST System::Word GL_SOURCE1_ALPHA = System::Word(0x8589);
static _DELPHI_CONST System::Word GL_SOURCE2_ALPHA = System::Word(0x858a);
static _DELPHI_CONST System::Word GL_OPERAND0_RGB = System::Word(0x8590);
static _DELPHI_CONST System::Word GL_OPERAND1_RGB = System::Word(0x8591);
static _DELPHI_CONST System::Word GL_OPERAND2_RGB = System::Word(0x8592);
static _DELPHI_CONST System::Word GL_OPERAND0_ALPHA = System::Word(0x8598);
static _DELPHI_CONST System::Word GL_OPERAND1_ALPHA = System::Word(0x8599);
static _DELPHI_CONST System::Word GL_OPERAND2_ALPHA = System::Word(0x859a);
static _DELPHI_CONST System::Word GL_RGB_SCALE = System::Word(0x8573);
static _DELPHI_CONST System::Word GL_ADD_SIGNED = System::Word(0x8574);
static _DELPHI_CONST System::Word GL_INTERPOLATE = System::Word(0x8575);
static _DELPHI_CONST System::Word GL_SUBTRACT = System::Word(0x84e7);
static _DELPHI_CONST System::Word GL_CONSTANT = System::Word(0x8576);
static _DELPHI_CONST System::Word GL_PRIMARY_COLOR = System::Word(0x8577);
static _DELPHI_CONST System::Word GL_PREVIOUS = System::Word(0x8578);
static _DELPHI_CONST System::Word GL_DOT3_RGB = System::Word(0x86ae);
static _DELPHI_CONST System::Word GL_DOT3_RGBA = System::Word(0x86af);
static _DELPHI_CONST System::Word GL_BLEND_DST_RGB = System::Word(0x80c8);
static _DELPHI_CONST System::Word GL_BLEND_SRC_RGB = System::Word(0x80c9);
static _DELPHI_CONST System::Word GL_BLEND_DST_ALPHA = System::Word(0x80ca);
static _DELPHI_CONST System::Word GL_BLEND_SRC_ALPHA = System::Word(0x80cb);
static _DELPHI_CONST System::Word GL_POINT_FADE_THRESHOLD_SIZE = System::Word(0x8128);
static _DELPHI_CONST System::Word GL_DEPTH_COMPONENT16 = System::Word(0x81a5);
static _DELPHI_CONST System::Word GL_DEPTH_COMPONENT24 = System::Word(0x81a6);
static _DELPHI_CONST System::Word GL_DEPTH_COMPONENT32 = System::Word(0x81a7);
static _DELPHI_CONST System::Word GL_MIRRORED_REPEAT = System::Word(0x8370);
static _DELPHI_CONST System::Word GL_MAX_TEXTURE_LOD_BIAS = System::Word(0x84fd);
static _DELPHI_CONST System::Word GL_TEXTURE_LOD_BIAS = System::Word(0x8501);
static _DELPHI_CONST System::Word GL_INCR_WRAP = System::Word(0x8507);
static _DELPHI_CONST System::Word GL_DECR_WRAP = System::Word(0x8508);
static _DELPHI_CONST System::Word GL_TEXTURE_DEPTH_SIZE = System::Word(0x884a);
static _DELPHI_CONST System::Word GL_TEXTURE_COMPARE_MODE = System::Word(0x884c);
static _DELPHI_CONST System::Word GL_TEXTURE_COMPARE_FUNC = System::Word(0x884d);
static _DELPHI_CONST System::Word GL_POINT_SIZE_MIN = System::Word(0x8126);
static _DELPHI_CONST System::Word GL_POINT_SIZE_MAX = System::Word(0x8127);
static _DELPHI_CONST System::Word GL_POINT_DISTANCE_ATTENUATION = System::Word(0x8129);
static _DELPHI_CONST System::Word GL_GENERATE_MIPMAP = System::Word(0x8191);
static _DELPHI_CONST System::Word GL_GENERATE_MIPMAP_HINT = System::Word(0x8192);
static _DELPHI_CONST System::Word GL_FOG_COORDINATE_SOURCE = System::Word(0x8450);
static _DELPHI_CONST System::Word GL_FOG_COORDINATE = System::Word(0x8451);
static _DELPHI_CONST System::Word GL_FRAGMENT_DEPTH = System::Word(0x8452);
static _DELPHI_CONST System::Word GL_CURRENT_FOG_COORDINATE = System::Word(0x8453);
static _DELPHI_CONST System::Word GL_FOG_COORDINATE_ARRAY_TYPE = System::Word(0x8454);
static _DELPHI_CONST System::Word GL_FOG_COORDINATE_ARRAY_STRIDE = System::Word(0x8455);
static _DELPHI_CONST System::Word GL_FOG_COORDINATE_ARRAY_POINTER = System::Word(0x8456);
static _DELPHI_CONST System::Word GL_FOG_COORDINATE_ARRAY = System::Word(0x8457);
static _DELPHI_CONST System::Word GL_COLOR_SUM = System::Word(0x8458);
static _DELPHI_CONST System::Word GL_CURRENT_SECONDARY_COLOR = System::Word(0x8459);
static _DELPHI_CONST System::Word GL_SECONDARY_COLOR_ARRAY_SIZE = System::Word(0x845a);
static _DELPHI_CONST System::Word GL_SECONDARY_COLOR_ARRAY_TYPE = System::Word(0x845b);
static _DELPHI_CONST System::Word GL_SECONDARY_COLOR_ARRAY_STRIDE = System::Word(0x845c);
static _DELPHI_CONST System::Word GL_SECONDARY_COLOR_ARRAY_POINTER = System::Word(0x845d);
static _DELPHI_CONST System::Word GL_SECONDARY_COLOR_ARRAY = System::Word(0x845e);
static _DELPHI_CONST System::Word GL_TEXTURE_FILTER_CONTROL = System::Word(0x8500);
static _DELPHI_CONST System::Word GL_DEPTH_TEXTURE_MODE = System::Word(0x884b);
static _DELPHI_CONST System::Word GL_COMPARE_R_TO_TEXTURE = System::Word(0x884e);
static _DELPHI_CONST System::Word GL_BUFFER_SIZE = System::Word(0x8764);
static _DELPHI_CONST System::Word GL_BUFFER_USAGE = System::Word(0x8765);
static _DELPHI_CONST System::Word GL_QUERY_COUNTER_BITS = System::Word(0x8864);
static _DELPHI_CONST System::Word GL_CURRENT_QUERY = System::Word(0x8865);
static _DELPHI_CONST System::Word GL_QUERY_RESULT = System::Word(0x8866);
static _DELPHI_CONST System::Word GL_QUERY_RESULT_AVAILABLE = System::Word(0x8867);
static _DELPHI_CONST System::Word GL_ARRAY_BUFFER = System::Word(0x8892);
static _DELPHI_CONST System::Word GL_ELEMENT_ARRAY_BUFFER = System::Word(0x8893);
static _DELPHI_CONST System::Word GL_ARRAY_BUFFER_BINDING = System::Word(0x8894);
static _DELPHI_CONST System::Word GL_ELEMENT_ARRAY_BUFFER_BINDING = System::Word(0x8895);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = System::Word(0x889f);
static _DELPHI_CONST System::Word GL_READ_ONLY = System::Word(0x88b8);
static _DELPHI_CONST System::Word GL_WRITE_ONLY = System::Word(0x88b9);
static _DELPHI_CONST System::Word GL_READ_WRITE = System::Word(0x88ba);
static _DELPHI_CONST System::Word GL_BUFFER_ACCESS = System::Word(0x88bb);
static _DELPHI_CONST System::Word GL_BUFFER_MAPPED = System::Word(0x88bc);
static _DELPHI_CONST System::Word GL_BUFFER_MAP_POINTER = System::Word(0x88bd);
static _DELPHI_CONST System::Word GL_STREAM_DRAW = System::Word(0x88e0);
static _DELPHI_CONST System::Word GL_STREAM_READ = System::Word(0x88e1);
static _DELPHI_CONST System::Word GL_STREAM_COPY = System::Word(0x88e2);
static _DELPHI_CONST System::Word GL_STATIC_DRAW = System::Word(0x88e4);
static _DELPHI_CONST System::Word GL_STATIC_READ = System::Word(0x88e5);
static _DELPHI_CONST System::Word GL_STATIC_COPY = System::Word(0x88e6);
static _DELPHI_CONST System::Word GL_DYNAMIC_DRAW = System::Word(0x88e8);
static _DELPHI_CONST System::Word GL_DYNAMIC_READ = System::Word(0x88e9);
static _DELPHI_CONST System::Word GL_DYNAMIC_COPY = System::Word(0x88ea);
static _DELPHI_CONST System::Word GL_SAMPLES_PASSED = System::Word(0x8914);
static _DELPHI_CONST System::Word GL_VERTEX_ARRAY_BUFFER_BINDING = System::Word(0x8896);
static _DELPHI_CONST System::Word GL_NORMAL_ARRAY_BUFFER_BINDING = System::Word(0x8897);
static _DELPHI_CONST System::Word GL_COLOR_ARRAY_BUFFER_BINDING = System::Word(0x8898);
static _DELPHI_CONST System::Word GL_INDEX_ARRAY_BUFFER_BINDING = System::Word(0x8899);
static _DELPHI_CONST System::Word GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING = System::Word(0x889a);
static _DELPHI_CONST System::Word GL_EDGE_FLAG_ARRAY_BUFFER_BINDING = System::Word(0x889b);
static _DELPHI_CONST System::Word GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING = System::Word(0x889c);
static _DELPHI_CONST System::Word GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING = System::Word(0x889d);
static _DELPHI_CONST System::Word GL_WEIGHT_ARRAY_BUFFER_BINDING = System::Word(0x889e);
static _DELPHI_CONST System::Word GL_FOG_COORD_SRC = System::Word(0x8450);
static _DELPHI_CONST System::Word GL_FOG_COORD = System::Word(0x8451);
static _DELPHI_CONST System::Word GL_CURRENT_FOG_COORD = System::Word(0x8453);
static _DELPHI_CONST System::Word GL_FOG_COORD_ARRAY_TYPE = System::Word(0x8454);
static _DELPHI_CONST System::Word GL_FOG_COORD_ARRAY_STRIDE = System::Word(0x8455);
static _DELPHI_CONST System::Word GL_FOG_COORD_ARRAY_POINTER = System::Word(0x8456);
static _DELPHI_CONST System::Word GL_FOG_COORD_ARRAY = System::Word(0x8457);
static _DELPHI_CONST System::Word GL_FOG_COORD_ARRAY_BUFFER_BINDING = System::Word(0x889d);
static _DELPHI_CONST System::Word GL_SRC0_RGB = System::Word(0x8580);
static _DELPHI_CONST System::Word GL_SRC1_RGB = System::Word(0x8581);
static _DELPHI_CONST System::Word GL_SRC2_RGB = System::Word(0x8582);
static _DELPHI_CONST System::Word GL_SRC0_ALPHA = System::Word(0x8588);
static _DELPHI_CONST System::Word GL_SRC1_ALPHA = System::Word(0x8589);
static _DELPHI_CONST System::Word GL_SRC2_ALPHA = System::Word(0x858a);
static _DELPHI_CONST System::Word GL_BLEND_EQUATION_RGB = System::Word(0x8009);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_ARRAY_ENABLED = System::Word(0x8622);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_ARRAY_SIZE = System::Word(0x8623);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_ARRAY_STRIDE = System::Word(0x8624);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_ARRAY_TYPE = System::Word(0x8625);
static _DELPHI_CONST System::Word GL_CURRENT_VERTEX_ATTRIB = System::Word(0x8626);
static _DELPHI_CONST System::Word GL_VERTEX_PROGRAM_POINT_SIZE = System::Word(0x8642);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_ARRAY_POINTER = System::Word(0x8645);
static _DELPHI_CONST System::Word GL_STENCIL_BACK_FUNC = System::Word(0x8800);
static _DELPHI_CONST System::Word GL_STENCIL_BACK_FAIL = System::Word(0x8801);
static _DELPHI_CONST System::Word GL_STENCIL_BACK_PASS_DEPTH_FAIL = System::Word(0x8802);
static _DELPHI_CONST System::Word GL_STENCIL_BACK_PASS_DEPTH_PASS = System::Word(0x8803);
static _DELPHI_CONST System::Word GL_MAX_DRAW_BUFFERS = System::Word(0x8824);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER0 = System::Word(0x8825);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER1 = System::Word(0x8826);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER2 = System::Word(0x8827);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER3 = System::Word(0x8828);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER4 = System::Word(0x8829);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER5 = System::Word(0x882a);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER6 = System::Word(0x882b);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER7 = System::Word(0x882c);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER8 = System::Word(0x882d);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER9 = System::Word(0x882e);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER10 = System::Word(0x882f);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER11 = System::Word(0x8830);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER12 = System::Word(0x8831);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER13 = System::Word(0x8832);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER14 = System::Word(0x8833);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER15 = System::Word(0x8834);
static _DELPHI_CONST System::Word GL_BLEND_EQUATION_ALPHA = System::Word(0x883d);
static _DELPHI_CONST System::Word GL_MAX_VERTEX_ATTRIBS = System::Word(0x8869);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = System::Word(0x886a);
static _DELPHI_CONST System::Word GL_MAX_TEXTURE_IMAGE_UNITS = System::Word(0x8872);
static _DELPHI_CONST System::Word GL_FRAGMENT_SHADER = System::Word(0x8b30);
static _DELPHI_CONST System::Word GL_VERTEX_SHADER = System::Word(0x8b31);
static _DELPHI_CONST System::Word GL_MAX_FRAGMENT_UNIFORM_COMPONENTS = System::Word(0x8b49);
static _DELPHI_CONST System::Word GL_MAX_VERTEX_UNIFORM_COMPONENTS = System::Word(0x8b4a);
static _DELPHI_CONST System::Word GL_MAX_VARYING_FLOATS = System::Word(0x8b4b);
static _DELPHI_CONST System::Word GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = System::Word(0x8b4c);
static _DELPHI_CONST System::Word GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = System::Word(0x8b4d);
static _DELPHI_CONST System::Word GL_SHADER_TYPE = System::Word(0x8b4f);
static _DELPHI_CONST System::Word GL_FLOAT_VEC2 = System::Word(0x8b50);
static _DELPHI_CONST System::Word GL_FLOAT_VEC3 = System::Word(0x8b51);
static _DELPHI_CONST System::Word GL_FLOAT_VEC4 = System::Word(0x8b52);
static _DELPHI_CONST System::Word GL_INT_VEC2 = System::Word(0x8b53);
static _DELPHI_CONST System::Word GL_INT_VEC3 = System::Word(0x8b54);
static _DELPHI_CONST System::Word GL_INT_VEC4 = System::Word(0x8b55);
static _DELPHI_CONST System::Word GL_BOOL = System::Word(0x8b56);
static _DELPHI_CONST System::Word GL_BOOL_VEC2 = System::Word(0x8b57);
static _DELPHI_CONST System::Word GL_BOOL_VEC3 = System::Word(0x8b58);
static _DELPHI_CONST System::Word GL_BOOL_VEC4 = System::Word(0x8b59);
static _DELPHI_CONST System::Word GL_FLOAT_MAT2 = System::Word(0x8b5a);
static _DELPHI_CONST System::Word GL_FLOAT_MAT3 = System::Word(0x8b5b);
static _DELPHI_CONST System::Word GL_FLOAT_MAT4 = System::Word(0x8b5c);
static _DELPHI_CONST System::Word GL_SAMPLER_1D = System::Word(0x8b5d);
static _DELPHI_CONST System::Word GL_SAMPLER_2D = System::Word(0x8b5e);
static _DELPHI_CONST System::Word GL_SAMPLER_3D = System::Word(0x8b5f);
static _DELPHI_CONST System::Word GL_SAMPLER_CUBE = System::Word(0x8b60);
static _DELPHI_CONST System::Word GL_SAMPLER_1D_SHADOW = System::Word(0x8b61);
static _DELPHI_CONST System::Word GL_SAMPLER_2D_SHADOW = System::Word(0x8b62);
static _DELPHI_CONST System::Word GL_DELETE_STATUS = System::Word(0x8b80);
static _DELPHI_CONST System::Word GL_COMPILE_STATUS = System::Word(0x8b81);
static _DELPHI_CONST System::Word GL_LINK_STATUS = System::Word(0x8b82);
static _DELPHI_CONST System::Word GL_VALIDATE_STATUS = System::Word(0x8b83);
static _DELPHI_CONST System::Word GL_INFO_LOG_LENGTH = System::Word(0x8b84);
static _DELPHI_CONST System::Word GL_ATTACHED_SHADERS = System::Word(0x8b85);
static _DELPHI_CONST System::Word GL_ACTIVE_UNIFORMS = System::Word(0x8b86);
static _DELPHI_CONST System::Word GL_ACTIVE_UNIFORM_MAX_LENGTH = System::Word(0x8b87);
static _DELPHI_CONST System::Word GL_SHADER_SOURCE_LENGTH = System::Word(0x8b88);
static _DELPHI_CONST System::Word GL_ACTIVE_ATTRIBUTES = System::Word(0x8b89);
static _DELPHI_CONST System::Word GL_ACTIVE_ATTRIBUTE_MAX_LENGTH = System::Word(0x8b8a);
static _DELPHI_CONST System::Word GL_FRAGMENT_SHADER_DERIVATIVE_HINT = System::Word(0x8b8b);
static _DELPHI_CONST System::Word GL_SHADING_LANGUAGE_VERSION = System::Word(0x8b8c);
static _DELPHI_CONST System::Word GL_CURRENT_PROGRAM = System::Word(0x8b8d);
static _DELPHI_CONST System::Word GL_POINT_SPRITE_COORD_ORIGIN = System::Word(0x8ca0);
static _DELPHI_CONST System::Word GL_LOWER_LEFT = System::Word(0x8ca1);
static _DELPHI_CONST System::Word GL_UPPER_LEFT = System::Word(0x8ca2);
static _DELPHI_CONST System::Word GL_STENCIL_BACK_REF = System::Word(0x8ca3);
static _DELPHI_CONST System::Word GL_STENCIL_BACK_VALUE_MASK = System::Word(0x8ca4);
static _DELPHI_CONST System::Word GL_STENCIL_BACK_WRITEMASK = System::Word(0x8ca5);
static _DELPHI_CONST System::Word GL_VERTEX_PROGRAM_TWO_SIDE = System::Word(0x8643);
static _DELPHI_CONST System::Word GL_POINT_SPRITE = System::Word(0x8861);
static _DELPHI_CONST System::Word GL_COORD_REPLACE = System::Word(0x8862);
static _DELPHI_CONST System::Word GL_MAX_TEXTURE_COORDS = System::Word(0x8871);
static _DELPHI_CONST System::Word GL_PIXEL_PACK_BUFFER = System::Word(0x88eb);
static _DELPHI_CONST System::Word GL_PIXEL_UNPACK_BUFFER = System::Word(0x88ec);
static _DELPHI_CONST System::Word GL_PIXEL_PACK_BUFFER_BINDING = System::Word(0x88ed);
static _DELPHI_CONST System::Word GL_PIXEL_UNPACK_BUFFER_BINDING = System::Word(0x88ef);
static _DELPHI_CONST System::Word GL_FLOAT_MAT2x3 = System::Word(0x8b65);
static _DELPHI_CONST System::Word GL_FLOAT_MAT2x4 = System::Word(0x8b66);
static _DELPHI_CONST System::Word GL_FLOAT_MAT3x2 = System::Word(0x8b67);
static _DELPHI_CONST System::Word GL_FLOAT_MAT3x4 = System::Word(0x8b68);
static _DELPHI_CONST System::Word GL_FLOAT_MAT4x2 = System::Word(0x8b69);
static _DELPHI_CONST System::Word GL_FLOAT_MAT4x3 = System::Word(0x8b6a);
static _DELPHI_CONST System::Word GL_SRGB = System::Word(0x8c40);
static _DELPHI_CONST System::Word GL_SRGB8 = System::Word(0x8c41);
static _DELPHI_CONST System::Word GL_SRGB_ALPHA = System::Word(0x8c42);
static _DELPHI_CONST System::Word GL_SRGB8_ALPHA8 = System::Word(0x8c43);
static _DELPHI_CONST System::Word GL_COMPRESSED_SRGB = System::Word(0x8c48);
static _DELPHI_CONST System::Word GL_COMPRESSED_SRGB_ALPHA = System::Word(0x8c49);
static _DELPHI_CONST System::Word GL_CURRENT_RASTER_SECONDARY_COLOR = System::Word(0x845f);
static _DELPHI_CONST System::Word GL_SLUMINANCE_ALPHA = System::Word(0x8c44);
static _DELPHI_CONST System::Word GL_SLUMINANCE8_ALPHA8 = System::Word(0x8c45);
static _DELPHI_CONST System::Word GL_SLUMINANCE = System::Word(0x8c46);
static _DELPHI_CONST System::Word GL_SLUMINANCE8 = System::Word(0x8c47);
static _DELPHI_CONST System::Word GL_COMPRESSED_SLUMINANCE = System::Word(0x8c4a);
static _DELPHI_CONST System::Word GL_COMPRESSED_SLUMINANCE_ALPHA = System::Word(0x8c4b);
static _DELPHI_CONST System::Word GL_COMPARE_REF_TO_TEXTURE = System::Word(0x884e);
static _DELPHI_CONST System::Word GL_CLIP_DISTANCE0 = System::Word(0x3000);
static _DELPHI_CONST System::Word GL_CLIP_DISTANCE1 = System::Word(0x3001);
static _DELPHI_CONST System::Word GL_CLIP_DISTANCE2 = System::Word(0x3002);
static _DELPHI_CONST System::Word GL_CLIP_DISTANCE3 = System::Word(0x3003);
static _DELPHI_CONST System::Word GL_CLIP_DISTANCE4 = System::Word(0x3004);
static _DELPHI_CONST System::Word GL_CLIP_DISTANCE5 = System::Word(0x3005);
static _DELPHI_CONST System::Word GL_CLIP_DISTANCE6 = System::Word(0x3006);
static _DELPHI_CONST System::Word GL_CLIP_DISTANCE7 = System::Word(0x3007);
static _DELPHI_CONST System::Word GL_MAX_CLIP_DISTANCES = System::Word(0xd32);
static _DELPHI_CONST System::Word GL_MAJOR_VERSION = System::Word(0x821b);
static _DELPHI_CONST System::Word GL_MINOR_VERSION = System::Word(0x821c);
static _DELPHI_CONST System::Word GL_NUM_EXTENSIONS = System::Word(0x821d);
static _DELPHI_CONST System::Word GL_CONTEXT_FLAGS = System::Word(0x821e);
static _DELPHI_CONST System::Word GL_DEPTH_BUFFER = System::Word(0x8223);
static _DELPHI_CONST System::Word GL_STENCIL_BUFFER = System::Word(0x8224);
static _DELPHI_CONST System::Word GL_COMPRESSED_RED = System::Word(0x8225);
static _DELPHI_CONST System::Word GL_COMPRESSED_RG = System::Word(0x8226);
static _DELPHI_CONST System::Int8 GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT = System::Int8(0x1);
static _DELPHI_CONST System::Word GL_RGBA32F = System::Word(0x8814);
static _DELPHI_CONST System::Word GL_RGB32F = System::Word(0x8815);
static _DELPHI_CONST System::Word GL_RGBA16F = System::Word(0x881a);
static _DELPHI_CONST System::Word GL_RGB16F = System::Word(0x881b);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_ARRAY_INTEGER = System::Word(0x88fd);
static _DELPHI_CONST System::Word GL_MAX_ARRAY_TEXTURE_LAYERS = System::Word(0x88ff);
static _DELPHI_CONST System::Word GL_MIN_PROGRAM_TEXEL_OFFSET = System::Word(0x8904);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_TEXEL_OFFSET = System::Word(0x8905);
static _DELPHI_CONST System::Word GL_CLAMP_READ_COLOR = System::Word(0x891c);
static _DELPHI_CONST System::Word GL_FIXED_ONLY = System::Word(0x891d);
static _DELPHI_CONST System::Word GL_MAX_VARYING_COMPONENTS = System::Word(0x8b4b);
static _DELPHI_CONST System::Word GL_TEXTURE_1D_ARRAY = System::Word(0x8c18);
static _DELPHI_CONST System::Word GL_PROXY_TEXTURE_1D_ARRAY = System::Word(0x8c19);
static _DELPHI_CONST System::Word GL_TEXTURE_2D_ARRAY = System::Word(0x8c1a);
static _DELPHI_CONST System::Word GL_PROXY_TEXTURE_2D_ARRAY = System::Word(0x8c1b);
static _DELPHI_CONST System::Word GL_TEXTURE_BINDING_1D_ARRAY = System::Word(0x8c1c);
static _DELPHI_CONST System::Word GL_TEXTURE_BINDING_2D_ARRAY = System::Word(0x8c1d);
static _DELPHI_CONST System::Word GL_R11F_G11F_B10F = System::Word(0x8c3a);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_10F_11F_11F_REV = System::Word(0x8c3b);
static _DELPHI_CONST System::Word GL_RGB9_E5 = System::Word(0x8c3d);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_5_9_9_9_REV = System::Word(0x8c3e);
static _DELPHI_CONST System::Word GL_TEXTURE_SHARED_SIZE = System::Word(0x8c3f);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH = System::Word(0x8c76);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_BUFFER_MODE = System::Word(0x8c7f);
static _DELPHI_CONST System::Word GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = System::Word(0x8c80);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_VARYINGS = System::Word(0x8c83);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_BUFFER_START = System::Word(0x8c84);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_BUFFER_SIZE = System::Word(0x8c85);
static _DELPHI_CONST System::Word GL_PRIMITIVES_GENERATED = System::Word(0x8c87);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = System::Word(0x8c88);
static _DELPHI_CONST System::Word GL_RASTERIZER_DISCARD = System::Word(0x8c89);
static _DELPHI_CONST System::Word GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = System::Word(0x8c8a);
static _DELPHI_CONST System::Word GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = System::Word(0x8c8b);
static _DELPHI_CONST System::Word GL_INTERLEAVED_ATTRIBS = System::Word(0x8c8c);
static _DELPHI_CONST System::Word GL_SEPARATE_ATTRIBS = System::Word(0x8c8d);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_BUFFER = System::Word(0x8c8e);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_BUFFER_BINDING = System::Word(0x8c8f);
static _DELPHI_CONST System::Word GL_RGBA32UI = System::Word(0x8d70);
static _DELPHI_CONST System::Word GL_RGB32UI = System::Word(0x8d71);
static _DELPHI_CONST System::Word GL_RGBA16UI = System::Word(0x8d76);
static _DELPHI_CONST System::Word GL_RGB16UI = System::Word(0x8d77);
static _DELPHI_CONST System::Word GL_RGBA8UI = System::Word(0x8d7c);
static _DELPHI_CONST System::Word GL_RGB8UI = System::Word(0x8d7d);
static _DELPHI_CONST System::Word GL_RGBA32I = System::Word(0x8d82);
static _DELPHI_CONST System::Word GL_RGB32I = System::Word(0x8d83);
static _DELPHI_CONST System::Word GL_RGBA16I = System::Word(0x8d88);
static _DELPHI_CONST System::Word GL_RGB16I = System::Word(0x8d89);
static _DELPHI_CONST System::Word GL_RGBA8I = System::Word(0x8d8e);
static _DELPHI_CONST System::Word GL_RGB8I = System::Word(0x8d8f);
static _DELPHI_CONST System::Word GL_RED_INTEGER = System::Word(0x8d94);
static _DELPHI_CONST System::Word GL_GREEN_INTEGER = System::Word(0x8d95);
static _DELPHI_CONST System::Word GL_BLUE_INTEGER = System::Word(0x8d96);
static _DELPHI_CONST System::Word GL_RGB_INTEGER = System::Word(0x8d98);
static _DELPHI_CONST System::Word GL_RGBA_INTEGER = System::Word(0x8d99);
static _DELPHI_CONST System::Word GL_BGR_INTEGER = System::Word(0x8d9a);
static _DELPHI_CONST System::Word GL_BGRA_INTEGER = System::Word(0x8d9b);
static _DELPHI_CONST System::Word GL_SAMPLER_1D_ARRAY = System::Word(0x8dc0);
static _DELPHI_CONST System::Word GL_SAMPLER_2D_ARRAY = System::Word(0x8dc1);
static _DELPHI_CONST System::Word GL_SAMPLER_1D_ARRAY_SHADOW = System::Word(0x8dc3);
static _DELPHI_CONST System::Word GL_SAMPLER_2D_ARRAY_SHADOW = System::Word(0x8dc4);
static _DELPHI_CONST System::Word GL_SAMPLER_CUBE_SHADOW = System::Word(0x8dc5);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_VEC2 = System::Word(0x8dc6);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_VEC3 = System::Word(0x8dc7);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_VEC4 = System::Word(0x8dc8);
static _DELPHI_CONST System::Word GL_INT_SAMPLER_1D = System::Word(0x8dc9);
static _DELPHI_CONST System::Word GL_INT_SAMPLER_2D = System::Word(0x8dca);
static _DELPHI_CONST System::Word GL_INT_SAMPLER_3D = System::Word(0x8dcb);
static _DELPHI_CONST System::Word GL_INT_SAMPLER_CUBE = System::Word(0x8dcc);
static _DELPHI_CONST System::Word GL_INT_SAMPLER_1D_ARRAY = System::Word(0x8dce);
static _DELPHI_CONST System::Word GL_INT_SAMPLER_2D_ARRAY = System::Word(0x8dcf);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_SAMPLER_1D = System::Word(0x8dd1);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_SAMPLER_2D = System::Word(0x8dd2);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_SAMPLER_3D = System::Word(0x8dd3);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_SAMPLER_CUBE = System::Word(0x8dd4);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_SAMPLER_1D_ARRAY = System::Word(0x8dd6);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_SAMPLER_2D_ARRAY = System::Word(0x8dd7);
static _DELPHI_CONST System::Word GL_QUERY_WAIT = System::Word(0x8e13);
static _DELPHI_CONST System::Word GL_QUERY_NO_WAIT = System::Word(0x8e14);
static _DELPHI_CONST System::Word GL_QUERY_BY_REGION_WAIT = System::Word(0x8e15);
static _DELPHI_CONST System::Word GL_QUERY_BY_REGION_NO_WAIT = System::Word(0x8e16);
static _DELPHI_CONST System::Word GL_BUFFER_ACCESS_FLAGS = System::Word(0x911f);
static _DELPHI_CONST System::Word GL_BUFFER_MAP_LENGTH = System::Word(0x9120);
static _DELPHI_CONST System::Word GL_BUFFER_MAP_OFFSET = System::Word(0x9121);
static _DELPHI_CONST System::Word GL_CLAMP_VERTEX_COLOR = System::Word(0x891a);
static _DELPHI_CONST System::Word GL_CLAMP_FRAGMENT_COLOR = System::Word(0x891b);
static _DELPHI_CONST System::Word GL_ALPHA_INTEGER = System::Word(0x8d97);
static _DELPHI_CONST System::Word GL_SAMPLER_2D_RECT = System::Word(0x8b63);
static _DELPHI_CONST System::Word GL_SAMPLER_2D_RECT_SHADOW = System::Word(0x8b64);
static _DELPHI_CONST System::Word GL_SAMPLER_BUFFER = System::Word(0x8dc2);
static _DELPHI_CONST System::Word GL_INT_SAMPLER_2D_RECT = System::Word(0x8dcd);
static _DELPHI_CONST System::Word GL_INT_SAMPLER_BUFFER = System::Word(0x8dd0);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_SAMPLER_2D_RECT = System::Word(0x8dd5);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_SAMPLER_BUFFER = System::Word(0x8dd8);
static _DELPHI_CONST System::Word GL_TEXTURE_BUFFER = System::Word(0x8c2a);
static _DELPHI_CONST System::Word GL_MAX_TEXTURE_BUFFER_SIZE = System::Word(0x8c2b);
static _DELPHI_CONST System::Word GL_TEXTURE_BINDING_BUFFER = System::Word(0x8c2c);
static _DELPHI_CONST System::Word GL_TEXTURE_BUFFER_DATA_STORE_BINDING = System::Word(0x8c2d);
static _DELPHI_CONST System::Word GL_TEXTURE_BUFFER_FORMAT = System::Word(0x8c2e);
static _DELPHI_CONST System::Word GL_TEXTURE_RECTANGLE = System::Word(0x84f5);
static _DELPHI_CONST System::Word GL_TEXTURE_BINDING_RECTANGLE = System::Word(0x84f6);
static _DELPHI_CONST System::Word GL_PROXY_TEXTURE_RECTANGLE = System::Word(0x84f7);
static _DELPHI_CONST System::Word GL_MAX_RECTANGLE_TEXTURE_SIZE = System::Word(0x84f8);
static _DELPHI_CONST System::Word GL_RED_SNORM = System::Word(0x8f90);
static _DELPHI_CONST System::Word GL_RG_SNORM = System::Word(0x8f91);
static _DELPHI_CONST System::Word GL_RGB_SNORM = System::Word(0x8f92);
static _DELPHI_CONST System::Word GL_RGBA_SNORM = System::Word(0x8f93);
static _DELPHI_CONST System::Word GL_R8_SNORM = System::Word(0x8f94);
static _DELPHI_CONST System::Word GL_RG8_SNORM = System::Word(0x8f95);
static _DELPHI_CONST System::Word GL_RGB8_SNORM = System::Word(0x8f96);
static _DELPHI_CONST System::Word GL_RGBA8_SNORM = System::Word(0x8f97);
static _DELPHI_CONST System::Word GL_R16_SNORM = System::Word(0x8f98);
static _DELPHI_CONST System::Word GL_RG16_SNORM = System::Word(0x8f99);
static _DELPHI_CONST System::Word GL_RGB16_SNORM = System::Word(0x8f9a);
static _DELPHI_CONST System::Word GL_RGBA16_SNORM = System::Word(0x8f9b);
static _DELPHI_CONST System::Word GL_SIGNED_NORMALIZED = System::Word(0x8f9c);
static _DELPHI_CONST System::Word GL_PRIMITIVE_RESTART = System::Word(0x8f9d);
static _DELPHI_CONST System::Word GL_PRIMITIVE_RESTART_INDEX = System::Word(0x8f9e);
static _DELPHI_CONST System::Int8 GL_CONTEXT_CORE_PROFILE_BIT = System::Int8(0x1);
static _DELPHI_CONST System::Int8 GL_CONTEXT_COMPATIBILITY_PROFILE_BIT = System::Int8(0x2);
static _DELPHI_CONST System::Int8 GL_LINES_ADJACENCY = System::Int8(0xa);
static _DELPHI_CONST System::Int8 GL_LINE_STRIP_ADJACENCY = System::Int8(0xb);
static _DELPHI_CONST System::Int8 GL_TRIANGLES_ADJACENCY = System::Int8(0xc);
static _DELPHI_CONST System::Int8 GL_TRIANGLE_STRIP_ADJACENCY = System::Int8(0xd);
static _DELPHI_CONST System::Word GL_PROGRAM_POINT_SIZE = System::Word(0x8642);
static _DELPHI_CONST System::Word GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS = System::Word(0x8c29);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_ATTACHMENT_LAYERED = System::Word(0x8da7);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS = System::Word(0x8da8);
static _DELPHI_CONST System::Word GL_GEOMETRY_SHADER = System::Word(0x8dd9);
static _DELPHI_CONST System::Word GL_GEOMETRY_VERTICES_OUT = System::Word(0x8916);
static _DELPHI_CONST System::Word GL_GEOMETRY_INPUT_TYPE = System::Word(0x8917);
static _DELPHI_CONST System::Word GL_GEOMETRY_OUTPUT_TYPE = System::Word(0x8918);
static _DELPHI_CONST System::Word GL_MAX_GEOMETRY_UNIFORM_COMPONENTS = System::Word(0x8ddf);
static _DELPHI_CONST System::Word GL_MAX_GEOMETRY_OUTPUT_VERTICES = System::Word(0x8de0);
static _DELPHI_CONST System::Word GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS = System::Word(0x8de1);
static _DELPHI_CONST System::Word GL_MAX_VERTEX_OUTPUT_COMPONENTS = System::Word(0x9122);
static _DELPHI_CONST System::Word GL_MAX_GEOMETRY_INPUT_COMPONENTS = System::Word(0x9123);
static _DELPHI_CONST System::Word GL_MAX_GEOMETRY_OUTPUT_COMPONENTS = System::Word(0x9124);
static _DELPHI_CONST System::Word GL_MAX_FRAGMENT_INPUT_COMPONENTS = System::Word(0x9125);
static _DELPHI_CONST System::Word GL_CONTEXT_PROFILE_MASK = System::Word(0x9126);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_ARRAY_DIVISOR = System::Word(0x88fe);
static _DELPHI_CONST System::Word GL_SAMPLE_SHADING = System::Word(0x8c36);
static _DELPHI_CONST System::Word GL_MIN_SAMPLE_SHADING_VALUE = System::Word(0x8c37);
static _DELPHI_CONST System::Word GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET = System::Word(0x8e5e);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET = System::Word(0x8e5f);
static _DELPHI_CONST System::Word GL_TEXTURE_CUBE_MAP_ARRAY = System::Word(0x9009);
static _DELPHI_CONST System::Word GL_TEXTURE_BINDING_CUBE_MAP_ARRAY = System::Word(0x900a);
static _DELPHI_CONST System::Word GL_PROXY_TEXTURE_CUBE_MAP_ARRAY = System::Word(0x900b);
static _DELPHI_CONST System::Word GL_SAMPLER_CUBE_MAP_ARRAY = System::Word(0x900c);
static _DELPHI_CONST System::Word GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW = System::Word(0x900d);
static _DELPHI_CONST System::Word GL_INT_SAMPLER_CUBE_MAP_ARRAY = System::Word(0x900e);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY = System::Word(0x900f);
static _DELPHI_CONST System::Word GL_NUM_SHADING_LANGUAGE_VERSIONS = System::Word(0x82e9);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_ARRAY_LONG = System::Word(0x874e);
static _DELPHI_CONST System::Word GL_MULTISAMPLE_3DFX = System::Word(0x86b2);
static _DELPHI_CONST System::Word GL_SAMPLE_BUFFERS_3DFX = System::Word(0x86b3);
static _DELPHI_CONST System::Word GL_SAMPLES_3DFX = System::Word(0x86b4);
static _DELPHI_CONST int GL_MULTISAMPLE_BIT_3DFX = int(0x20000000);
static _DELPHI_CONST System::Word GL_COMPRESSED_RGB_FXT1_3DFX = System::Word(0x86b0);
static _DELPHI_CONST System::Word GL_COMPRESSED_RGBA_FXT1_3DFX = System::Word(0x86b1);
static _DELPHI_CONST System::Word GL_UNPACK_CLIENT_STORAGE_APPLE = System::Word(0x85b2);
static _DELPHI_CONST System::Word GL_ELEMENT_ARRAY_APPLE = System::Word(0x8a0c);
static _DELPHI_CONST System::Word GL_ELEMENT_ARRAY_TYPE_APPLE = System::Word(0x8a0d);
static _DELPHI_CONST System::Word GL_ELEMENT_ARRAY_POINTER_APPLE = System::Word(0x8a0e);
static _DELPHI_CONST System::Word GL_DRAW_PIXELS_APPLE = System::Word(0x8a0a);
static _DELPHI_CONST System::Word GL_FENCE_APPLE = System::Word(0x8a0b);
static _DELPHI_CONST System::Word GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE = System::Word(0x85b0);
static _DELPHI_CONST System::Word GL_TRANSFORM_HINT_APPLE = System::Word(0x85b1);
static _DELPHI_CONST System::Word GL_VERTEX_ARRAY_BINDING_APPLE = System::Word(0x85b5);
static _DELPHI_CONST System::Word GL_VERTEX_ARRAY_RANGE_APPLE = System::Word(0x851d);
static _DELPHI_CONST System::Word GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE = System::Word(0x851e);
static _DELPHI_CONST System::Word GL_VERTEX_ARRAY_STORAGE_HINT_APPLE = System::Word(0x851f);
static _DELPHI_CONST System::Word GL_VERTEX_ARRAY_RANGE_POINTER_APPLE = System::Word(0x8521);
static _DELPHI_CONST System::Word GL_STORAGE_CLIENT_APPLE = System::Word(0x85b4);
static _DELPHI_CONST System::Word GL_STORAGE_CACHED_APPLE = System::Word(0x85be);
static _DELPHI_CONST System::Word GL_STORAGE_SHARED_APPLE = System::Word(0x85bf);
static _DELPHI_CONST System::Word GL_YCBCR_422_APPLE = System::Word(0x85b9);
static _DELPHI_CONST System::Word GL_UNSIGNED_SHORT_8_8_APPLE = System::Word(0x85ba);
static _DELPHI_CONST System::Word GL_UNSIGNED_SHORT_8_8_REV_APPLE = System::Word(0x85bb);
static _DELPHI_CONST System::Word GL_RGB_RAW_422_APPLE = System::Word(0x8a51);
static _DELPHI_CONST System::Word GL_TEXTURE_RANGE_LENGTH_APPLE = System::Word(0x85b7);
static _DELPHI_CONST System::Word GL_TEXTURE_RANGE_POINTER_APPLE = System::Word(0x85b8);
static _DELPHI_CONST System::Word GL_TEXTURE_STORAGE_HINT_APPLE = System::Word(0x85bc);
static _DELPHI_CONST System::Word GL_STORAGE_PRIVATE_APPLE = System::Word(0x85bd);
static _DELPHI_CONST System::Word GL_HALF_APPLE = System::Word(0x140b);
static _DELPHI_CONST System::Word GL_RGBA_FLOAT32_APPLE = System::Word(0x8814);
static _DELPHI_CONST System::Word GL_RGB_FLOAT32_APPLE = System::Word(0x8815);
static _DELPHI_CONST System::Word GL_ALPHA_FLOAT32_APPLE = System::Word(0x8816);
static _DELPHI_CONST System::Word GL_INTENSITY_FLOAT32_APPLE = System::Word(0x8817);
static _DELPHI_CONST System::Word GL_LUMINANCE_FLOAT32_APPLE = System::Word(0x8818);
static _DELPHI_CONST System::Word GL_LUMINANCE_ALPHA_FLOAT32_APPLE = System::Word(0x8819);
static _DELPHI_CONST System::Word GL_RGBA_FLOAT16_APPLE = System::Word(0x881a);
static _DELPHI_CONST System::Word GL_RGB_FLOAT16_APPLE = System::Word(0x881b);
static _DELPHI_CONST System::Word GL_ALPHA_FLOAT16_APPLE = System::Word(0x881c);
static _DELPHI_CONST System::Word GL_INTENSITY_FLOAT16_APPLE = System::Word(0x881d);
static _DELPHI_CONST System::Word GL_LUMINANCE_FLOAT16_APPLE = System::Word(0x881e);
static _DELPHI_CONST System::Word GL_LUMINANCE_ALPHA_FLOAT16_APPLE = System::Word(0x881f);
static _DELPHI_CONST System::Word GL_COLOR_FLOAT_APPLE = System::Word(0x8a0f);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_MAP1_APPLE = System::Word(0x8a00);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_MAP2_APPLE = System::Word(0x8a01);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE = System::Word(0x8a02);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE = System::Word(0x8a03);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE = System::Word(0x8a04);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE = System::Word(0x8a05);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE = System::Word(0x8a06);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE = System::Word(0x8a07);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE = System::Word(0x8a08);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE = System::Word(0x8a09);
static _DELPHI_CONST System::Word GL_AUX_DEPTH_STENCIL_APPLE = System::Word(0x8a14);
static _DELPHI_CONST System::Word GL_BUFFER_OBJECT_APPLE = System::Word(0x85b3);
static _DELPHI_CONST System::Word GL_RELEASED_APPLE = System::Word(0x8a19);
static _DELPHI_CONST System::Word GL_VOLATILE_APPLE = System::Word(0x8a1a);
static _DELPHI_CONST System::Word GL_RETAINED_APPLE = System::Word(0x8a1b);
static _DELPHI_CONST System::Word GL_UNDEFINED_APPLE = System::Word(0x8a1c);
static _DELPHI_CONST System::Word GL_PURGEABLE_APPLE = System::Word(0x8a1d);
static _DELPHI_CONST System::Word GL_PACK_ROW_BYTES_APPLE = System::Word(0x8a15);
static _DELPHI_CONST System::Word GL_UNPACK_ROW_BYTES_APPLE = System::Word(0x8a16);
static _DELPHI_CONST System::Word GL_DEPTH_COMPONENT16_ARB = System::Word(0x81a5);
static _DELPHI_CONST System::Word GL_DEPTH_COMPONENT24_ARB = System::Word(0x81a6);
static _DELPHI_CONST System::Word GL_DEPTH_COMPONENT32_ARB = System::Word(0x81a7);
static _DELPHI_CONST System::Word GL_TEXTURE_DEPTH_SIZE_ARB = System::Word(0x884a);
static _DELPHI_CONST System::Word GL_DEPTH_TEXTURE_MODE_ARB = System::Word(0x884b);
static _DELPHI_CONST System::Word GL_FRAGMENT_PROGRAM_ARB = System::Word(0x8804);
static _DELPHI_CONST System::Word GL_PROGRAM_ALU_INSTRUCTIONS_ARB = System::Word(0x8805);
static _DELPHI_CONST System::Word GL_PROGRAM_TEX_INSTRUCTIONS_ARB = System::Word(0x8806);
static _DELPHI_CONST System::Word GL_PROGRAM_TEX_INDIRECTIONS_ARB = System::Word(0x8807);
static _DELPHI_CONST System::Word GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB = System::Word(0x8808);
static _DELPHI_CONST System::Word GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB = System::Word(0x8809);
static _DELPHI_CONST System::Word GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB = System::Word(0x880a);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB = System::Word(0x880b);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB = System::Word(0x880c);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB = System::Word(0x880d);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB = System::Word(0x880e);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB = System::Word(0x880f);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB = System::Word(0x8810);
static _DELPHI_CONST System::Word GL_MAX_TEXTURE_COORDS_ARB = System::Word(0x8871);
static _DELPHI_CONST System::Word GL_MAX_TEXTURE_IMAGE_UNITS_ARB = System::Word(0x8872);
static _DELPHI_CONST System::Word GL_CONSTANT_COLOR_ARB = System::Word(0x8001);
static _DELPHI_CONST System::Word GL_ONE_MINUS_CONSTANT_COLOR = System::Word(0x8002);
static _DELPHI_CONST System::Word GL_CONSTANT_ALPHA = System::Word(0x8003);
static _DELPHI_CONST System::Word GL_ONE_MINUS_CONSTANT_ALPHA = System::Word(0x8004);
static _DELPHI_CONST System::Word GL_BLEND_COLOR = System::Word(0x8005);
static _DELPHI_CONST System::Word GL_FUNC_ADD = System::Word(0x8006);
static _DELPHI_CONST System::Word GL_MIN = System::Word(0x8007);
static _DELPHI_CONST System::Word GL_MAX = System::Word(0x8008);
static _DELPHI_CONST System::Word GL_BLEND_EQUATION = System::Word(0x8009);
static _DELPHI_CONST System::Word GL_FUNC_SUBTRACT = System::Word(0x800a);
static _DELPHI_CONST System::Word GL_FUNC_REVERSE_SUBTRACT = System::Word(0x800b);
static _DELPHI_CONST System::Word GL_CONVOLUTION_1D = System::Word(0x8010);
static _DELPHI_CONST System::Word GL_CONVOLUTION_2D = System::Word(0x8011);
static _DELPHI_CONST System::Word GL_SEPARABLE_2D = System::Word(0x8012);
static _DELPHI_CONST System::Word GL_CONVOLUTION_BORDER_MODE = System::Word(0x8013);
static _DELPHI_CONST System::Word GL_CONVOLUTION_FILTER_SCALE = System::Word(0x8014);
static _DELPHI_CONST System::Word GL_CONVOLUTION_FILTER_BIAS = System::Word(0x8015);
static _DELPHI_CONST System::Word GL_REDUCE = System::Word(0x8016);
static _DELPHI_CONST System::Word GL_CONVOLUTION_FORMAT = System::Word(0x8017);
static _DELPHI_CONST System::Word GL_CONVOLUTION_WIDTH = System::Word(0x8018);
static _DELPHI_CONST System::Word GL_CONVOLUTION_HEIGHT = System::Word(0x8019);
static _DELPHI_CONST System::Word GL_MAX_CONVOLUTION_WIDTH = System::Word(0x801a);
static _DELPHI_CONST System::Word GL_MAX_CONVOLUTION_HEIGHT = System::Word(0x801b);
static _DELPHI_CONST System::Word GL_POST_CONVOLUTION_RED_SCALE = System::Word(0x801c);
static _DELPHI_CONST System::Word GL_POST_CONVOLUTION_GREEN_SCALE = System::Word(0x801d);
static _DELPHI_CONST System::Word GL_POST_CONVOLUTION_BLUE_SCALE = System::Word(0x801e);
static _DELPHI_CONST System::Word GL_POST_CONVOLUTION_ALPHA_SCALE = System::Word(0x801f);
static _DELPHI_CONST System::Word GL_POST_CONVOLUTION_RED_BIAS = System::Word(0x8020);
static _DELPHI_CONST System::Word GL_POST_CONVOLUTION_GREEN_BIAS = System::Word(0x8021);
static _DELPHI_CONST System::Word GL_POST_CONVOLUTION_BLUE_BIAS = System::Word(0x8022);
static _DELPHI_CONST System::Word GL_POST_CONVOLUTION_ALPHA_BIAS = System::Word(0x8023);
static _DELPHI_CONST System::Word GL_HISTOGRAM = System::Word(0x8024);
static _DELPHI_CONST System::Word GL_PROXY_HISTOGRAM = System::Word(0x8025);
static _DELPHI_CONST System::Word GL_HISTOGRAM_WIDTH = System::Word(0x8026);
static _DELPHI_CONST System::Word GL_HISTOGRAM_FORMAT = System::Word(0x8027);
static _DELPHI_CONST System::Word GL_HISTOGRAM_RED_SIZE = System::Word(0x8028);
static _DELPHI_CONST System::Word GL_HISTOGRAM_GREEN_SIZE = System::Word(0x8029);
static _DELPHI_CONST System::Word GL_HISTOGRAM_BLUE_SIZE = System::Word(0x802a);
static _DELPHI_CONST System::Word GL_HISTOGRAM_ALPHA_SIZE = System::Word(0x802b);
static _DELPHI_CONST System::Word GL_HISTOGRAM_LUMINANCE_SIZE = System::Word(0x802c);
static _DELPHI_CONST System::Word GL_HISTOGRAM_SINK = System::Word(0x802d);
static _DELPHI_CONST System::Word GL_MINMAX = System::Word(0x802e);
static _DELPHI_CONST System::Word GL_MINMAX_FORMAT = System::Word(0x802f);
static _DELPHI_CONST System::Word GL_MINMAX_SINK = System::Word(0x8030);
static _DELPHI_CONST System::Word GL_TABLE_TOO_LARGE = System::Word(0x8031);
static _DELPHI_CONST System::Word GL_COLOR_MATRIX = System::Word(0x80b1);
static _DELPHI_CONST System::Word GL_COLOR_MATRIX_STACK_DEPTH = System::Word(0x80b2);
static _DELPHI_CONST System::Word GL_MAX_COLOR_MATRIX_STACK_DEPTH = System::Word(0x80b3);
static _DELPHI_CONST System::Word GL_POST_COLOR_MATRIX_RED_SCALE = System::Word(0x80b4);
static _DELPHI_CONST System::Word GL_POST_COLOR_MATRIX_GREEN_SCALE = System::Word(0x80b5);
static _DELPHI_CONST System::Word GL_POST_COLOR_MATRIX_BLUE_SCALE = System::Word(0x80b6);
static _DELPHI_CONST System::Word GL_POST_COLOR_MATRIX_ALPHA_SCALE = System::Word(0x80b7);
static _DELPHI_CONST System::Word GL_POST_COLOR_MATRIX_RED_BIAS = System::Word(0x80b8);
static _DELPHI_CONST System::Word GL_POST_COLOR_MATRIX_GREEN_BIAS = System::Word(0x80b9);
static _DELPHI_CONST System::Word GL_POST_COLOR_MATRIX_BLUE_BIAS = System::Word(0x80ba);
static _DELPHI_CONST System::Word GL_POST_COLOR_MATRIX_ALPHA_BIAS = System::Word(0x80bb);
static _DELPHI_CONST System::Word GL_COLOR_TABLE = System::Word(0x80d0);
static _DELPHI_CONST System::Word GL_POST_CONVOLUTION_COLOR_TABLE = System::Word(0x80d1);
static _DELPHI_CONST System::Word GL_POST_COLOR_MATRIX_COLOR_TABLE = System::Word(0x80d2);
static _DELPHI_CONST System::Word GL_PROXY_COLOR_TABLE = System::Word(0x80d3);
static _DELPHI_CONST System::Word GL_PROXY_POST_CONVOLUTION_COLOR_TABLE = System::Word(0x80d4);
static _DELPHI_CONST System::Word GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE = System::Word(0x80d5);
static _DELPHI_CONST System::Word GL_COLOR_TABLE_SCALE = System::Word(0x80d6);
static _DELPHI_CONST System::Word GL_COLOR_TABLE_BIAS = System::Word(0x80d7);
static _DELPHI_CONST System::Word GL_COLOR_TABLE_FORMAT = System::Word(0x80d8);
static _DELPHI_CONST System::Word GL_COLOR_TABLE_WIDTH = System::Word(0x80d9);
static _DELPHI_CONST System::Word GL_COLOR_TABLE_RED_SIZE = System::Word(0x80da);
static _DELPHI_CONST System::Word GL_COLOR_TABLE_GREEN_SIZE = System::Word(0x80db);
static _DELPHI_CONST System::Word GL_COLOR_TABLE_BLUE_SIZE = System::Word(0x80dc);
static _DELPHI_CONST System::Word GL_COLOR_TABLE_ALPHA_SIZE = System::Word(0x80dd);
static _DELPHI_CONST System::Word GL_COLOR_TABLE_LUMINANCE_SIZE = System::Word(0x80de);
static _DELPHI_CONST System::Word GL_COLOR_TABLE_INTENSITY_SIZE = System::Word(0x80df);
static _DELPHI_CONST System::Word GL_CONSTANT_BORDER = System::Word(0x8151);
static _DELPHI_CONST System::Word GL_REPLICATE_BORDER = System::Word(0x8153);
static _DELPHI_CONST System::Word GL_CONVOLUTION_BORDER_COLOR = System::Word(0x8154);
static _DELPHI_CONST System::Word GL_MATRIX_PALETTE_ARB = System::Word(0x8840);
static _DELPHI_CONST System::Word GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB = System::Word(0x8841);
static _DELPHI_CONST System::Word GL_MAX_PALETTE_MATRICES_ARB = System::Word(0x8842);
static _DELPHI_CONST System::Word GL_CURRENT_PALETTE_MATRIX_ARB = System::Word(0x8843);
static _DELPHI_CONST System::Word GL_MATRIX_INDEX_ARRAY_ARB = System::Word(0x8844);
static _DELPHI_CONST System::Word GL_CURRENT_MATRIX_INDEX_ARB = System::Word(0x8845);
static _DELPHI_CONST System::Word GL_MATRIX_INDEX_ARRAY_SIZE_ARB = System::Word(0x8846);
static _DELPHI_CONST System::Word GL_MATRIX_INDEX_ARRAY_TYPE_ARB = System::Word(0x8847);
static _DELPHI_CONST System::Word GL_MATRIX_INDEX_ARRAY_STRIDE_ARB = System::Word(0x8848);
static _DELPHI_CONST System::Word GL_MATRIX_INDEX_ARRAY_POINTER_ARB = System::Word(0x8849);
static _DELPHI_CONST System::Word GL_MULTISAMPLE_ARB = System::Word(0x809d);
static _DELPHI_CONST System::Word GL_SAMPLE_ALPHA_TO_COVERAGE_ARB = System::Word(0x809e);
static _DELPHI_CONST System::Word GL_SAMPLE_ALPHA_TO_ONE_ARB = System::Word(0x809f);
static _DELPHI_CONST System::Word GL_SAMPLE_COVERAGE_ARB = System::Word(0x80a0);
static _DELPHI_CONST System::Word GL_SAMPLE_BUFFERS_ARB = System::Word(0x80a8);
static _DELPHI_CONST System::Word GL_SAMPLES_ARB = System::Word(0x80a9);
static _DELPHI_CONST System::Word GL_SAMPLE_COVERAGE_VALUE_ARB = System::Word(0x80aa);
static _DELPHI_CONST System::Word GL_SAMPLE_COVERAGE_INVERT_ARB = System::Word(0x80ab);
static _DELPHI_CONST int GL_MULTISAMPLE_BIT_ARB = int(0x20000000);
static _DELPHI_CONST System::Word GL_TEXTURE0_ARB = System::Word(0x84c0);
static _DELPHI_CONST System::Word GL_TEXTURE1_ARB = System::Word(0x84c1);
static _DELPHI_CONST System::Word GL_TEXTURE2_ARB = System::Word(0x84c2);
static _DELPHI_CONST System::Word GL_TEXTURE3_ARB = System::Word(0x84c3);
static _DELPHI_CONST System::Word GL_TEXTURE4_ARB = System::Word(0x84c4);
static _DELPHI_CONST System::Word GL_TEXTURE5_ARB = System::Word(0x84c5);
static _DELPHI_CONST System::Word GL_TEXTURE6_ARB = System::Word(0x84c6);
static _DELPHI_CONST System::Word GL_TEXTURE7_ARB = System::Word(0x84c7);
static _DELPHI_CONST System::Word GL_TEXTURE8_ARB = System::Word(0x84c8);
static _DELPHI_CONST System::Word GL_TEXTURE9_ARB = System::Word(0x84c9);
static _DELPHI_CONST System::Word GL_TEXTURE10_ARB = System::Word(0x84ca);
static _DELPHI_CONST System::Word GL_TEXTURE11_ARB = System::Word(0x84cb);
static _DELPHI_CONST System::Word GL_TEXTURE12_ARB = System::Word(0x84cc);
static _DELPHI_CONST System::Word GL_TEXTURE13_ARB = System::Word(0x84cd);
static _DELPHI_CONST System::Word GL_TEXTURE14_ARB = System::Word(0x84ce);
static _DELPHI_CONST System::Word GL_TEXTURE15_ARB = System::Word(0x84cf);
static _DELPHI_CONST System::Word GL_TEXTURE16_ARB = System::Word(0x84d0);
static _DELPHI_CONST System::Word GL_TEXTURE17_ARB = System::Word(0x84d1);
static _DELPHI_CONST System::Word GL_TEXTURE18_ARB = System::Word(0x84d2);
static _DELPHI_CONST System::Word GL_TEXTURE19_ARB = System::Word(0x84d3);
static _DELPHI_CONST System::Word GL_TEXTURE20_ARB = System::Word(0x84d4);
static _DELPHI_CONST System::Word GL_TEXTURE21_ARB = System::Word(0x84d5);
static _DELPHI_CONST System::Word GL_TEXTURE22_ARB = System::Word(0x84d6);
static _DELPHI_CONST System::Word GL_TEXTURE23_ARB = System::Word(0x84d7);
static _DELPHI_CONST System::Word GL_TEXTURE24_ARB = System::Word(0x84d8);
static _DELPHI_CONST System::Word GL_TEXTURE25_ARB = System::Word(0x84d9);
static _DELPHI_CONST System::Word GL_TEXTURE26_ARB = System::Word(0x84da);
static _DELPHI_CONST System::Word GL_TEXTURE27_ARB = System::Word(0x84db);
static _DELPHI_CONST System::Word GL_TEXTURE28_ARB = System::Word(0x84dc);
static _DELPHI_CONST System::Word GL_TEXTURE29_ARB = System::Word(0x84dd);
static _DELPHI_CONST System::Word GL_TEXTURE30_ARB = System::Word(0x84de);
static _DELPHI_CONST System::Word GL_TEXTURE31_ARB = System::Word(0x84df);
static _DELPHI_CONST System::Word GL_ACTIVE_TEXTURE_ARB = System::Word(0x84e0);
static _DELPHI_CONST System::Word GL_CLIENT_ACTIVE_TEXTURE_ARB = System::Word(0x84e1);
static _DELPHI_CONST System::Word GL_MAX_TEXTURE_UNITS_ARB = System::Word(0x84e2);
static _DELPHI_CONST System::Word GL_POINT_SIZE_MIN_ARB = System::Word(0x8126);
static _DELPHI_CONST System::Word GL_POINT_SIZE_MAX_ARB = System::Word(0x8127);
static _DELPHI_CONST System::Word GL_POINT_FADE_THRESHOLD_SIZE_ARB = System::Word(0x8128);
static _DELPHI_CONST System::Word GL_POINT_DISTANCE_ATTENUATION_ARB = System::Word(0x8129);
static _DELPHI_CONST System::Word GL_TEXTURE_COMPARE_MODE_ARB = System::Word(0x884c);
static _DELPHI_CONST System::Word GL_TEXTURE_COMPARE_FUNC_ARB = System::Word(0x884d);
static _DELPHI_CONST System::Word GL_COMPARE_R_TO_TEXTURE_ARB = System::Word(0x884e);
static _DELPHI_CONST System::Word GL_TEXTURE_COMPARE_FAIL_VALUE_ARB = System::Word(0x80bf);
static _DELPHI_CONST System::Word GL_SPARSE_STORAGE_BIT_ARB = System::Word(0x400);
static _DELPHI_CONST System::Word GL_SPARSE_BUFFER_PAGE_SIZE_ARB = System::Word(0x82f8);
static _DELPHI_CONST System::Word GL_CLAMP_TO_BORDER_ARB = System::Word(0x812d);
static _DELPHI_CONST System::Word GL_COMPRESSED_ALPHA_ARB = System::Word(0x84e9);
static _DELPHI_CONST System::Word GL_COMPRESSED_LUMINANCE_ARB = System::Word(0x84ea);
static _DELPHI_CONST System::Word GL_COMPRESSED_LUMINANCE_ALPHA_ARB = System::Word(0x84eb);
static _DELPHI_CONST System::Word GL_COMPRESSED_INTENSITY_ARB = System::Word(0x84ec);
static _DELPHI_CONST System::Word GL_COMPRESSED_RGB_ARB = System::Word(0x84ed);
static _DELPHI_CONST System::Word GL_COMPRESSED_RGBA_ARB = System::Word(0x84ee);
static _DELPHI_CONST System::Word GL_TEXTURE_COMPRESSION_HINT_ARB = System::Word(0x84ef);
static _DELPHI_CONST System::Word GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB = System::Word(0x86a0);
static _DELPHI_CONST System::Word GL_TEXTURE_COMPRESSED_ARB = System::Word(0x86a1);
static _DELPHI_CONST System::Word GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB = System::Word(0x86a2);
static _DELPHI_CONST System::Word GL_COMPRESSED_TEXTURE_FORMATS_ARB = System::Word(0x86a3);
static _DELPHI_CONST System::Word GL_NORMAL_MAP_ARB = System::Word(0x8511);
static _DELPHI_CONST System::Word GL_REFLECTION_MAP_ARB = System::Word(0x8512);
static _DELPHI_CONST System::Word GL_TEXTURE_CUBE_MAP_ARB = System::Word(0x8513);
static _DELPHI_CONST System::Word GL_TEXTURE_BINDING_CUBE_MAP_ARB = System::Word(0x8514);
static _DELPHI_CONST System::Word GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB = System::Word(0x8515);
static _DELPHI_CONST System::Word GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB = System::Word(0x8516);
static _DELPHI_CONST System::Word GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB = System::Word(0x8517);
static _DELPHI_CONST System::Word GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB = System::Word(0x8518);
static _DELPHI_CONST System::Word GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB = System::Word(0x8519);
static _DELPHI_CONST System::Word GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB = System::Word(0x851a);
static _DELPHI_CONST System::Word GL_PROXY_TEXTURE_CUBE_MAP_ARB = System::Word(0x851b);
static _DELPHI_CONST System::Word GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB = System::Word(0x851c);
static _DELPHI_CONST System::Word GL_COMBINE_ARB = System::Word(0x8570);
static _DELPHI_CONST System::Word GL_COMBINE_RGB_ARB = System::Word(0x8571);
static _DELPHI_CONST System::Word GL_COMBINE_ALPHA_ARB = System::Word(0x8572);
static _DELPHI_CONST System::Word GL_SOURCE0_RGB_ARB = System::Word(0x8580);
static _DELPHI_CONST System::Word GL_SOURCE1_RGB_ARB = System::Word(0x8581);
static _DELPHI_CONST System::Word GL_SOURCE2_RGB_ARB = System::Word(0x8582);
static _DELPHI_CONST System::Word GL_SOURCE0_ALPHA_ARB = System::Word(0x8588);
static _DELPHI_CONST System::Word GL_SOURCE1_ALPHA_ARB = System::Word(0x8589);
static _DELPHI_CONST System::Word GL_SOURCE2_ALPHA_ARB = System::Word(0x858a);
static _DELPHI_CONST System::Word GL_OPERAND0_RGB_ARB = System::Word(0x8590);
static _DELPHI_CONST System::Word GL_OPERAND1_RGB_ARB = System::Word(0x8591);
static _DELPHI_CONST System::Word GL_OPERAND2_RGB_ARB = System::Word(0x8592);
static _DELPHI_CONST System::Word GL_OPERAND0_ALPHA_ARB = System::Word(0x8598);
static _DELPHI_CONST System::Word GL_OPERAND1_ALPHA_ARB = System::Word(0x8599);
static _DELPHI_CONST System::Word GL_OPERAND2_ALPHA_ARB = System::Word(0x859a);
static _DELPHI_CONST System::Word GL_RGB_SCALE_ARB = System::Word(0x8573);
static _DELPHI_CONST System::Word GL_ADD_SIGNED_ARB = System::Word(0x8574);
static _DELPHI_CONST System::Word GL_INTERPOLATE_ARB = System::Word(0x8575);
static _DELPHI_CONST System::Word GL_SUBTRACT_ARB = System::Word(0x84e7);
static _DELPHI_CONST System::Word GL_CONSTANT_ARB = System::Word(0x8576);
static _DELPHI_CONST System::Word GL_PRIMARY_COLOR_ARB = System::Word(0x8577);
static _DELPHI_CONST System::Word GL_PREVIOUS_ARB = System::Word(0x8578);
static _DELPHI_CONST System::Word GL_DOT3_RGB_ARB = System::Word(0x86ae);
static _DELPHI_CONST System::Word GL_DOT3_RGBA_ARB = System::Word(0x86af);
static _DELPHI_CONST System::Word GL_TEXTURE_REDUCTION_MODE_ARB = System::Word(0x9366);
static _DELPHI_CONST System::Word GL_WEIGHTED_AVERAGE_ARB = System::Word(0x9367);
static _DELPHI_CONST System::Word GL_MIRRORED_REPEAT_ARB = System::Word(0x8370);
static _DELPHI_CONST System::Word GL_TRANSPOSE_MODELVIEW_MATRIX_ARB = System::Word(0x84e3);
static _DELPHI_CONST System::Word GL_TRANSPOSE_PROJECTION_MATRIX_ARB = System::Word(0x84e4);
static _DELPHI_CONST System::Word GL_TRANSPOSE_TEXTURE_MATRIX_ARB = System::Word(0x84e5);
static _DELPHI_CONST System::Word GL_TRANSPOSE_COLOR_MATRIX_ARB = System::Word(0x84e6);
static _DELPHI_CONST System::Word GL_MAX_VERTEX_UNITS_ARB = System::Word(0x86a4);
static _DELPHI_CONST System::Word GL_ACTIVE_VERTEX_UNITS_ARB = System::Word(0x86a5);
static _DELPHI_CONST System::Word GL_WEIGHT_SUM_UNITY_ARB = System::Word(0x86a6);
static _DELPHI_CONST System::Word GL_VERTEX_BLEND_ARB = System::Word(0x86a7);
static _DELPHI_CONST System::Word GL_CURRENT_WEIGHT_ARB = System::Word(0x86a8);
static _DELPHI_CONST System::Word GL_WEIGHT_ARRAY_TYPE_ARB = System::Word(0x86a9);
static _DELPHI_CONST System::Word GL_WEIGHT_ARRAY_STRIDE_ARB = System::Word(0x86aa);
static _DELPHI_CONST System::Word GL_WEIGHT_ARRAY_SIZE_ARB = System::Word(0x86ab);
static _DELPHI_CONST System::Word GL_WEIGHT_ARRAY_POINTER_ARB = System::Word(0x86ac);
static _DELPHI_CONST System::Word GL_WEIGHT_ARRAY_ARB = System::Word(0x86ad);
static _DELPHI_CONST System::Word GL_MODELVIEW0_ARB = System::Word(0x1700);
static _DELPHI_CONST System::Word GL_MODELVIEW1_ARB = System::Word(0x850a);
static _DELPHI_CONST System::Word GL_MODELVIEW2_ARB = System::Word(0x8722);
static _DELPHI_CONST System::Word GL_MODELVIEW3_ARB = System::Word(0x8723);
static _DELPHI_CONST System::Word GL_MODELVIEW4_ARB = System::Word(0x8724);
static _DELPHI_CONST System::Word GL_MODELVIEW5_ARB = System::Word(0x8725);
static _DELPHI_CONST System::Word GL_MODELVIEW6_ARB = System::Word(0x8726);
static _DELPHI_CONST System::Word GL_MODELVIEW7_ARB = System::Word(0x8727);
static _DELPHI_CONST System::Word GL_MODELVIEW8_ARB = System::Word(0x8728);
static _DELPHI_CONST System::Word GL_MODELVIEW9_ARB = System::Word(0x8729);
static _DELPHI_CONST System::Word GL_MODELVIEW10_ARB = System::Word(0x872a);
static _DELPHI_CONST System::Word GL_MODELVIEW11_ARB = System::Word(0x872b);
static _DELPHI_CONST System::Word GL_MODELVIEW12_ARB = System::Word(0x872c);
static _DELPHI_CONST System::Word GL_MODELVIEW13_ARB = System::Word(0x872d);
static _DELPHI_CONST System::Word GL_MODELVIEW14_ARB = System::Word(0x872e);
static _DELPHI_CONST System::Word GL_MODELVIEW15_ARB = System::Word(0x872f);
static _DELPHI_CONST System::Word GL_MODELVIEW16_ARB = System::Word(0x8730);
static _DELPHI_CONST System::Word GL_MODELVIEW17_ARB = System::Word(0x8731);
static _DELPHI_CONST System::Word GL_MODELVIEW18_ARB = System::Word(0x8732);
static _DELPHI_CONST System::Word GL_MODELVIEW19_ARB = System::Word(0x8733);
static _DELPHI_CONST System::Word GL_MODELVIEW20_ARB = System::Word(0x8734);
static _DELPHI_CONST System::Word GL_MODELVIEW21_ARB = System::Word(0x8735);
static _DELPHI_CONST System::Word GL_MODELVIEW22_ARB = System::Word(0x8736);
static _DELPHI_CONST System::Word GL_MODELVIEW23_ARB = System::Word(0x8737);
static _DELPHI_CONST System::Word GL_MODELVIEW24_ARB = System::Word(0x8738);
static _DELPHI_CONST System::Word GL_MODELVIEW25_ARB = System::Word(0x8739);
static _DELPHI_CONST System::Word GL_MODELVIEW26_ARB = System::Word(0x873a);
static _DELPHI_CONST System::Word GL_MODELVIEW27_ARB = System::Word(0x873b);
static _DELPHI_CONST System::Word GL_MODELVIEW28_ARB = System::Word(0x873c);
static _DELPHI_CONST System::Word GL_MODELVIEW29_ARB = System::Word(0x873d);
static _DELPHI_CONST System::Word GL_MODELVIEW30_ARB = System::Word(0x873e);
static _DELPHI_CONST System::Word GL_MODELVIEW31_ARB = System::Word(0x873f);
static _DELPHI_CONST System::Word GL_BUFFER_SIZE_ARB = System::Word(0x8764);
static _DELPHI_CONST System::Word GL_BUFFER_USAGE_ARB = System::Word(0x8765);
static _DELPHI_CONST System::Word GL_ARRAY_BUFFER_ARB = System::Word(0x8892);
static _DELPHI_CONST System::Word GL_ELEMENT_ARRAY_BUFFER_ARB = System::Word(0x8893);
static _DELPHI_CONST System::Word GL_ARRAY_BUFFER_BINDING_ARB = System::Word(0x8894);
static _DELPHI_CONST System::Word GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB = System::Word(0x8895);
static _DELPHI_CONST System::Word GL_VERTEX_ARRAY_BUFFER_BINDING_ARB = System::Word(0x8896);
static _DELPHI_CONST System::Word GL_NORMAL_ARRAY_BUFFER_BINDING_ARB = System::Word(0x8897);
static _DELPHI_CONST System::Word GL_COLOR_ARRAY_BUFFER_BINDING_ARB = System::Word(0x8898);
static _DELPHI_CONST System::Word GL_INDEX_ARRAY_BUFFER_BINDING_ARB = System::Word(0x8899);
static _DELPHI_CONST System::Word GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB = System::Word(0x889a);
static _DELPHI_CONST System::Word GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB = System::Word(0x889b);
static _DELPHI_CONST System::Word GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB = System::Word(0x889c);
static _DELPHI_CONST System::Word GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB = System::Word(0x889d);
static _DELPHI_CONST System::Word GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB = System::Word(0x889e);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB = System::Word(0x889f);
static _DELPHI_CONST System::Word GL_READ_ONLY_ARB = System::Word(0x88b8);
static _DELPHI_CONST System::Word GL_WRITE_ONLY_ARB = System::Word(0x88b9);
static _DELPHI_CONST System::Word GL_READ_WRITE_ARB = System::Word(0x88ba);
static _DELPHI_CONST System::Word GL_BUFFER_ACCESS_ARB = System::Word(0x88bb);
static _DELPHI_CONST System::Word GL_BUFFER_MAPPED_ARB = System::Word(0x88bc);
static _DELPHI_CONST System::Word GL_BUFFER_MAP_POINTER_ARB = System::Word(0x88bd);
static _DELPHI_CONST System::Word GL_STREAM_DRAW_ARB = System::Word(0x88e0);
static _DELPHI_CONST System::Word GL_STREAM_READ_ARB = System::Word(0x88e1);
static _DELPHI_CONST System::Word GL_STREAM_COPY_ARB = System::Word(0x88e2);
static _DELPHI_CONST System::Word GL_STATIC_DRAW_ARB = System::Word(0x88e4);
static _DELPHI_CONST System::Word GL_STATIC_READ_ARB = System::Word(0x88e5);
static _DELPHI_CONST System::Word GL_STATIC_COPY_ARB = System::Word(0x88e6);
static _DELPHI_CONST System::Word GL_DYNAMIC_DRAW_ARB = System::Word(0x88e8);
static _DELPHI_CONST System::Word GL_DYNAMIC_READ_ARB = System::Word(0x88e9);
static _DELPHI_CONST System::Word GL_DYNAMIC_COPY_ARB = System::Word(0x88ea);
static _DELPHI_CONST System::Word GL_COLOR_SUM_ARB = System::Word(0x8458);
static _DELPHI_CONST System::Word GL_VERTEX_PROGRAM_ARB = System::Word(0x8620);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB = System::Word(0x8622);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB = System::Word(0x8623);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB = System::Word(0x8624);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB = System::Word(0x8625);
static _DELPHI_CONST System::Word GL_CURRENT_VERTEX_ATTRIB_ARB = System::Word(0x8626);
static _DELPHI_CONST System::Word GL_PROGRAM_LENGTH_ARB = System::Word(0x8627);
static _DELPHI_CONST System::Word GL_PROGRAM_STRING_ARB = System::Word(0x8628);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB = System::Word(0x862e);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_MATRICES_ARB = System::Word(0x862f);
static _DELPHI_CONST System::Word GL_CURRENT_MATRIX_STACK_DEPTH_ARB = System::Word(0x8640);
static _DELPHI_CONST System::Word GL_CURRENT_MATRIX_ARB = System::Word(0x8641);
static _DELPHI_CONST System::Word GL_VERTEX_PROGRAM_POINT_SIZE_ARB = System::Word(0x8642);
static _DELPHI_CONST System::Word GL_VERTEX_PROGRAM_TWO_SIDE_ARB = System::Word(0x8643);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB = System::Word(0x8645);
static _DELPHI_CONST System::Word GL_PROGRAM_ERROR_POSITION_ARB = System::Word(0x864b);
static _DELPHI_CONST System::Word GL_PROGRAM_BINDING_ARB = System::Word(0x8677);
static _DELPHI_CONST System::Word GL_MAX_VERTEX_ATTRIBS_ARB = System::Word(0x8869);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB = System::Word(0x886a);
static _DELPHI_CONST System::Word GL_PROGRAM_ERROR_STRING_ARB = System::Word(0x8874);
static _DELPHI_CONST System::Word GL_PROGRAM_FORMAT_ASCII_ARB = System::Word(0x8875);
static _DELPHI_CONST System::Word GL_PROGRAM_FORMAT_ARB = System::Word(0x8876);
static _DELPHI_CONST System::Word GL_PROGRAM_INSTRUCTIONS_ARB = System::Word(0x88a0);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_INSTRUCTIONS_ARB = System::Word(0x88a1);
static _DELPHI_CONST System::Word GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB = System::Word(0x88a2);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB = System::Word(0x88a3);
static _DELPHI_CONST System::Word GL_PROGRAM_TEMPORARIES_ARB = System::Word(0x88a4);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_TEMPORARIES_ARB = System::Word(0x88a5);
static _DELPHI_CONST System::Word GL_PROGRAM_NATIVE_TEMPORARIES_ARB = System::Word(0x88a6);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB = System::Word(0x88a7);
static _DELPHI_CONST System::Word GL_PROGRAM_PARAMETERS_ARB = System::Word(0x88a8);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_PARAMETERS_ARB = System::Word(0x88a9);
static _DELPHI_CONST System::Word GL_PROGRAM_NATIVE_PARAMETERS_ARB = System::Word(0x88aa);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB = System::Word(0x88ab);
static _DELPHI_CONST System::Word GL_PROGRAM_ATTRIBS_ARB = System::Word(0x88ac);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_ATTRIBS_ARB = System::Word(0x88ad);
static _DELPHI_CONST System::Word GL_PROGRAM_NATIVE_ATTRIBS_ARB = System::Word(0x88ae);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB = System::Word(0x88af);
static _DELPHI_CONST System::Word GL_PROGRAM_ADDRESS_REGISTERS_ARB = System::Word(0x88b0);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB = System::Word(0x88b1);
static _DELPHI_CONST System::Word GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB = System::Word(0x88b2);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB = System::Word(0x88b3);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB = System::Word(0x88b4);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_ENV_PARAMETERS_ARB = System::Word(0x88b5);
static _DELPHI_CONST System::Word GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB = System::Word(0x88b6);
static _DELPHI_CONST System::Word GL_TRANSPOSE_CURRENT_MATRIX_ARB = System::Word(0x88b7);
static _DELPHI_CONST System::Word GL_MATRIX0_ARB = System::Word(0x88c0);
static _DELPHI_CONST System::Word GL_MATRIX1_ARB = System::Word(0x88c1);
static _DELPHI_CONST System::Word GL_MATRIX2_ARB = System::Word(0x88c2);
static _DELPHI_CONST System::Word GL_MATRIX3_ARB = System::Word(0x88c3);
static _DELPHI_CONST System::Word GL_MATRIX4_ARB = System::Word(0x88c4);
static _DELPHI_CONST System::Word GL_MATRIX5_ARB = System::Word(0x88c5);
static _DELPHI_CONST System::Word GL_MATRIX6_ARB = System::Word(0x88c6);
static _DELPHI_CONST System::Word GL_MATRIX7_ARB = System::Word(0x88c7);
static _DELPHI_CONST System::Word GL_MATRIX8_ARB = System::Word(0x88c8);
static _DELPHI_CONST System::Word GL_MATRIX9_ARB = System::Word(0x88c9);
static _DELPHI_CONST System::Word GL_MATRIX10_ARB = System::Word(0x88ca);
static _DELPHI_CONST System::Word GL_MATRIX11_ARB = System::Word(0x88cb);
static _DELPHI_CONST System::Word GL_MATRIX12_ARB = System::Word(0x88cc);
static _DELPHI_CONST System::Word GL_MATRIX13_ARB = System::Word(0x88cd);
static _DELPHI_CONST System::Word GL_MATRIX14_ARB = System::Word(0x88ce);
static _DELPHI_CONST System::Word GL_MATRIX15_ARB = System::Word(0x88cf);
static _DELPHI_CONST System::Word GL_MATRIX16_ARB = System::Word(0x88d0);
static _DELPHI_CONST System::Word GL_MATRIX17_ARB = System::Word(0x88d1);
static _DELPHI_CONST System::Word GL_MATRIX18_ARB = System::Word(0x88d2);
static _DELPHI_CONST System::Word GL_MATRIX19_ARB = System::Word(0x88d3);
static _DELPHI_CONST System::Word GL_MATRIX20_ARB = System::Word(0x88d4);
static _DELPHI_CONST System::Word GL_MATRIX21_ARB = System::Word(0x88d5);
static _DELPHI_CONST System::Word GL_MATRIX22_ARB = System::Word(0x88d6);
static _DELPHI_CONST System::Word GL_MATRIX23_ARB = System::Word(0x88d7);
static _DELPHI_CONST System::Word GL_MATRIX24_ARB = System::Word(0x88d8);
static _DELPHI_CONST System::Word GL_MATRIX25_ARB = System::Word(0x88d9);
static _DELPHI_CONST System::Word GL_MATRIX26_ARB = System::Word(0x88da);
static _DELPHI_CONST System::Word GL_MATRIX27_ARB = System::Word(0x88db);
static _DELPHI_CONST System::Word GL_MATRIX28_ARB = System::Word(0x88dc);
static _DELPHI_CONST System::Word GL_MATRIX29_ARB = System::Word(0x88dd);
static _DELPHI_CONST System::Word GL_MATRIX30_ARB = System::Word(0x88de);
static _DELPHI_CONST System::Word GL_MATRIX31_ARB = System::Word(0x88df);
static _DELPHI_CONST System::Word GL_MAX_DRAW_BUFFERS_ARB = System::Word(0x8824);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER0_ARB = System::Word(0x8825);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER1_ARB = System::Word(0x8826);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER2_ARB = System::Word(0x8827);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER3_ARB = System::Word(0x8828);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER4_ARB = System::Word(0x8829);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER5_ARB = System::Word(0x882a);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER6_ARB = System::Word(0x882b);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER7_ARB = System::Word(0x882c);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER8_ARB = System::Word(0x882d);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER9_ARB = System::Word(0x882e);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER10_ARB = System::Word(0x882f);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER11_ARB = System::Word(0x8830);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER12_ARB = System::Word(0x8831);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER13_ARB = System::Word(0x8832);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER14_ARB = System::Word(0x8833);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER15_ARB = System::Word(0x8834);
static _DELPHI_CONST System::Word GL_TEXTURE_RECTANGLE_ARB = System::Word(0x84f5);
static _DELPHI_CONST System::Word GL_TEXTURE_BINDING_RECTANGLE_ARB = System::Word(0x84f6);
static _DELPHI_CONST System::Word GL_PROXY_TEXTURE_RECTANGLE_ARB = System::Word(0x84f7);
static _DELPHI_CONST System::Word GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB = System::Word(0x84f8);
static _DELPHI_CONST System::Word GL_RGBA_FLOAT_MODE_ARB = System::Word(0x8820);
static _DELPHI_CONST System::Word GL_CLAMP_VERTEX_COLOR_ARB = System::Word(0x891a);
static _DELPHI_CONST System::Word GL_CLAMP_FRAGMENT_COLOR_ARB = System::Word(0x891b);
static _DELPHI_CONST System::Word GL_CLAMP_READ_COLOR_ARB = System::Word(0x891c);
static _DELPHI_CONST System::Word GL_FIXED_ONLY_ARB = System::Word(0x891d);
static _DELPHI_CONST System::Word WGL_TYPE_RGBA_FLOAT_ARB = System::Word(0x21a0);
static _DELPHI_CONST System::Word GLX_RGBA_FLOAT_TYPE = System::Word(0x20b9);
static _DELPHI_CONST System::Int8 GLX_RGBA_FLOAT_BIT = System::Int8(0x4);
static _DELPHI_CONST System::Word GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB = System::Word(0x9344);
static _DELPHI_CONST System::Word GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB = System::Word(0x90eb);
static _DELPHI_CONST System::Word GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB = System::Word(0x9345);
static _DELPHI_CONST System::Word GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB = System::Word(0x91bf);
static _DELPHI_CONST System::Word GL_HALF_FLOAT_ARB = System::Word(0x140b);
static _DELPHI_CONST System::Word GL_TEXTURE_RED_TYPE_ARB = System::Word(0x8c10);
static _DELPHI_CONST System::Word GL_TEXTURE_GREEN_TYPE_ARB = System::Word(0x8c11);
static _DELPHI_CONST System::Word GL_TEXTURE_BLUE_TYPE_ARB = System::Word(0x8c12);
static _DELPHI_CONST System::Word GL_TEXTURE_ALPHA_TYPE_ARB = System::Word(0x8c13);
static _DELPHI_CONST System::Word GL_TEXTURE_LUMINANCE_TYPE_ARB = System::Word(0x8c14);
static _DELPHI_CONST System::Word GL_TEXTURE_INTENSITY_TYPE_ARB = System::Word(0x8c15);
static _DELPHI_CONST System::Word GL_TEXTURE_DEPTH_TYPE_ARB = System::Word(0x8c16);
static _DELPHI_CONST System::Word GL_UNSIGNED_NORMALIZED_ARB = System::Word(0x8c17);
static _DELPHI_CONST System::Word GL_RGBA32F_ARB = System::Word(0x8814);
static _DELPHI_CONST System::Word GL_RGB32F_ARB = System::Word(0x8815);
static _DELPHI_CONST System::Word GL_ALPHA32F_ARB = System::Word(0x8816);
static _DELPHI_CONST System::Word GL_INTENSITY32F_ARB = System::Word(0x8817);
static _DELPHI_CONST System::Word GL_LUMINANCE32F_ARB = System::Word(0x8818);
static _DELPHI_CONST System::Word GL_LUMINANCE_ALPHA32F_ARB = System::Word(0x8819);
static _DELPHI_CONST System::Word GL_RGBA16F_ARB = System::Word(0x881a);
static _DELPHI_CONST System::Word GL_RGB16F_ARB = System::Word(0x881b);
static _DELPHI_CONST System::Word GL_ALPHA16F_ARB = System::Word(0x881c);
static _DELPHI_CONST System::Word GL_INTENSITY16F_ARB = System::Word(0x881d);
static _DELPHI_CONST System::Word GL_LUMINANCE16F_ARB = System::Word(0x881e);
static _DELPHI_CONST System::Word GL_LUMINANCE_ALPHA16F_ARB = System::Word(0x881f);
static _DELPHI_CONST System::Word GL_PIXEL_PACK_BUFFER_ARB = System::Word(0x88eb);
static _DELPHI_CONST System::Word GL_PIXEL_UNPACK_BUFFER_ARB = System::Word(0x88ec);
static _DELPHI_CONST System::Word GL_PIXEL_PACK_BUFFER_BINDING_ARB = System::Word(0x88ed);
static _DELPHI_CONST System::Word GL_PIXEL_UNPACK_BUFFER_BINDING_ARB = System::Word(0x88ef);
static _DELPHI_CONST System::Word GL_DEPTH_COMPONENT32F = System::Word(0x8cac);
static _DELPHI_CONST System::Word GL_DEPTH32F_STENCIL8 = System::Word(0x8cad);
static _DELPHI_CONST System::Word GL_FLOAT_32_UNSIGNED_INT_24_8_REV = System::Word(0x8dad);
static _DELPHI_CONST System::Word GL_INVALID_FRAMEBUFFER_OPERATION = System::Word(0x506);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = System::Word(0x8210);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = System::Word(0x8211);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE = System::Word(0x8212);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = System::Word(0x8213);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = System::Word(0x8214);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = System::Word(0x8215);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = System::Word(0x8216);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = System::Word(0x8217);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_DEFAULT = System::Word(0x8218);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_UNDEFINED = System::Word(0x8219);
static _DELPHI_CONST System::Word GL_DEPTH_STENCIL_ATTACHMENT = System::Word(0x821a);
static _DELPHI_CONST System::Word GL_MAX_RENDERBUFFER_SIZE = System::Word(0x84e8);
static _DELPHI_CONST System::Word GL_DEPTH_STENCIL = System::Word(0x84f9);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_24_8 = System::Word(0x84fa);
static _DELPHI_CONST System::Word GL_DEPTH24_STENCIL8 = System::Word(0x88f0);
static _DELPHI_CONST System::Word GL_TEXTURE_STENCIL_SIZE = System::Word(0x88f1);
static _DELPHI_CONST System::Word GL_TEXTURE_RED_TYPE = System::Word(0x8c10);
static _DELPHI_CONST System::Word GL_TEXTURE_GREEN_TYPE = System::Word(0x8c11);
static _DELPHI_CONST System::Word GL_TEXTURE_BLUE_TYPE = System::Word(0x8c12);
static _DELPHI_CONST System::Word GL_TEXTURE_ALPHA_TYPE = System::Word(0x8c13);
static _DELPHI_CONST System::Word GL_TEXTURE_DEPTH_TYPE = System::Word(0x8c16);
static _DELPHI_CONST System::Word GL_UNSIGNED_NORMALIZED = System::Word(0x8c17);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_BINDING = System::Word(0x8ca6);
static _DELPHI_CONST System::Word GL_DRAW_FRAMEBUFFER_BINDING = System::Word(0x8ca6);
static _DELPHI_CONST System::Word GL_RENDERBUFFER_BINDING = System::Word(0x8ca7);
static _DELPHI_CONST System::Word GL_READ_FRAMEBUFFER = System::Word(0x8ca8);
static _DELPHI_CONST System::Word GL_DRAW_FRAMEBUFFER = System::Word(0x8ca9);
static _DELPHI_CONST System::Word GL_READ_FRAMEBUFFER_BINDING = System::Word(0x8caa);
static _DELPHI_CONST System::Word GL_RENDERBUFFER_SAMPLES = System::Word(0x8cab);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = System::Word(0x8cd0);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = System::Word(0x8cd1);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = System::Word(0x8cd2);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = System::Word(0x8cd3);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = System::Word(0x8cd4);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_COMPLETE = System::Word(0x8cd5);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = System::Word(0x8cd6);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = System::Word(0x8cd7);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER = System::Word(0x8cdb);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER = System::Word(0x8cdc);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_UNSUPPORTED = System::Word(0x8cdd);
static _DELPHI_CONST System::Word GL_MAX_COLOR_ATTACHMENTS = System::Word(0x8cdf);
static _DELPHI_CONST System::Word GL_COLOR_ATTACHMENT0 = System::Word(0x8ce0);
static _DELPHI_CONST System::Word GL_COLOR_ATTACHMENT1 = System::Word(0x8ce1);
static _DELPHI_CONST System::Word GL_COLOR_ATTACHMENT2 = System::Word(0x8ce2);
static _DELPHI_CONST System::Word GL_COLOR_ATTACHMENT3 = System::Word(0x8ce3);
static _DELPHI_CONST System::Word GL_COLOR_ATTACHMENT4 = System::Word(0x8ce4);
static _DELPHI_CONST System::Word GL_COLOR_ATTACHMENT5 = System::Word(0x8ce5);
static _DELPHI_CONST System::Word GL_COLOR_ATTACHMENT6 = System::Word(0x8ce6);
static _DELPHI_CONST System::Word GL_COLOR_ATTACHMENT7 = System::Word(0x8ce7);
static _DELPHI_CONST System::Word GL_COLOR_ATTACHMENT8 = System::Word(0x8ce8);
static _DELPHI_CONST System::Word GL_COLOR_ATTACHMENT9 = System::Word(0x8ce9);
static _DELPHI_CONST System::Word GL_COLOR_ATTACHMENT10 = System::Word(0x8cea);
static _DELPHI_CONST System::Word GL_COLOR_ATTACHMENT11 = System::Word(0x8ceb);
static _DELPHI_CONST System::Word GL_COLOR_ATTACHMENT12 = System::Word(0x8cec);
static _DELPHI_CONST System::Word GL_COLOR_ATTACHMENT13 = System::Word(0x8ced);
static _DELPHI_CONST System::Word GL_COLOR_ATTACHMENT14 = System::Word(0x8cee);
static _DELPHI_CONST System::Word GL_COLOR_ATTACHMENT15 = System::Word(0x8cef);
static _DELPHI_CONST System::Word GL_DEPTH_ATTACHMENT = System::Word(0x8d00);
static _DELPHI_CONST System::Word GL_STENCIL_ATTACHMENT = System::Word(0x8d20);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER = System::Word(0x8d40);
static _DELPHI_CONST System::Word GL_RENDERBUFFER = System::Word(0x8d41);
static _DELPHI_CONST System::Word GL_RENDERBUFFER_WIDTH = System::Word(0x8d42);
static _DELPHI_CONST System::Word GL_RENDERBUFFER_HEIGHT = System::Word(0x8d43);
static _DELPHI_CONST System::Word GL_RENDERBUFFER_INTERNAL_FORMAT = System::Word(0x8d44);
static _DELPHI_CONST System::Word GL_STENCIL_INDEX1 = System::Word(0x8d46);
static _DELPHI_CONST System::Word GL_STENCIL_INDEX4 = System::Word(0x8d47);
static _DELPHI_CONST System::Word GL_STENCIL_INDEX8 = System::Word(0x8d48);
static _DELPHI_CONST System::Word GL_STENCIL_INDEX16 = System::Word(0x8d49);
static _DELPHI_CONST System::Word GL_RENDERBUFFER_RED_SIZE = System::Word(0x8d50);
static _DELPHI_CONST System::Word GL_RENDERBUFFER_GREEN_SIZE = System::Word(0x8d51);
static _DELPHI_CONST System::Word GL_RENDERBUFFER_BLUE_SIZE = System::Word(0x8d52);
static _DELPHI_CONST System::Word GL_RENDERBUFFER_ALPHA_SIZE = System::Word(0x8d53);
static _DELPHI_CONST System::Word GL_RENDERBUFFER_DEPTH_SIZE = System::Word(0x8d54);
static _DELPHI_CONST System::Word GL_RENDERBUFFER_STENCIL_SIZE = System::Word(0x8d55);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = System::Word(0x8d56);
static _DELPHI_CONST System::Word GL_MAX_SAMPLES = System::Word(0x8d57);
static _DELPHI_CONST System::Word GL_INDEX = System::Word(0x8222);
static _DELPHI_CONST System::Word GL_TEXTURE_LUMINANCE_TYPE = System::Word(0x8c14);
static _DELPHI_CONST System::Word GL_TEXTURE_INTENSITY_TYPE = System::Word(0x8c15);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_SRGB = System::Word(0x8db9);
static _DELPHI_CONST System::Int8 GL_LINES_ADJACENCY_ARB = System::Int8(0xa);
static _DELPHI_CONST System::Int8 GL_LINE_STRIP_ADJACENCY_ARB = System::Int8(0xb);
static _DELPHI_CONST System::Int8 GL_TRIANGLES_ADJACENCY_ARB = System::Int8(0xc);
static _DELPHI_CONST System::Int8 GL_TRIANGLE_STRIP_ADJACENCY_ARB = System::Int8(0xd);
static _DELPHI_CONST System::Word GL_PROGRAM_POINT_SIZE_ARB = System::Word(0x8642);
static _DELPHI_CONST System::Word GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB = System::Word(0x8c29);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB = System::Word(0x8da7);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB = System::Word(0x8da8);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB = System::Word(0x8da9);
static _DELPHI_CONST System::Word GL_GEOMETRY_SHADER_ARB = System::Word(0x8dd9);
static _DELPHI_CONST System::Word GL_GEOMETRY_VERTICES_OUT_ARB = System::Word(0x8dda);
static _DELPHI_CONST System::Word GL_GEOMETRY_INPUT_TYPE_ARB = System::Word(0x8ddb);
static _DELPHI_CONST System::Word GL_GEOMETRY_OUTPUT_TYPE_ARB = System::Word(0x8ddc);
static _DELPHI_CONST System::Word GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB = System::Word(0x8ddd);
static _DELPHI_CONST System::Word GL_MAX_VERTEX_VARYING_COMPONENTS_ARB = System::Word(0x8dde);
static _DELPHI_CONST System::Word GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB = System::Word(0x8ddf);
static _DELPHI_CONST System::Word GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB = System::Word(0x8de0);
static _DELPHI_CONST System::Word GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB = System::Word(0x8de1);
static _DELPHI_CONST System::Word GL_SHADER_BINARY_FORMAT_SPIR_V_ARB = System::Word(0x9551);
static _DELPHI_CONST System::Word GL_SPIR_V_BINARY_ARB = System::Word(0x9552);
static _DELPHI_CONST System::Word GL_HALF_FLOAT = System::Word(0x140b);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB = System::Word(0x88fe);
static _DELPHI_CONST System::Int8 GL_MAP_READ_BIT = System::Int8(0x1);
static _DELPHI_CONST System::Int8 GL_MAP_WRITE_BIT = System::Int8(0x2);
static _DELPHI_CONST System::Int8 GL_MAP_INVALIDATE_RANGE_BIT = System::Int8(0x4);
static _DELPHI_CONST System::Int8 GL_MAP_INVALIDATE_BUFFER_BIT = System::Int8(0x8);
static _DELPHI_CONST System::Int8 GL_MAP_FLUSH_EXPLICIT_BIT = System::Int8(0x10);
static _DELPHI_CONST System::Int8 GL_MAP_UNSYNCHRONIZED_BIT = System::Int8(0x20);
static _DELPHI_CONST System::Word GL_TEXTURE_BUFFER_ARB = System::Word(0x8c2a);
static _DELPHI_CONST System::Word GL_MAX_TEXTURE_BUFFER_SIZE_ARB = System::Word(0x8c2b);
static _DELPHI_CONST System::Word GL_TEXTURE_BINDING_BUFFER_ARB = System::Word(0x8c2c);
static _DELPHI_CONST System::Word GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB = System::Word(0x8c2d);
static _DELPHI_CONST System::Word GL_TEXTURE_BUFFER_FORMAT_ARB = System::Word(0x8c2e);
static _DELPHI_CONST System::Word GL_COMPRESSED_RED_RGTC1 = System::Word(0x8dbb);
static _DELPHI_CONST System::Word GL_COMPRESSED_SIGNED_RED_RGTC1 = System::Word(0x8dbc);
static _DELPHI_CONST System::Word GL_COMPRESSED_RG_RGTC2 = System::Word(0x8dbd);
static _DELPHI_CONST System::Word GL_COMPRESSED_SIGNED_RG_RGTC2 = System::Word(0x8dbe);
static _DELPHI_CONST System::Word GL_RG = System::Word(0x8227);
static _DELPHI_CONST System::Word GL_RG_INTEGER = System::Word(0x8228);
static _DELPHI_CONST System::Word GL_R8 = System::Word(0x8229);
static _DELPHI_CONST System::Word GL_R16 = System::Word(0x822a);
static _DELPHI_CONST System::Word GL_RG8 = System::Word(0x822b);
static _DELPHI_CONST System::Word GL_RG16 = System::Word(0x822c);
static _DELPHI_CONST System::Word GL_R16F = System::Word(0x822d);
static _DELPHI_CONST System::Word GL_R32F = System::Word(0x822e);
static _DELPHI_CONST System::Word GL_RG16F = System::Word(0x822f);
static _DELPHI_CONST System::Word GL_RG32F = System::Word(0x8230);
static _DELPHI_CONST System::Word GL_R8I = System::Word(0x8231);
static _DELPHI_CONST System::Word GL_R8UI = System::Word(0x8232);
static _DELPHI_CONST System::Word GL_R16I = System::Word(0x8233);
static _DELPHI_CONST System::Word GL_R16UI = System::Word(0x8234);
static _DELPHI_CONST System::Word GL_R32I = System::Word(0x8235);
static _DELPHI_CONST System::Word GL_R32UI = System::Word(0x8236);
static _DELPHI_CONST System::Word GL_RG8I = System::Word(0x8237);
static _DELPHI_CONST System::Word GL_RG8UI = System::Word(0x8238);
static _DELPHI_CONST System::Word GL_RG16I = System::Word(0x8239);
static _DELPHI_CONST System::Word GL_RG16UI = System::Word(0x823a);
static _DELPHI_CONST System::Word GL_RG32I = System::Word(0x823b);
static _DELPHI_CONST System::Word GL_RG32UI = System::Word(0x823c);
static _DELPHI_CONST System::Word GL_VERTEX_ARRAY_BINDING = System::Word(0x85b5);
static _DELPHI_CONST System::Word GL_UNIFORM_BUFFER = System::Word(0x8a11);
static _DELPHI_CONST System::Word GL_UNIFORM_BUFFER_BINDING = System::Word(0x8a28);
static _DELPHI_CONST System::Word GL_UNIFORM_BUFFER_START = System::Word(0x8a29);
static _DELPHI_CONST System::Word GL_UNIFORM_BUFFER_SIZE = System::Word(0x8a2a);
static _DELPHI_CONST System::Word GL_MAX_VERTEX_UNIFORM_BLOCKS = System::Word(0x8a2b);
static _DELPHI_CONST System::Word GL_MAX_GEOMETRY_UNIFORM_BLOCKS = System::Word(0x8a2c);
static _DELPHI_CONST System::Word GL_MAX_FRAGMENT_UNIFORM_BLOCKS = System::Word(0x8a2d);
static _DELPHI_CONST System::Word GL_MAX_COMBINED_UNIFORM_BLOCKS = System::Word(0x8a2e);
static _DELPHI_CONST System::Word GL_MAX_UNIFORM_BUFFER_BINDINGS = System::Word(0x8a2f);
static _DELPHI_CONST System::Word GL_MAX_UNIFORM_BLOCK_SIZE = System::Word(0x8a30);
static _DELPHI_CONST System::Word GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = System::Word(0x8a31);
static _DELPHI_CONST System::Word GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS = System::Word(0x8a32);
static _DELPHI_CONST System::Word GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = System::Word(0x8a33);
static _DELPHI_CONST System::Word GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT = System::Word(0x8a34);
static _DELPHI_CONST System::Word GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH = System::Word(0x8a35);
static _DELPHI_CONST System::Word GL_ACTIVE_UNIFORM_BLOCKS = System::Word(0x8a36);
static _DELPHI_CONST System::Word GL_UNIFORM_TYPE = System::Word(0x8a37);
static _DELPHI_CONST System::Word GL_UNIFORM_SIZE = System::Word(0x8a38);
static _DELPHI_CONST System::Word GL_UNIFORM_NAME_LENGTH = System::Word(0x8a39);
static _DELPHI_CONST System::Word GL_UNIFORM_BLOCK_INDEX = System::Word(0x8a3a);
static _DELPHI_CONST System::Word GL_UNIFORM_OFFSET = System::Word(0x8a3b);
static _DELPHI_CONST System::Word GL_UNIFORM_ARRAY_STRIDE = System::Word(0x8a3c);
static _DELPHI_CONST System::Word GL_UNIFORM_MATRIX_STRIDE = System::Word(0x8a3d);
static _DELPHI_CONST System::Word GL_UNIFORM_IS_ROW_MAJOR = System::Word(0x8a3e);
static _DELPHI_CONST System::Word GL_UNIFORM_BLOCK_BINDING = System::Word(0x8a3f);
static _DELPHI_CONST System::Word GL_UNIFORM_BLOCK_DATA_SIZE = System::Word(0x8a40);
static _DELPHI_CONST System::Word GL_UNIFORM_BLOCK_NAME_LENGTH = System::Word(0x8a41);
static _DELPHI_CONST System::Word GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS = System::Word(0x8a42);
static _DELPHI_CONST System::Word GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = System::Word(0x8a43);
static _DELPHI_CONST System::Word GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = System::Word(0x8a44);
static _DELPHI_CONST System::Word GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER = System::Word(0x8a45);
static _DELPHI_CONST System::Word GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = System::Word(0x8a46);
static _DELPHI_CONST unsigned GL_INVALID_INDEX = unsigned(0xffffffff);
static _DELPHI_CONST System::Word GL_COPY_READ_BUFFER_BINDING = System::Word(0x8f36);
static _DELPHI_CONST System::Word GL_COPY_READ_BUFFER = System::Word(0x8f36);
static _DELPHI_CONST System::Word GL_COPY_WRITE_BUFFER_BINDING = System::Word(0x8f37);
static _DELPHI_CONST System::Word GL_COPY_WRITE_BUFFER = System::Word(0x8f37);
static _DELPHI_CONST System::Word GL_DEPTH_CLAMP = System::Word(0x864f);
static _DELPHI_CONST System::Word GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION = System::Word(0x8e4c);
static _DELPHI_CONST System::Word GL_FIRST_VERTEX_CONVENTION = System::Word(0x8e4d);
static _DELPHI_CONST System::Word GL_LAST_VERTEX_CONVENTION = System::Word(0x8e4e);
static _DELPHI_CONST System::Word GL_PROVOKING_VERTEX = System::Word(0x8e4f);
static _DELPHI_CONST System::Word GL_TEXTURE_CUBE_MAP_SEAMLESS = System::Word(0x884f);
static _DELPHI_CONST System::Word GL_MAX_SERVER_WAIT_TIMEOUT = System::Word(0x9111);
static _DELPHI_CONST System::Word GL_OBJECT_TYPE = System::Word(0x9112);
static _DELPHI_CONST System::Word GL_SYNC_CONDITION = System::Word(0x9113);
static _DELPHI_CONST System::Word GL_SYNC_STATUS = System::Word(0x9114);
static _DELPHI_CONST System::Word GL_SYNC_FLAGS = System::Word(0x9115);
static _DELPHI_CONST System::Word GL_SYNC_FENCE = System::Word(0x9116);
static _DELPHI_CONST System::Word GL_SYNC_GPU_COMMANDS_COMPLETE = System::Word(0x9117);
static _DELPHI_CONST System::Word GL_UNSIGNALED = System::Word(0x9118);
static _DELPHI_CONST System::Word GL_SIGNALED = System::Word(0x9119);
static _DELPHI_CONST System::Word GL_ALREADY_SIGNALED = System::Word(0x911a);
static _DELPHI_CONST System::Word GL_TIMEOUT_EXPIRED = System::Word(0x911b);
static _DELPHI_CONST System::Word GL_CONDITION_SATISFIED = System::Word(0x911c);
static _DELPHI_CONST System::Word GL_WAIT_FAILED = System::Word(0x911d);
static _DELPHI_CONST System::Int8 GL_SYNC_FLUSH_COMMANDS_BIT = System::Int8(0x1);
static _DELPHI_CONST unsigned __int64 GL_TIMEOUT_IGNORED = 0xffffffffffffffffULL;
static _DELPHI_CONST System::Word GL_SAMPLE_POSITION = System::Word(0x8e50);
static _DELPHI_CONST System::Word GL_SAMPLE_MASK = System::Word(0x8e51);
static _DELPHI_CONST System::Word GL_SAMPLE_MASK_VALUE = System::Word(0x8e52);
static _DELPHI_CONST System::Word GL_MAX_SAMPLE_MASK_WORDS = System::Word(0x8e59);
static _DELPHI_CONST System::Word GL_TEXTURE_2D_MULTISAMPLE = System::Word(0x9100);
static _DELPHI_CONST System::Word GL_PROXY_TEXTURE_2D_MULTISAMPLE = System::Word(0x9101);
static _DELPHI_CONST System::Word GL_TEXTURE_2D_MULTISAMPLE_ARRAY = System::Word(0x9102);
static _DELPHI_CONST System::Word GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY = System::Word(0x9103);
static _DELPHI_CONST System::Word GL_TEXTURE_BINDING_2D_MULTISAMPLE = System::Word(0x9104);
static _DELPHI_CONST System::Word GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY = System::Word(0x9105);
static _DELPHI_CONST System::Word GL_TEXTURE_SAMPLES = System::Word(0x9106);
static _DELPHI_CONST System::Word GL_TEXTURE_FIXED_SAMPLE_LOCATIONS = System::Word(0x9107);
static _DELPHI_CONST System::Word GL_SAMPLER_2D_MULTISAMPLE = System::Word(0x9108);
static _DELPHI_CONST System::Word GL_INT_SAMPLER_2D_MULTISAMPLE = System::Word(0x9109);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE = System::Word(0x910a);
static _DELPHI_CONST System::Word GL_SAMPLER_2D_MULTISAMPLE_ARRAY = System::Word(0x910b);
static _DELPHI_CONST System::Word GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = System::Word(0x910c);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = System::Word(0x910d);
static _DELPHI_CONST System::Word GL_MAX_COLOR_TEXTURE_SAMPLES = System::Word(0x910e);
static _DELPHI_CONST System::Word GL_MAX_DEPTH_TEXTURE_SAMPLES = System::Word(0x910f);
static _DELPHI_CONST System::Word GL_MAX_INTEGER_SAMPLES = System::Word(0x9110);
static _DELPHI_CONST System::Word GL_SAMPLE_SHADING_ARB = System::Word(0x8c36);
static _DELPHI_CONST System::Word GL_MIN_SAMPLE_SHADING_VALUE_ARB = System::Word(0x8c37);
static _DELPHI_CONST System::Word GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB = System::Word(0x933d);
static _DELPHI_CONST System::Word GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB = System::Word(0x933e);
static _DELPHI_CONST System::Word GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB = System::Word(0x933f);
static _DELPHI_CONST System::Word GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB = System::Word(0x9340);
static _DELPHI_CONST System::Word GL_SAMPLE_LOCATION_ARB = System::Word(0x8e50);
static _DELPHI_CONST System::Word GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB = System::Word(0x9341);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB = System::Word(0x9342);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB = System::Word(0x9343);
static _DELPHI_CONST System::Word GL_TEXTURE_CUBE_MAP_ARRAY_ARB = System::Word(0x9009);
static _DELPHI_CONST System::Word GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB = System::Word(0x900a);
static _DELPHI_CONST System::Word GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB = System::Word(0x900b);
static _DELPHI_CONST System::Word GL_SAMPLER_CUBE_MAP_ARRAY_ARB = System::Word(0x900c);
static _DELPHI_CONST System::Word GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB = System::Word(0x900d);
static _DELPHI_CONST System::Word GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB = System::Word(0x900e);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB = System::Word(0x900f);
static _DELPHI_CONST System::Word GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB = System::Word(0x8e5e);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB = System::Word(0x8e5f);
static _DELPHI_CONST System::Word GL_SHADER_INCLUDE_ARB = System::Word(0x8dae);
static _DELPHI_CONST System::Word GL_NAMED_STRING_LENGTH_ARB = System::Word(0x8de9);
static _DELPHI_CONST System::Word GL_NAMED_STRING_TYPE_ARB = System::Word(0x8dea);
static _DELPHI_CONST System::Word GL_COMPRESSED_RGBA_BPTC_UNORM_ARB = System::Word(0x8e8c);
static _DELPHI_CONST System::Word GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB = System::Word(0x8e8d);
static _DELPHI_CONST System::Word GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB = System::Word(0x8e8e);
static _DELPHI_CONST System::Word GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB = System::Word(0x8e8f);
static _DELPHI_CONST System::Word GL_SRC1_COLOR = System::Word(0x88f9);
static _DELPHI_CONST System::Word GL_ONE_MINUS_SRC1_COLOR = System::Word(0x88fa);
static _DELPHI_CONST System::Word GL_ONE_MINUS_SRC1_ALPHA = System::Word(0x88fb);
static _DELPHI_CONST System::Word GL_MAX_DUAL_SOURCE_DRAW_BUFFERS = System::Word(0x88fc);
static _DELPHI_CONST System::Word GL_ANY_SAMPLES_PASSED = System::Word(0x8c2f);
static _DELPHI_CONST System::Word GL_MAX_SHADER_COMPILER_THREADS_ARB = System::Word(0x91b0);
static _DELPHI_CONST System::Word GL_COMPLETION_STATUS_ARB = System::Word(0x91b1);
static _DELPHI_CONST System::Word GL_SAMPLER_BINDING = System::Word(0x8919);
static _DELPHI_CONST System::Word GL_RGB10_A2UI = System::Word(0x906f);
static _DELPHI_CONST System::Word GL_TEXTURE_SWIZZLE_R = System::Word(0x8e42);
static _DELPHI_CONST System::Word GL_TEXTURE_SWIZZLE_G = System::Word(0x8e43);
static _DELPHI_CONST System::Word GL_TEXTURE_SWIZZLE_B = System::Word(0x8e44);
static _DELPHI_CONST System::Word GL_TEXTURE_SWIZZLE_A = System::Word(0x8e45);
static _DELPHI_CONST System::Word GL_TEXTURE_SWIZZLE_RGBA = System::Word(0x8e46);
static _DELPHI_CONST System::Word GL_TEXTURE_SPARSE_ARB = System::Word(0x91a6);
static _DELPHI_CONST System::Word GL_VIRTUAL_PAGE_SIZE_INDEX_ARB = System::Word(0x91a7);
static _DELPHI_CONST System::Word GL_NUM_VIRTUAL_PAGE_SIZES_ARB = System::Word(0x91a8);
static _DELPHI_CONST System::Word GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB = System::Word(0x91a9);
static _DELPHI_CONST System::Word GL_NUM_SPARSE_LEVELS_ARB = System::Word(0x91aa);
static _DELPHI_CONST System::Word GL_VIRTUAL_PAGE_SIZE_X_ARB = System::Word(0x9195);
static _DELPHI_CONST System::Word GL_VIRTUAL_PAGE_SIZE_Y_ARB = System::Word(0x9196);
static _DELPHI_CONST System::Word GL_VIRTUAL_PAGE_SIZE_Z_ARB = System::Word(0x9197);
static _DELPHI_CONST System::Word GL_MAX_SPARSE_TEXTURE_SIZE_ARB = System::Word(0x9198);
static _DELPHI_CONST System::Word GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB = System::Word(0x9199);
static _DELPHI_CONST System::Word GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB = System::Word(0x919a);
static _DELPHI_CONST System::Word GL_MIN_SPARSE_LEVEL_ARB = System::Word(0x919b);
static _DELPHI_CONST System::Word GL_TIME_ELAPSED = System::Word(0x88bf);
static _DELPHI_CONST System::Word GL_TIMESTAMP = System::Word(0x8e28);
static _DELPHI_CONST System::Word GL_INT_2_10_10_10_REV = System::Word(0x8d9f);
static _DELPHI_CONST System::Word GL_DRAW_INDIRECT_BUFFER = System::Word(0x8f3f);
static _DELPHI_CONST System::Word GL_DRAW_INDIRECT_BUFFER_BINDING = System::Word(0x8f43);
static _DELPHI_CONST System::Word GL_GEOMETRY_SHADER_INVOCATIONS = System::Word(0x887f);
static _DELPHI_CONST System::Word GL_MAX_GEOMETRY_SHADER_INVOCATIONS = System::Word(0x8e5a);
static _DELPHI_CONST System::Word GL_MIN_FRAGMENT_INTERPOLATION_OFFSET = System::Word(0x8e5b);
static _DELPHI_CONST System::Word GL_MAX_FRAGMENT_INTERPOLATION_OFFSET = System::Word(0x8e5c);
static _DELPHI_CONST System::Word GL_FRAGMENT_INTERPOLATION_OFFSET_BITS = System::Word(0x8e5d);
static _DELPHI_CONST System::Word GL_DOUBLE_VEC2 = System::Word(0x8ffc);
static _DELPHI_CONST System::Word GL_DOUBLE_VEC3 = System::Word(0x8ffd);
static _DELPHI_CONST System::Word GL_DOUBLE_VEC4 = System::Word(0x8ffe);
static _DELPHI_CONST System::Word GL_DOUBLE_MAT2 = System::Word(0x8f46);
static _DELPHI_CONST System::Word GL_DOUBLE_MAT3 = System::Word(0x8f47);
static _DELPHI_CONST System::Word GL_DOUBLE_MAT4 = System::Word(0x8f48);
static _DELPHI_CONST System::Word GL_DOUBLE_MAT2x3 = System::Word(0x8f49);
static _DELPHI_CONST System::Word GL_DOUBLE_MAT2x4 = System::Word(0x8f4a);
static _DELPHI_CONST System::Word GL_DOUBLE_MAT3x2 = System::Word(0x8f4b);
static _DELPHI_CONST System::Word GL_DOUBLE_MAT3x4 = System::Word(0x8f4c);
static _DELPHI_CONST System::Word GL_DOUBLE_MAT4x2 = System::Word(0x8f4d);
static _DELPHI_CONST System::Word GL_DOUBLE_MAT4x3 = System::Word(0x8f4e);
static _DELPHI_CONST System::Word GL_INT64_ARB = System::Word(0x140e);
static _DELPHI_CONST System::Word GL_INT64_VEC2_ARB = System::Word(0x8fe9);
static _DELPHI_CONST System::Word GL_INT64_VEC3_ARB = System::Word(0x8fea);
static _DELPHI_CONST System::Word GL_INT64_VEC4_ARB = System::Word(0x8feb);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT64_VEC2_ARB = System::Word(0x8ff5);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT64_VEC3_ARB = System::Word(0x8ff6);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT64_VEC4_ARB = System::Word(0x8ff7);
static _DELPHI_CONST System::Word GL_ACTIVE_SUBROUTINES = System::Word(0x8de5);
static _DELPHI_CONST System::Word GL_ACTIVE_SUBROUTINE_UNIFORMS = System::Word(0x8de6);
static _DELPHI_CONST System::Word GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS = System::Word(0x8e47);
static _DELPHI_CONST System::Word GL_ACTIVE_SUBROUTINE_MAX_LENGTH = System::Word(0x8e48);
static _DELPHI_CONST System::Word GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH = System::Word(0x8e49);
static _DELPHI_CONST System::Word GL_MAX_SUBROUTINES = System::Word(0x8de7);
static _DELPHI_CONST System::Word GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS = System::Word(0x8de8);
static _DELPHI_CONST System::Word GL_NUM_COMPATIBLE_SUBROUTINES = System::Word(0x8e4a);
static _DELPHI_CONST System::Word GL_COMPATIBLE_SUBROUTINES = System::Word(0x8e4b);
static _DELPHI_CONST System::Int8 GL_PATCHES = System::Int8(0xe);
static _DELPHI_CONST System::Word GL_PATCH_VERTICES = System::Word(0x8e72);
static _DELPHI_CONST System::Word GL_PATCH_DEFAULT_INNER_LEVEL = System::Word(0x8e73);
static _DELPHI_CONST System::Word GL_PATCH_DEFAULT_OUTER_LEVEL = System::Word(0x8e74);
static _DELPHI_CONST System::Word GL_TESS_CONTROL_OUTPUT_VERTICES = System::Word(0x8e75);
static _DELPHI_CONST System::Word GL_TESS_GEN_MODE = System::Word(0x8e76);
static _DELPHI_CONST System::Word GL_TESS_GEN_SPACING = System::Word(0x8e77);
static _DELPHI_CONST System::Word GL_TESS_GEN_VERTEX_ORDER = System::Word(0x8e78);
static _DELPHI_CONST System::Word GL_TESS_GEN_POINT_MODE = System::Word(0x8e79);
static _DELPHI_CONST System::Word GL_ISOLINES = System::Word(0x8e7a);
static _DELPHI_CONST System::Word GL_FRACTIONAL_ODD = System::Word(0x8e7b);
static _DELPHI_CONST System::Word GL_FRACTIONAL_EVEN = System::Word(0x8e7c);
static _DELPHI_CONST System::Word GL_MAX_PATCH_VERTICES = System::Word(0x8e7d);
static _DELPHI_CONST System::Word GL_MAX_TESS_GEN_LEVEL = System::Word(0x8e7e);
static _DELPHI_CONST System::Word GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS = System::Word(0x8e7f);
static _DELPHI_CONST System::Word GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS = System::Word(0x8e80);
static _DELPHI_CONST System::Word GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS = System::Word(0x8e81);
static _DELPHI_CONST System::Word GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS = System::Word(0x8e82);
static _DELPHI_CONST System::Word GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS = System::Word(0x8e83);
static _DELPHI_CONST System::Word GL_MAX_TESS_PATCH_COMPONENTS = System::Word(0x8e84);
static _DELPHI_CONST System::Word GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS = System::Word(0x8e85);
static _DELPHI_CONST System::Word GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS = System::Word(0x8e86);
static _DELPHI_CONST System::Word GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS = System::Word(0x8e89);
static _DELPHI_CONST System::Word GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS = System::Word(0x8e8a);
static _DELPHI_CONST System::Word GL_MAX_TESS_CONTROL_INPUT_COMPONENTS = System::Word(0x886c);
static _DELPHI_CONST System::Word GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS = System::Word(0x886d);
static _DELPHI_CONST System::Word GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS = System::Word(0x8e1e);
static _DELPHI_CONST System::Word GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS = System::Word(0x8e1f);
static _DELPHI_CONST System::Word GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER = System::Word(0x84f0);
static _DELPHI_CONST System::Word GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER = System::Word(0x84f1);
static _DELPHI_CONST System::Word GL_TESS_EVALUATION_SHADER = System::Word(0x8e87);
static _DELPHI_CONST System::Word GL_TESS_CONTROL_SHADER = System::Word(0x8e88);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK = System::Word(0x8e22);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_PAUSED = System::Word(0x8e23);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED = System::Word(0x8e23);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_ACTIVE = System::Word(0x8e24);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE = System::Word(0x8e24);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_BINDING = System::Word(0x8e25);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB = System::Word(0x82ec);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB = System::Word(0x82ed);
static _DELPHI_CONST System::Word GL_MAX_TRANSFORM_FEEDBACK_BUFFERS = System::Word(0x8e70);
static _DELPHI_CONST System::Word GL_MAX_VERTEX_STREAMS = System::Word(0x8e71);
static _DELPHI_CONST System::Word GL_FIXED = System::Word(0x140c);
static _DELPHI_CONST System::Word GL_IMPLEMENTATION_COLOR_READ_TYPE = System::Word(0x8b9a);
static _DELPHI_CONST System::Word GL_IMPLEMENTATION_COLOR_READ_FORMAT = System::Word(0x8b9b);
static _DELPHI_CONST System::Word GL_LOW_FLOAT = System::Word(0x8df0);
static _DELPHI_CONST System::Word GL_MEDIUM_FLOAT = System::Word(0x8df1);
static _DELPHI_CONST System::Word GL_HIGH_FLOAT = System::Word(0x8df2);
static _DELPHI_CONST System::Word GL_LOW_INT = System::Word(0x8df3);
static _DELPHI_CONST System::Word GL_MEDIUM_INT = System::Word(0x8df4);
static _DELPHI_CONST System::Word GL_HIGH_INT = System::Word(0x8df5);
static _DELPHI_CONST System::Word GL_SHADER_COMPILER = System::Word(0x8dfa);
static _DELPHI_CONST System::Word GL_NUM_SHADER_BINARY_FORMATS = System::Word(0x8df9);
static _DELPHI_CONST System::Word GL_MAX_VERTEX_UNIFORM_VECTORS = System::Word(0x8dfb);
static _DELPHI_CONST System::Word GL_MAX_VARYING_VECTORS = System::Word(0x8dfc);
static _DELPHI_CONST System::Word GL_MAX_FRAGMENT_UNIFORM_VECTORS = System::Word(0x8dfd);
static _DELPHI_CONST System::Word GL_RGB565 = System::Word(0x8d62);
static _DELPHI_CONST System::Word GL_PRIMITIVE_BOUNDING_BOX_ARB = System::Word(0x92be);
static _DELPHI_CONST System::Word GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB = System::Word(0x9381);
static _DELPHI_CONST System::Word GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB = System::Word(0x9382);
static _DELPHI_CONST System::Word GL_PROGRAM_BINARY_RETRIEVABLE_HINT = System::Word(0x8257);
static _DELPHI_CONST System::Word GL_PROGRAM_BINARY_LENGTH = System::Word(0x8741);
static _DELPHI_CONST System::Word GL_NUM_PROGRAM_BINARY_FORMATS = System::Word(0x87fe);
static _DELPHI_CONST System::Word GL_PROGRAM_BINARY_FORMATS = System::Word(0x87ff);
static _DELPHI_CONST System::Int8 GL_VERTEX_SHADER_BIT = System::Int8(0x1);
static _DELPHI_CONST System::Int8 GL_FRAGMENT_SHADER_BIT = System::Int8(0x2);
static _DELPHI_CONST System::Int8 GL_GEOMETRY_SHADER_BIT = System::Int8(0x4);
static _DELPHI_CONST System::Int8 GL_TESS_CONTROL_SHADER_BIT = System::Int8(0x8);
static _DELPHI_CONST System::Int8 GL_TESS_EVALUATION_SHADER_BIT = System::Int8(0x10);
static _DELPHI_CONST unsigned GL_ALL_SHADER_BITS = unsigned(0xffffffff);
static _DELPHI_CONST System::Word GL_PROGRAM_SEPARABLE = System::Word(0x8258);
static _DELPHI_CONST System::Word GL_ACTIVE_PROGRAM = System::Word(0x8259);
static _DELPHI_CONST System::Word GL_PROGRAM_PIPELINE_BINDING = System::Word(0x825a);
static _DELPHI_CONST System::Word GL_MAX_VIEWPORTS = System::Word(0x825b);
static _DELPHI_CONST System::Word GL_VIEWPORT_SUBPIXEL_BITS = System::Word(0x825c);
static _DELPHI_CONST System::Word GL_VIEWPORT_BOUNDS_RANGE = System::Word(0x825d);
static _DELPHI_CONST System::Word GL_LAYER_PROVOKING_VERTEX = System::Word(0x825e);
static _DELPHI_CONST System::Word GL_VIEWPORT_INDEX_PROVOKING_VERTEX = System::Word(0x825f);
static _DELPHI_CONST System::Word GL_UNDEFINED_VERTEX = System::Word(0x8260);
static _DELPHI_CONST System::Word GL_SYNC_CL_EVENT_ARB = System::Word(0x8240);
static _DELPHI_CONST System::Word GL_SYNC_CL_EVENT_COMPLETE_ARB = System::Word(0x8241);
static _DELPHI_CONST System::Word GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB = System::Word(0x8242);
static _DELPHI_CONST System::Word GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB = System::Word(0x8243);
static _DELPHI_CONST System::Word GL_DEBUG_CALLBACK_FUNCTION_ARB = System::Word(0x8244);
static _DELPHI_CONST System::Word GL_DEBUG_CALLBACK_USER_PARAM_ARB = System::Word(0x8245);
static _DELPHI_CONST System::Word GL_DEBUG_SOURCE_API_ARB = System::Word(0x8246);
static _DELPHI_CONST System::Word GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB = System::Word(0x8247);
static _DELPHI_CONST System::Word GL_DEBUG_SOURCE_SHADER_COMPILER_ARB = System::Word(0x8248);
static _DELPHI_CONST System::Word GL_DEBUG_SOURCE_THIRD_PARTY_ARB = System::Word(0x8249);
static _DELPHI_CONST System::Word GL_DEBUG_SOURCE_APPLICATION_ARB = System::Word(0x824a);
static _DELPHI_CONST System::Word GL_DEBUG_SOURCE_OTHER_ARB = System::Word(0x824b);
static _DELPHI_CONST System::Word GL_DEBUG_TYPE_ERROR_ARB = System::Word(0x824c);
static _DELPHI_CONST System::Word GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB = System::Word(0x824d);
static _DELPHI_CONST System::Word GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB = System::Word(0x824e);
static _DELPHI_CONST System::Word GL_DEBUG_TYPE_PORTABILITY_ARB = System::Word(0x824f);
static _DELPHI_CONST System::Word GL_DEBUG_TYPE_PERFORMANCE_ARB = System::Word(0x8250);
static _DELPHI_CONST System::Word GL_DEBUG_TYPE_OTHER_ARB = System::Word(0x8251);
static _DELPHI_CONST System::Word GL_MAX_DEBUG_MESSAGE_LENGTH_ARB = System::Word(0x9143);
static _DELPHI_CONST System::Word GL_MAX_DEBUG_LOGGED_MESSAGES_ARB = System::Word(0x9144);
static _DELPHI_CONST System::Word GL_DEBUG_LOGGED_MESSAGES_ARB = System::Word(0x9145);
static _DELPHI_CONST System::Word GL_DEBUG_SEVERITY_HIGH_ARB = System::Word(0x9146);
static _DELPHI_CONST System::Word GL_DEBUG_SEVERITY_MEDIUM_ARB = System::Word(0x9147);
static _DELPHI_CONST System::Word GL_DEBUG_SEVERITY_LOW_ARB = System::Word(0x9148);
static _DELPHI_CONST System::Int8 GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB = System::Int8(0x4);
static _DELPHI_CONST System::Word GL_LOSE_CONTEXT_ON_RESET_ARB = System::Word(0x8252);
static _DELPHI_CONST System::Word GL_GUILTY_CONTEXT_RESET_ARB = System::Word(0x8253);
static _DELPHI_CONST System::Word GL_INNOCENT_CONTEXT_RESET_ARB = System::Word(0x8254);
static _DELPHI_CONST System::Word GL_UNKNOWN_CONTEXT_RESET_ARB = System::Word(0x8255);
static _DELPHI_CONST System::Word GL_RESET_NOTIFICATION_STRATEGY_ARB = System::Word(0x8256);
static _DELPHI_CONST System::Word GL_NO_RESET_NOTIFICATION_ARB = System::Word(0x8261);
static _DELPHI_CONST System::Word GL_UNPACK_COMPRESSED_BLOCK_WIDTH = System::Word(0x9127);
static _DELPHI_CONST System::Word GL_UNPACK_COMPRESSED_BLOCK_HEIGHT = System::Word(0x9128);
static _DELPHI_CONST System::Word GL_UNPACK_COMPRESSED_BLOCK_DEPTH = System::Word(0x9129);
static _DELPHI_CONST System::Word GL_UNPACK_COMPRESSED_BLOCK_SIZE = System::Word(0x912a);
static _DELPHI_CONST System::Word GL_PACK_COMPRESSED_BLOCK_WIDTH = System::Word(0x912b);
static _DELPHI_CONST System::Word GL_PACK_COMPRESSED_BLOCK_HEIGHT = System::Word(0x912c);
static _DELPHI_CONST System::Word GL_PACK_COMPRESSED_BLOCK_DEPTH = System::Word(0x912d);
static _DELPHI_CONST System::Word GL_PACK_COMPRESSED_BLOCK_SIZE = System::Word(0x912e);
static _DELPHI_CONST System::Word GL_NUM_SAMPLE_COUNTS = System::Word(0x9380);
static _DELPHI_CONST System::Word GL_MIN_MAP_BUFFER_ALIGNMENT = System::Word(0x90bc);
static _DELPHI_CONST System::Word GL_ATOMIC_COUNTER_BUFFER = System::Word(0x92c0);
static _DELPHI_CONST System::Word GL_ATOMIC_COUNTER_BUFFER_BINDING = System::Word(0x92c1);
static _DELPHI_CONST System::Word GL_ATOMIC_COUNTER_BUFFER_START = System::Word(0x92c2);
static _DELPHI_CONST System::Word GL_ATOMIC_COUNTER_BUFFER_SIZE = System::Word(0x92c3);
static _DELPHI_CONST System::Word GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE = System::Word(0x92c4);
static _DELPHI_CONST System::Word GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS = System::Word(0x92c5);
static _DELPHI_CONST System::Word GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES = System::Word(0x92c6);
static _DELPHI_CONST System::Word GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER = System::Word(0x92c7);
static _DELPHI_CONST System::Word GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER = System::Word(0x92c8);
static _DELPHI_CONST System::Word GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER = System::Word(0x92c9);
static _DELPHI_CONST System::Word GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER = System::Word(0x92ca);
static _DELPHI_CONST System::Word GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER = System::Word(0x92cb);
static _DELPHI_CONST System::Word GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS = System::Word(0x92cc);
static _DELPHI_CONST System::Word GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS = System::Word(0x92cd);
static _DELPHI_CONST System::Word GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS = System::Word(0x92ce);
static _DELPHI_CONST System::Word GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS = System::Word(0x92cf);
static _DELPHI_CONST System::Word GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS = System::Word(0x92d0);
static _DELPHI_CONST System::Word GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS = System::Word(0x92d1);
static _DELPHI_CONST System::Word GL_MAX_VERTEX_ATOMIC_COUNTERS = System::Word(0x92d2);
static _DELPHI_CONST System::Word GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS = System::Word(0x92d3);
static _DELPHI_CONST System::Word GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS = System::Word(0x92d4);
static _DELPHI_CONST System::Word GL_MAX_GEOMETRY_ATOMIC_COUNTERS = System::Word(0x92d5);
static _DELPHI_CONST System::Word GL_MAX_FRAGMENT_ATOMIC_COUNTERS = System::Word(0x92d6);
static _DELPHI_CONST System::Word GL_MAX_COMBINED_ATOMIC_COUNTERS = System::Word(0x92d7);
static _DELPHI_CONST System::Word GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE = System::Word(0x92d8);
static _DELPHI_CONST System::Word GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS = System::Word(0x92dc);
static _DELPHI_CONST System::Word GL_ACTIVE_ATOMIC_COUNTER_BUFFERS = System::Word(0x92d9);
static _DELPHI_CONST System::Word GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX = System::Word(0x92da);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_ATOMIC_COUNTER = System::Word(0x92db);
static _DELPHI_CONST System::Int8 GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT = System::Int8(0x1);
static _DELPHI_CONST System::Int8 GL_ELEMENT_ARRAY_BARRIER_BIT = System::Int8(0x2);
static _DELPHI_CONST System::Int8 GL_UNIFORM_BARRIER_BIT = System::Int8(0x4);
static _DELPHI_CONST System::Int8 GL_TEXTURE_FETCH_BARRIER_BIT = System::Int8(0x8);
static _DELPHI_CONST System::Int8 GL_SHADER_IMAGE_ACCESS_BARRIER_BIT = System::Int8(0x20);
static _DELPHI_CONST System::Int8 GL_COMMAND_BARRIER_BIT = System::Int8(0x40);
static _DELPHI_CONST System::Byte GL_PIXEL_BUFFER_BARRIER_BIT = System::Byte(0x80);
static _DELPHI_CONST System::Word GL_TEXTURE_UPDATE_BARRIER_BIT = System::Word(0x100);
static _DELPHI_CONST System::Word GL_BUFFER_UPDATE_BARRIER_BIT = System::Word(0x200);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_BARRIER_BIT = System::Word(0x400);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_BARRIER_BIT = System::Word(0x800);
static _DELPHI_CONST System::Word GL_ATOMIC_COUNTER_BARRIER_BIT = System::Word(0x1000);
static _DELPHI_CONST unsigned GL_ALL_BARRIER_BITS = unsigned(0xffffffff);
static _DELPHI_CONST System::Word GL_MAX_IMAGE_UNITS = System::Word(0x8f38);
static _DELPHI_CONST System::Word GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS = System::Word(0x8f39);
static _DELPHI_CONST System::Word GL_IMAGE_BINDING_NAME = System::Word(0x8f3a);
static _DELPHI_CONST System::Word GL_IMAGE_BINDING_LEVEL = System::Word(0x8f3b);
static _DELPHI_CONST System::Word GL_IMAGE_BINDING_LAYERED = System::Word(0x8f3c);
static _DELPHI_CONST System::Word GL_IMAGE_BINDING_LAYER = System::Word(0x8f3d);
static _DELPHI_CONST System::Word GL_IMAGE_BINDING_ACCESS = System::Word(0x8f3e);
static _DELPHI_CONST System::Word GL_IMAGE_1D = System::Word(0x904c);
static _DELPHI_CONST System::Word GL_IMAGE_2D = System::Word(0x904d);
static _DELPHI_CONST System::Word GL_IMAGE_3D = System::Word(0x904e);
static _DELPHI_CONST System::Word GL_IMAGE_2D_RECT = System::Word(0x904f);
static _DELPHI_CONST System::Word GL_IMAGE_CUBE = System::Word(0x9050);
static _DELPHI_CONST System::Word GL_IMAGE_BUFFER = System::Word(0x9051);
static _DELPHI_CONST System::Word GL_IMAGE_1D_ARRAY = System::Word(0x9052);
static _DELPHI_CONST System::Word GL_IMAGE_2D_ARRAY = System::Word(0x9053);
static _DELPHI_CONST System::Word GL_IMAGE_CUBE_MAP_ARRAY = System::Word(0x9054);
static _DELPHI_CONST System::Word GL_IMAGE_2D_MULTISAMPLE = System::Word(0x9055);
static _DELPHI_CONST System::Word GL_IMAGE_2D_MULTISAMPLE_ARRAY = System::Word(0x9056);
static _DELPHI_CONST System::Word GL_INT_IMAGE_1D = System::Word(0x9057);
static _DELPHI_CONST System::Word GL_INT_IMAGE_2D = System::Word(0x9058);
static _DELPHI_CONST System::Word GL_INT_IMAGE_3D = System::Word(0x9059);
static _DELPHI_CONST System::Word GL_INT_IMAGE_2D_RECT = System::Word(0x905a);
static _DELPHI_CONST System::Word GL_INT_IMAGE_CUBE = System::Word(0x905b);
static _DELPHI_CONST System::Word GL_INT_IMAGE_BUFFER = System::Word(0x905c);
static _DELPHI_CONST System::Word GL_INT_IMAGE_1D_ARRAY = System::Word(0x905d);
static _DELPHI_CONST System::Word GL_INT_IMAGE_2D_ARRAY = System::Word(0x905e);
static _DELPHI_CONST System::Word GL_INT_IMAGE_CUBE_MAP_ARRAY = System::Word(0x905f);
static _DELPHI_CONST System::Word GL_INT_IMAGE_2D_MULTISAMPLE = System::Word(0x9060);
static _DELPHI_CONST System::Word GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY = System::Word(0x9061);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_IMAGE_1D = System::Word(0x9062);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_IMAGE_2D = System::Word(0x9063);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_IMAGE_3D = System::Word(0x9064);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_IMAGE_2D_RECT = System::Word(0x9065);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_IMAGE_CUBE = System::Word(0x9066);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_IMAGE_BUFFER = System::Word(0x9067);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_IMAGE_1D_ARRAY = System::Word(0x9068);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_IMAGE_2D_ARRAY = System::Word(0x9069);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY = System::Word(0x906a);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE = System::Word(0x906b);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY = System::Word(0x906c);
static _DELPHI_CONST System::Word GL_MAX_IMAGE_SAMPLES = System::Word(0x906d);
static _DELPHI_CONST System::Word GL_IMAGE_BINDING_FORMAT = System::Word(0x906e);
static _DELPHI_CONST System::Word GL_IMAGE_FORMAT_COMPATIBILITY_TYPE = System::Word(0x90c7);
static _DELPHI_CONST System::Word GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE = System::Word(0x90c8);
static _DELPHI_CONST System::Word GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS = System::Word(0x90c9);
static _DELPHI_CONST System::Word GL_MAX_VERTEX_IMAGE_UNIFORMS = System::Word(0x90ca);
static _DELPHI_CONST System::Word GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS = System::Word(0x90cb);
static _DELPHI_CONST System::Word GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS = System::Word(0x90cc);
static _DELPHI_CONST System::Word GL_MAX_GEOMETRY_IMAGE_UNIFORMS = System::Word(0x90cd);
static _DELPHI_CONST System::Word GL_MAX_FRAGMENT_IMAGE_UNIFORMS = System::Word(0x90ce);
static _DELPHI_CONST System::Word GL_MAX_COMBINED_IMAGE_UNIFORMS = System::Word(0x90cf);
static _DELPHI_CONST System::Word GL_TEXTURE_IMMUTABLE_FORMAT = System::Word(0x912f);
static _DELPHI_CONST System::Word GL_COMPRESSED_RGBA_ASTC_4x4_KHR = System::Word(0x93b0);
static _DELPHI_CONST System::Word GL_COMPRESSED_RGBA_ASTC_5x4_KHR = System::Word(0x93b1);
static _DELPHI_CONST System::Word GL_COMPRESSED_RGBA_ASTC_5x5_KHR = System::Word(0x93b2);
static _DELPHI_CONST System::Word GL_COMPRESSED_RGBA_ASTC_6x5_KHR = System::Word(0x93b3);
static _DELPHI_CONST System::Word GL_COMPRESSED_RGBA_ASTC_6x6_KHR = System::Word(0x93b4);
static _DELPHI_CONST System::Word GL_COMPRESSED_RGBA_ASTC_8x5_KHR = System::Word(0x93b5);
static _DELPHI_CONST System::Word GL_COMPRESSED_RGBA_ASTC_8x6_KHR = System::Word(0x93b6);
static _DELPHI_CONST System::Word GL_COMPRESSED_RGBA_ASTC_8x8_KHR = System::Word(0x93b7);
static _DELPHI_CONST System::Word GL_COMPRESSED_RGBA_ASTC_105_KHR = System::Word(0x93b8);
static _DELPHI_CONST System::Word GL_COMPRESSED_RGBA_ASTC_106_KHR = System::Word(0x93b9);
static _DELPHI_CONST System::Word GL_COMPRESSED_RGBA_ASTC_108_KHR = System::Word(0x93ba);
static _DELPHI_CONST System::Word GL_COMPRESSED_RGBA_ASTC_110_KHR = System::Word(0x93bb);
static _DELPHI_CONST System::Word GL_COMPRESSED_RGBA_ASTC_12x10_KHR = System::Word(0x93bc);
static _DELPHI_CONST System::Word GL_COMPRESSED_RGBA_ASTC_12x12_KHR = System::Word(0x93bd);
static _DELPHI_CONST System::Word GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR = System::Word(0x93d0);
static _DELPHI_CONST System::Word GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR = System::Word(0x93d1);
static _DELPHI_CONST System::Word GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR = System::Word(0x93d2);
static _DELPHI_CONST System::Word GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR = System::Word(0x93d3);
static _DELPHI_CONST System::Word GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR = System::Word(0x93d4);
static _DELPHI_CONST System::Word GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR = System::Word(0x93d5);
static _DELPHI_CONST System::Word GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR = System::Word(0x93d6);
static _DELPHI_CONST System::Word GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR = System::Word(0x93d7);
static _DELPHI_CONST System::Word GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR = System::Word(0x93d8);
static _DELPHI_CONST System::Word GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR = System::Word(0x93d9);
static _DELPHI_CONST System::Word GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR = System::Word(0x93da);
static _DELPHI_CONST System::Word GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR = System::Word(0x93db);
static _DELPHI_CONST System::Word GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR = System::Word(0x93dc);
static _DELPHI_CONST System::Word GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR = System::Word(0x93dd);
static _DELPHI_CONST System::Word GL_DEBUG_OUTPUT_SYNCHRONOUS = System::Word(0x8242);
static _DELPHI_CONST System::Word GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH = System::Word(0x8243);
static _DELPHI_CONST System::Word GL_DEBUG_CALLBACK_FUNCTION = System::Word(0x8244);
static _DELPHI_CONST System::Word GL_DEBUG_CALLBACK_USER_PARAM = System::Word(0x8245);
static _DELPHI_CONST System::Word GL_DEBUG_SOURCE_API = System::Word(0x8246);
static _DELPHI_CONST System::Word GL_DEBUG_SOURCE_WINDOW_SYSTEM = System::Word(0x8247);
static _DELPHI_CONST System::Word GL_DEBUG_SOURCE_SHADER_COMPILER = System::Word(0x8248);
static _DELPHI_CONST System::Word GL_DEBUG_SOURCE_THIRD_PARTY = System::Word(0x8249);
static _DELPHI_CONST System::Word GL_DEBUG_SOURCE_APPLICATION = System::Word(0x824a);
static _DELPHI_CONST System::Word GL_DEBUG_SOURCE_OTHER = System::Word(0x824b);
static _DELPHI_CONST System::Word GL_DEBUG_TYPE_ERROR = System::Word(0x824c);
static _DELPHI_CONST System::Word GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR = System::Word(0x824d);
static _DELPHI_CONST System::Word GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR = System::Word(0x824e);
static _DELPHI_CONST System::Word GL_DEBUG_TYPE_PORTABILITY = System::Word(0x824f);
static _DELPHI_CONST System::Word GL_DEBUG_TYPE_PERFORMANCE = System::Word(0x8250);
static _DELPHI_CONST System::Word GL_DEBUG_TYPE_OTHER = System::Word(0x8251);
static _DELPHI_CONST System::Word GL_DEBUG_TYPE_MARKER = System::Word(0x8268);
static _DELPHI_CONST System::Word GL_DEBUG_TYPE_PUSH_GROUP = System::Word(0x8269);
static _DELPHI_CONST System::Word GL_DEBUG_TYPE_POP_GROUP = System::Word(0x826a);
static _DELPHI_CONST System::Word GL_DEBUG_SEVERITY_NOTIFICATION = System::Word(0x826b);
static _DELPHI_CONST System::Word GL_MAX_DEBUG_GROUP_STACK_DEPTH = System::Word(0x826c);
static _DELPHI_CONST System::Word GL_DEBUG_GROUP_STACK_DEPTH = System::Word(0x826d);
static _DELPHI_CONST System::Word GL_BUFFER = System::Word(0x82e0);
static _DELPHI_CONST System::Word GL_SHADER = System::Word(0x82e1);
static _DELPHI_CONST System::Word GL_PROGRAM = System::Word(0x82e2);
static _DELPHI_CONST System::Word GL_QUERY = System::Word(0x82e3);
static _DELPHI_CONST System::Word GL_PROGRAM_PIPELINE = System::Word(0x82e4);
static _DELPHI_CONST System::Word GL_SAMPLER = System::Word(0x82e6);
static _DELPHI_CONST System::Word GL_DISPLAY_LIST = System::Word(0x82e7);
static _DELPHI_CONST System::Word GL_MAX_LABEL_LENGTH = System::Word(0x82e8);
static _DELPHI_CONST System::Word GL_MAX_DEBUG_MESSAGE_LENGTH = System::Word(0x9143);
static _DELPHI_CONST System::Word GL_MAX_DEBUG_LOGGED_MESSAGES = System::Word(0x9144);
static _DELPHI_CONST System::Word GL_DEBUG_LOGGED_MESSAGES = System::Word(0x9145);
static _DELPHI_CONST System::Word GL_DEBUG_SEVERITY_HIGH = System::Word(0x9146);
static _DELPHI_CONST System::Word GL_DEBUG_SEVERITY_MEDIUM = System::Word(0x9147);
static _DELPHI_CONST System::Word GL_DEBUG_SEVERITY_LOW = System::Word(0x9148);
static _DELPHI_CONST System::Word GL_DEBUG_OUTPUT = System::Word(0x92e0);
static _DELPHI_CONST System::Int8 GL_CONTEXT_FLAG_DEBUG_BIT = System::Int8(0x2);
static _DELPHI_CONST System::Word GL_COMPUTE_SHADER = System::Word(0x91b9);
static _DELPHI_CONST System::Word GL_MAX_COMPUTE_UNIFORM_BLOCKS = System::Word(0x91bb);
static _DELPHI_CONST System::Word GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS = System::Word(0x91bc);
static _DELPHI_CONST System::Word GL_MAX_COMPUTE_IMAGE_UNIFORMS = System::Word(0x91bd);
static _DELPHI_CONST System::Word GL_MAX_COMPUTE_SHARED_MEMORY_SIZE = System::Word(0x8262);
static _DELPHI_CONST System::Word GL_MAX_COMPUTE_UNIFORM_COMPONENTS = System::Word(0x8263);
static _DELPHI_CONST System::Word GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS = System::Word(0x8264);
static _DELPHI_CONST System::Word GL_MAX_COMPUTE_ATOMIC_COUNTERS = System::Word(0x8265);
static _DELPHI_CONST System::Word GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS = System::Word(0x8266);
static _DELPHI_CONST System::Word GL_MAX_COMPUTE_LOCAL_INVOCATIONS = System::Word(0x90eb);
static _DELPHI_CONST System::Word GL_MAX_COMPUTE_WORK_GROUP_COUNT = System::Word(0x91be);
static _DELPHI_CONST System::Word GL_MAX_COMPUTE_WORK_GROUP_SIZE = System::Word(0x91bf);
static _DELPHI_CONST System::Word GL_COMPUTE_LOCAL_WORK_SIZE = System::Word(0x8267);
static _DELPHI_CONST System::Word GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER = System::Word(0x90ec);
static _DELPHI_CONST System::Word GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER = System::Word(0x90ed);
static _DELPHI_CONST System::Word GL_DISPATCH_INDIRECT_BUFFER = System::Word(0x90ee);
static _DELPHI_CONST System::Word GL_DISPATCH_INDIRECT_BUFFER_BINDING = System::Word(0x90ef);
static _DELPHI_CONST System::Int8 GL_COMPUTE_SHADER_BIT = System::Int8(0x20);
static _DELPHI_CONST System::Word GL_COMPRESSED_RGB8_ETC2 = System::Word(0x9274);
static _DELPHI_CONST System::Word GL_COMPRESSED_SRGB8_ETC2 = System::Word(0x9275);
static _DELPHI_CONST System::Word GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = System::Word(0x9276);
static _DELPHI_CONST System::Word GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = System::Word(0x9277);
static _DELPHI_CONST System::Word GL_COMPRESSED_RGBA8_ETC2_EAC = System::Word(0x9278);
static _DELPHI_CONST System::Word GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = System::Word(0x9279);
static _DELPHI_CONST System::Word GL_COMPRESSED_R11_EAC = System::Word(0x9270);
static _DELPHI_CONST System::Word GL_COMPRESSED_SIGNED_R11_EAC = System::Word(0x9271);
static _DELPHI_CONST System::Word GL_COMPRESSED_RG11_EAC = System::Word(0x9272);
static _DELPHI_CONST System::Word GL_COMPRESSED_SIGNED_RG11_EAC = System::Word(0x9273);
static _DELPHI_CONST System::Word GL_PRIMITIVE_RESTART_FIXED_INDEX = System::Word(0x8d69);
static _DELPHI_CONST System::Word GL_ANY_SAMPLES_PASSED_CONSERVATIVE = System::Word(0x8d6a);
static _DELPHI_CONST System::Word GL_MAX_ELEMENT_INDEX = System::Word(0x8d6b);
static _DELPHI_CONST System::Word GL_MAX_UNIFORM_LOCATIONS = System::Word(0x826e);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_DEFAULT_WIDTH = System::Word(0x9310);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_DEFAULT_HEIGHT = System::Word(0x9311);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_DEFAULT_LAYERS = System::Word(0x9312);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_DEFAULT_SAMPLES = System::Word(0x9313);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS = System::Word(0x9314);
static _DELPHI_CONST System::Word GL_MAX_FRAMEBUFFER_WIDTH = System::Word(0x9315);
static _DELPHI_CONST System::Word GL_MAX_FRAMEBUFFER_HEIGHT = System::Word(0x9316);
static _DELPHI_CONST System::Word GL_MAX_FRAMEBUFFER_LAYERS = System::Word(0x9317);
static _DELPHI_CONST System::Word GL_MAX_FRAMEBUFFER_SAMPLES = System::Word(0x9318);
static _DELPHI_CONST System::Word GL_INTERNALFORMAT_SUPPORTED = System::Word(0x826f);
static _DELPHI_CONST System::Word GL_INTERNALFORMAT_PREFERRED = System::Word(0x8270);
static _DELPHI_CONST System::Word GL_INTERNALFORMAT_RED_SIZE = System::Word(0x8271);
static _DELPHI_CONST System::Word GL_INTERNALFORMAT_GREEN_SIZE = System::Word(0x8272);
static _DELPHI_CONST System::Word GL_INTERNALFORMAT_BLUE_SIZE = System::Word(0x8273);
static _DELPHI_CONST System::Word GL_INTERNALFORMAT_ALPHA_SIZE = System::Word(0x8274);
static _DELPHI_CONST System::Word GL_INTERNALFORMAT_DEPTH_SIZE = System::Word(0x8275);
static _DELPHI_CONST System::Word GL_INTERNALFORMAT_STENCIL_SIZE = System::Word(0x8276);
static _DELPHI_CONST System::Word GL_INTERNALFORMAT_SHARED_SIZE = System::Word(0x8277);
static _DELPHI_CONST System::Word GL_INTERNALFORMAT_RED_TYPE = System::Word(0x8278);
static _DELPHI_CONST System::Word GL_INTERNALFORMAT_GREEN_TYPE = System::Word(0x8279);
static _DELPHI_CONST System::Word GL_INTERNALFORMAT_BLUE_TYPE = System::Word(0x827a);
static _DELPHI_CONST System::Word GL_INTERNALFORMAT_ALPHA_TYPE = System::Word(0x827b);
static _DELPHI_CONST System::Word GL_INTERNALFORMAT_DEPTH_TYPE = System::Word(0x827c);
static _DELPHI_CONST System::Word GL_INTERNALFORMAT_STENCIL_TYPE = System::Word(0x827d);
static _DELPHI_CONST System::Word GL_MAX_WIDTH = System::Word(0x827e);
static _DELPHI_CONST System::Word GL_MAX_HEIGHT = System::Word(0x827f);
static _DELPHI_CONST System::Word GL_MAX_DEPTH = System::Word(0x8280);
static _DELPHI_CONST System::Word GL_MAX_LAYERS = System::Word(0x8281);
static _DELPHI_CONST System::Word GL_MAX_COMBINED_DIMENSIONS = System::Word(0x8282);
static _DELPHI_CONST System::Word GL_COLOR_COMPONENTS = System::Word(0x8283);
static _DELPHI_CONST System::Word GL_DEPTH_COMPONENTS = System::Word(0x8284);
static _DELPHI_CONST System::Word GL_STENCIL_COMPONENTS = System::Word(0x8285);
static _DELPHI_CONST System::Word GL_COLOR_RENDERABLE = System::Word(0x8286);
static _DELPHI_CONST System::Word GL_DEPTH_RENDERABLE = System::Word(0x8287);
static _DELPHI_CONST System::Word GL_STENCIL_RENDERABLE = System::Word(0x8288);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_RENDERABLE = System::Word(0x8289);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_RENDERABLE_LAYERED = System::Word(0x828a);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_BLEND = System::Word(0x828b);
static _DELPHI_CONST System::Word GL_READ_PIXELS = System::Word(0x828c);
static _DELPHI_CONST System::Word GL_READ_PIXELS_FORMAT = System::Word(0x828d);
static _DELPHI_CONST System::Word GL_READ_PIXELS_TYPE = System::Word(0x828e);
static _DELPHI_CONST System::Word GL_TEXTURE_IMAGE_FORMAT = System::Word(0x828f);
static _DELPHI_CONST System::Word GL_TEXTURE_IMAGE_TYPE = System::Word(0x8290);
static _DELPHI_CONST System::Word GL_GET_TEXTURE_IMAGE_FORMAT = System::Word(0x8291);
static _DELPHI_CONST System::Word GL_GET_TEXTURE_IMAGE_TYPE = System::Word(0x8292);
static _DELPHI_CONST System::Word GL_MIPMAP = System::Word(0x8293);
static _DELPHI_CONST System::Word GL_MANUAL_GENERATE_MIPMAP = System::Word(0x8294);
static _DELPHI_CONST System::Word GL_AUTO_GENERATE_MIPMAP = System::Word(0x8295);
static _DELPHI_CONST System::Word GL_COLOR_ENCODING = System::Word(0x8296);
static _DELPHI_CONST System::Word GL_SRGB_READ = System::Word(0x8297);
static _DELPHI_CONST System::Word GL_SRGB_WRITE = System::Word(0x8298);
static _DELPHI_CONST System::Word GL_SRGB_DECODE_ARB = System::Word(0x8299);
static _DELPHI_CONST System::Word GL_FILTER = System::Word(0x829a);
static _DELPHI_CONST System::Word GL_VERTEX_TEXTURE = System::Word(0x829b);
static _DELPHI_CONST System::Word GL_TESS_CONTROL_TEXTURE = System::Word(0x829c);
static _DELPHI_CONST System::Word GL_TESS_EVALUATION_TEXTURE = System::Word(0x829d);
static _DELPHI_CONST System::Word GL_GEOMETRY_TEXTURE = System::Word(0x829e);
static _DELPHI_CONST System::Word GL_FRAGMENT_TEXTURE = System::Word(0x829f);
static _DELPHI_CONST System::Word GL_COMPUTE_TEXTURE = System::Word(0x82a0);
static _DELPHI_CONST System::Word GL_TEXTURE_SHADOW = System::Word(0x82a1);
static _DELPHI_CONST System::Word GL_TEXTURE_GATHER = System::Word(0x82a2);
static _DELPHI_CONST System::Word GL_TEXTURE_GATHER_SHADOW = System::Word(0x82a3);
static _DELPHI_CONST System::Word GL_SHADER_IMAGE_LOAD = System::Word(0x82a4);
static _DELPHI_CONST System::Word GL_SHADER_IMAGE_STORE = System::Word(0x82a5);
static _DELPHI_CONST System::Word GL_SHADER_IMAGE_ATOMIC = System::Word(0x82a6);
static _DELPHI_CONST System::Word GL_IMAGE_TEXEL_SIZE = System::Word(0x82a7);
static _DELPHI_CONST System::Word GL_IMAGE_COMPATIBILITY_CLASS = System::Word(0x82a8);
static _DELPHI_CONST System::Word GL_IMAGE_PIXEL_FORMAT = System::Word(0x82a9);
static _DELPHI_CONST System::Word GL_IMAGE_PIXEL_TYPE = System::Word(0x82aa);
static _DELPHI_CONST System::Word GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST = System::Word(0x82ac);
static _DELPHI_CONST System::Word GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST = System::Word(0x82ad);
static _DELPHI_CONST System::Word GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE = System::Word(0x82ae);
static _DELPHI_CONST System::Word GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE = System::Word(0x82af);
static _DELPHI_CONST System::Word GL_TEXTURE_COMPRESSED_BLOCK_WIDTH = System::Word(0x82b1);
static _DELPHI_CONST System::Word GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT = System::Word(0x82b2);
static _DELPHI_CONST System::Word GL_TEXTURE_COMPRESSED_BLOCK_SIZE = System::Word(0x82b3);
static _DELPHI_CONST System::Word GL_CLEAR_BUFFER = System::Word(0x82b4);
static _DELPHI_CONST System::Word GL_TEXTURE_VIEW = System::Word(0x82b5);
static _DELPHI_CONST System::Word GL_VIEW_COMPATIBILITY_CLASS = System::Word(0x82b6);
static _DELPHI_CONST System::Word GL_FULL_SUPPORT = System::Word(0x82b7);
static _DELPHI_CONST System::Word GL_CAVEAT_SUPPORT = System::Word(0x82b8);
static _DELPHI_CONST System::Word GL_IMAGE_CLASS_4_X_32 = System::Word(0x82b9);
static _DELPHI_CONST System::Word GL_IMAGE_CLASS_2_X_32 = System::Word(0x82ba);
static _DELPHI_CONST System::Word GL_IMAGE_CLASS_1_X_32 = System::Word(0x82bb);
static _DELPHI_CONST System::Word GL_IMAGE_CLASS_4_X_16 = System::Word(0x82bc);
static _DELPHI_CONST System::Word GL_IMAGE_CLASS_2_X_16 = System::Word(0x82bd);
static _DELPHI_CONST System::Word GL_IMAGE_CLASS_1_X_16 = System::Word(0x82be);
static _DELPHI_CONST System::Word GL_IMAGE_CLASS_4_X_8 = System::Word(0x82bf);
static _DELPHI_CONST System::Word GL_IMAGE_CLASS_2_X_8 = System::Word(0x82c0);
static _DELPHI_CONST System::Word GL_IMAGE_CLASS_1_X_8 = System::Word(0x82c1);
static _DELPHI_CONST System::Word GL_IMAGE_CLASS_11_11_10 = System::Word(0x82c2);
static _DELPHI_CONST System::Word GL_IMAGE_CLASS_10_10_10_2 = System::Word(0x82c3);
static _DELPHI_CONST System::Word GL_VIEW_CLASS_128_BITS = System::Word(0x82c4);
static _DELPHI_CONST System::Word GL_VIEW_CLASS_96_BITS = System::Word(0x82c5);
static _DELPHI_CONST System::Word GL_VIEW_CLASS_64_BITS = System::Word(0x82c6);
static _DELPHI_CONST System::Word GL_VIEW_CLASS_48_BITS = System::Word(0x82c7);
static _DELPHI_CONST System::Word GL_VIEW_CLASS_32_BITS = System::Word(0x82c8);
static _DELPHI_CONST System::Word GL_VIEW_CLASS_24_BITS = System::Word(0x82c9);
static _DELPHI_CONST System::Word GL_VIEW_CLASS_16_BITS = System::Word(0x82ca);
static _DELPHI_CONST System::Word GL_VIEW_CLASS_8_BITS = System::Word(0x82cb);
static _DELPHI_CONST System::Word GL_VIEW_CLASS_S3TC_DXT1_RGB = System::Word(0x82cc);
static _DELPHI_CONST System::Word GL_VIEW_CLASS_S3TC_DXT1_RGBA = System::Word(0x82cd);
static _DELPHI_CONST System::Word GL_VIEW_CLASS_S3TC_DXT3_RGBA = System::Word(0x82ce);
static _DELPHI_CONST System::Word GL_VIEW_CLASS_S3TC_DXT5_RGBA = System::Word(0x82cf);
static _DELPHI_CONST System::Word GL_VIEW_CLASS_RGTC1_RED = System::Word(0x82d0);
static _DELPHI_CONST System::Word GL_VIEW_CLASS_RGTC2_RG = System::Word(0x82d1);
static _DELPHI_CONST System::Word GL_VIEW_CLASS_BPTC_UNORM = System::Word(0x82d2);
static _DELPHI_CONST System::Word GL_VIEW_CLASS_BPTC_FLOAT = System::Word(0x82d3);
static _DELPHI_CONST System::Word GL_UNIFORM = System::Word(0x92e1);
static _DELPHI_CONST System::Word GL_UNIFORM_BLOCK = System::Word(0x92e2);
static _DELPHI_CONST System::Word GL_PROGRAM_INPUT = System::Word(0x92e3);
static _DELPHI_CONST System::Word GL_PROGRAM_OUTPUT = System::Word(0x92e4);
static _DELPHI_CONST System::Word GL_BUFFER_VARIABLE = System::Word(0x92e5);
static _DELPHI_CONST System::Word GL_SHADER_STORAGE_BLOCK = System::Word(0x92e6);
static _DELPHI_CONST System::Word GL_VERTEX_SUBROUTINE = System::Word(0x92e8);
static _DELPHI_CONST System::Word GL_TESS_CONTROL_SUBROUTINE = System::Word(0x92e9);
static _DELPHI_CONST System::Word GL_TESS_EVALUATION_SUBROUTINE = System::Word(0x92ea);
static _DELPHI_CONST System::Word GL_GEOMETRY_SUBROUTINE = System::Word(0x92eb);
static _DELPHI_CONST System::Word GL_FRAGMENT_SUBROUTINE = System::Word(0x92ec);
static _DELPHI_CONST System::Word GL_COMPUTE_SUBROUTINE = System::Word(0x92ed);
static _DELPHI_CONST System::Word GL_VERTEX_SUBROUTINE_UNIFORM = System::Word(0x92ee);
static _DELPHI_CONST System::Word GL_TESS_CONTROL_SUBROUTINE_UNIFORM = System::Word(0x92ef);
static _DELPHI_CONST System::Word GL_TESS_EVALUATION_SUBROUTINE_UNIFORM = System::Word(0x92f0);
static _DELPHI_CONST System::Word GL_GEOMETRY_SUBROUTINE_UNIFORM = System::Word(0x92f1);
static _DELPHI_CONST System::Word GL_FRAGMENT_SUBROUTINE_UNIFORM = System::Word(0x92f2);
static _DELPHI_CONST System::Word GL_COMPUTE_SUBROUTINE_UNIFORM = System::Word(0x92f3);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_VARYING = System::Word(0x92f4);
static _DELPHI_CONST System::Word GL_ACTIVE_RESOURCES = System::Word(0x92f5);
static _DELPHI_CONST System::Word GL_MAX_NAME_LENGTH = System::Word(0x92f6);
static _DELPHI_CONST System::Word GL_MAX_NUM_ACTIVE_VARIABLES = System::Word(0x92f7);
static _DELPHI_CONST System::Word GL_MAX_NUM_COMPATIBLE_SUBROUTINES = System::Word(0x92f8);
static _DELPHI_CONST System::Word GL_NAME_LENGTH = System::Word(0x92f9);
static _DELPHI_CONST System::Word GL_TYPE = System::Word(0x92fa);
static _DELPHI_CONST System::Word GL_ARRAY_SIZE = System::Word(0x92fb);
static _DELPHI_CONST System::Word GL_OFFSET = System::Word(0x92fc);
static _DELPHI_CONST System::Word GL_BLOCK_INDEX = System::Word(0x92fd);
static _DELPHI_CONST System::Word GL_ARRAY_STRIDE = System::Word(0x92fe);
static _DELPHI_CONST System::Word GL_MATRIX_STRIDE = System::Word(0x92ff);
static _DELPHI_CONST System::Word GL_IS_ROW_MAJOR = System::Word(0x9300);
static _DELPHI_CONST System::Word GL_ATOMIC_COUNTER_BUFFER_INDEX = System::Word(0x9301);
static _DELPHI_CONST System::Word GL_BUFFER_BINDING = System::Word(0x9302);
static _DELPHI_CONST System::Word GL_BUFFER_DATA_SIZE = System::Word(0x9303);
static _DELPHI_CONST System::Word GL_NUM_ACTIVE_VARIABLES = System::Word(0x9304);
static _DELPHI_CONST System::Word GL_ACTIVE_VARIABLES = System::Word(0x9305);
static _DELPHI_CONST System::Word GL_REFERENCED_BY_VERTEX_SHADER = System::Word(0x9306);
static _DELPHI_CONST System::Word GL_REFERENCED_BY_TESS_CONTROL_SHADER = System::Word(0x9307);
static _DELPHI_CONST System::Word GL_REFERENCED_BY_TESS_EVALUATION_SHADER = System::Word(0x9308);
static _DELPHI_CONST System::Word GL_REFERENCED_BY_GEOMETRY_SHADER = System::Word(0x9309);
static _DELPHI_CONST System::Word GL_REFERENCED_BY_FRAGMENT_SHADER = System::Word(0x930a);
static _DELPHI_CONST System::Word GL_REFERENCED_BY_COMPUTE_SHADER = System::Word(0x930b);
static _DELPHI_CONST System::Word GL_TOP_LEVEL_ARRAY_SIZE = System::Word(0x930c);
static _DELPHI_CONST System::Word GL_TOP_LEVEL_ARRAY_STRIDE = System::Word(0x930d);
static _DELPHI_CONST System::Word GL_LOCATION = System::Word(0x930e);
static _DELPHI_CONST System::Word GL_LOCATION_INDEX = System::Word(0x930f);
static _DELPHI_CONST System::Word GL_IS_PER_PATCH = System::Word(0x92e7);
static _DELPHI_CONST System::Word GL_SHADER_STORAGE_BUFFER = System::Word(0x90d2);
static _DELPHI_CONST System::Word GL_SHADER_STORAGE_BUFFER_BINDING = System::Word(0x90d3);
static _DELPHI_CONST System::Word GL_SHADER_STORAGE_BUFFER_START = System::Word(0x90d4);
static _DELPHI_CONST System::Word GL_SHADER_STORAGE_BUFFER_SIZE = System::Word(0x90d5);
static _DELPHI_CONST System::Word GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS = System::Word(0x90d6);
static _DELPHI_CONST System::Word GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS = System::Word(0x90d7);
static _DELPHI_CONST System::Word GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS = System::Word(0x90d8);
static _DELPHI_CONST System::Word GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS = System::Word(0x90d9);
static _DELPHI_CONST System::Word GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS = System::Word(0x90da);
static _DELPHI_CONST System::Word GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS = System::Word(0x90db);
static _DELPHI_CONST System::Word GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS = System::Word(0x90dc);
static _DELPHI_CONST System::Word GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS = System::Word(0x90dd);
static _DELPHI_CONST System::Word GL_MAX_SHADER_STORAGE_BLOCK_SIZE = System::Word(0x90de);
static _DELPHI_CONST System::Word GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT = System::Word(0x90df);
static _DELPHI_CONST System::Word GL_SHADER_STORAGE_BARRIER_BIT = System::Word(0x2000);
static _DELPHI_CONST System::Word GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES = System::Word(0x8f39);
static _DELPHI_CONST System::Word GL_DEPTH_STENCIL_TEXTURE_MODE = System::Word(0x90ea);
static _DELPHI_CONST System::Word GL_TEXTURE_BUFFER_OFFSET = System::Word(0x919d);
static _DELPHI_CONST System::Word GL_TEXTURE_BUFFER_SIZE = System::Word(0x919e);
static _DELPHI_CONST System::Word GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT = System::Word(0x919f);
static _DELPHI_CONST System::Word GL_TEXTURE_VIEW_MIN_LEVEL = System::Word(0x82db);
static _DELPHI_CONST System::Word GL_TEXTURE_VIEW_NUM_LEVELS = System::Word(0x82dc);
static _DELPHI_CONST System::Word GL_TEXTURE_VIEW_MIN_LAYER = System::Word(0x82dd);
static _DELPHI_CONST System::Word GL_TEXTURE_VIEW_NUM_LAYERS = System::Word(0x82de);
static _DELPHI_CONST System::Word GL_TEXTURE_IMMUTABLE_LEVELS = System::Word(0x82df);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_BINDING = System::Word(0x82d4);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_RELATIVE_OFFSET = System::Word(0x82d5);
static _DELPHI_CONST System::Word GL_VERTEX_BINDING_DIVISOR = System::Word(0x82d6);
static _DELPHI_CONST System::Word GL_VERTEX_BINDING_OFFSET = System::Word(0x82d7);
static _DELPHI_CONST System::Word GL_VERTEX_BINDING_STRIDE = System::Word(0x82d8);
static _DELPHI_CONST System::Word GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET = System::Word(0x82d9);
static _DELPHI_CONST System::Word GL_MAX_VERTEX_ATTRIB_BINDINGS = System::Word(0x82da);
static _DELPHI_CONST System::Word GL_MAX_VERTEX_ATTRIB_STRIDE = System::Word(0x82e5);
static _DELPHI_CONST System::Word GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED = System::Word(0x8221);
static _DELPHI_CONST System::Word GL_TEXTURE_BUFFER_BINDING = System::Word(0x8c2a);
static _DELPHI_CONST System::Int8 GL_MAP_PERSISTENT_BIT = System::Int8(0x40);
static _DELPHI_CONST System::Byte GL_MAP_COHERENT_BIT = System::Byte(0x80);
static _DELPHI_CONST System::Word GL_DYNAMIC_STORAGE_BIT = System::Word(0x100);
static _DELPHI_CONST System::Word GL_CLIENT_STORAGE_BIT = System::Word(0x200);
static _DELPHI_CONST System::Word GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT = System::Word(0x4000);
static _DELPHI_CONST System::Word GL_BUFFER_IMMUTABLE_STORAGE = System::Word(0x821f);
static _DELPHI_CONST System::Word GL_BUFFER_STORAGE_FLAGS = System::Word(0x8220);
static _DELPHI_CONST System::Word GL_CLEAR_TEXTURE = System::Word(0x9365);
static _DELPHI_CONST System::Word GL_LOCATION_COMPONENT = System::Word(0x934a);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_BUFFER_INDEX = System::Word(0x934b);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE = System::Word(0x934c);
static _DELPHI_CONST System::Word GL_QUERY_BUFFER = System::Word(0x9192);
static _DELPHI_CONST System::Word GL_QUERY_BUFFER_BARRIER_BIT = System::Word(0x8000);
static _DELPHI_CONST System::Word GL_QUERY_BUFFER_BINDING = System::Word(0x9193);
static _DELPHI_CONST System::Word GL_QUERY_RESULT_NO_WAIT = System::Word(0x9194);
static _DELPHI_CONST System::Word GL_MIRROR_CLAMP_TO_EDGE = System::Word(0x8743);
static _DELPHI_CONST System::Word GL_CONTEXT_LOST = System::Word(0x507);
static _DELPHI_CONST System::Word GL_NEGATIVE_ONE_TO_ONE = System::Word(0x935e);
static _DELPHI_CONST System::Word GL_ZERO_TO_ONE = System::Word(0x935f);
static _DELPHI_CONST System::Word GL_CLIP_ORIGIN = System::Word(0x935c);
static _DELPHI_CONST System::Word GL_CLIP_DEPTH_MODE = System::Word(0x935d);
static _DELPHI_CONST System::Word GL_QUERY_WAIT_INVERTED = System::Word(0x8e17);
static _DELPHI_CONST System::Word GL_QUERY_NO_WAIT_INVERTED = System::Word(0x8e18);
static _DELPHI_CONST System::Word GL_QUERY_BY_REGION_WAIT_INVERTED = System::Word(0x8e19);
static _DELPHI_CONST System::Word GL_QUERY_BY_REGION_NO_WAIT_INVERTED = System::Word(0x8e1a);
static _DELPHI_CONST System::Word GL_MAX_CULL_DISTANCES = System::Word(0x82f9);
static _DELPHI_CONST System::Word GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES = System::Word(0x82fa);
static _DELPHI_CONST System::Word GL_TEXTURE_TARGET = System::Word(0x1006);
static _DELPHI_CONST System::Word GL_QUERY_TARGET = System::Word(0x82ea);
static _DELPHI_CONST System::Word GL_TEXTURE_BINDING = System::Word(0x82eb);
static _DELPHI_CONST System::Word GL_GUILTY_CONTEXT_RESET = System::Word(0x8253);
static _DELPHI_CONST System::Word GL_INNOCENT_CONTEXT_RESET = System::Word(0x8254);
static _DELPHI_CONST System::Word GL_UNKNOWN_CONTEXT_RESET = System::Word(0x8255);
static _DELPHI_CONST System::Word GL_RESET_NOTIFICATION_STRATEGY = System::Word(0x8256);
static _DELPHI_CONST System::Word GL_LOSE_CONTEXT_ON_RESET = System::Word(0x8252);
static _DELPHI_CONST System::Word GL_NO_RESET_NOTIFICATION = System::Word(0x8261);
static _DELPHI_CONST System::Int8 GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT = System::Int8(0x4);
static _DELPHI_CONST System::Word GL_CONTEXT_RELEASE_BEHAVIOR = System::Word(0x82fb);
static _DELPHI_CONST System::Word GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH = System::Word(0x82fc);
static _DELPHI_CONST System::Word GL_SHADER_BINARY_FORMAT_SPIR_V = System::Word(0x9551);
static _DELPHI_CONST System::Word GL_SPIR_V_BINARY = System::Word(0x9552);
static _DELPHI_CONST System::Word GL_PARAMETER_BUFFER = System::Word(0x80ee);
static _DELPHI_CONST System::Word GL_PARAMETER_BUFFER_BINDING = System::Word(0x80ef);
static _DELPHI_CONST System::Int8 GL_CONTEXT_FLAG_NO_ERROR_BIT = System::Int8(0x8);
static _DELPHI_CONST System::Word GL_VERTICES_SUBMITTED = System::Word(0x82ee);
static _DELPHI_CONST System::Word GL_PRIMITIVES_SUBMITTED = System::Word(0x82ef);
static _DELPHI_CONST System::Word GL_VERTEX_SHADER_INVOCATIONS = System::Word(0x82f0);
static _DELPHI_CONST System::Word GL_TESS_CONTROL_SHADER_PATCHES = System::Word(0x82f1);
static _DELPHI_CONST System::Word GL_TESS_EVALUATION_SHADER_INVOCATIONS = System::Word(0x82f2);
static _DELPHI_CONST System::Word GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED = System::Word(0x82f3);
static _DELPHI_CONST System::Word GL_FRAGMENT_SHADER_INVOCATIONS = System::Word(0x82f4);
static _DELPHI_CONST System::Word GL_COMPUTE_SHADER_INVOCATIONS = System::Word(0x82f5);
static _DELPHI_CONST System::Word GL_CLIPPING_INPUT_PRIMITIVES = System::Word(0x82f6);
static _DELPHI_CONST System::Word GL_CLIPPING_OUTPUT_PRIMITIVES = System::Word(0x82f7);
static _DELPHI_CONST System::Word GL_POLYGON_OFFSET_CLAMP = System::Word(0x8e1b);
static _DELPHI_CONST System::Word GL_SPIR_V_EXTENSIONS = System::Word(0x9553);
static _DELPHI_CONST System::Word GL_NUM_SPIR_V_EXTENSIONS = System::Word(0x9554);
static _DELPHI_CONST System::Word GL_TEXTURE_MAX_ANISOTROPY = System::Word(0x84fe);
static _DELPHI_CONST System::Word GL_MAX_TEXTURE_MAX_ANISOTROPY = System::Word(0x84ff);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_OVERFLOW = System::Word(0x82ec);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW = System::Word(0x82ed);
static _DELPHI_CONST System::Word GL_MAX_DRAW_BUFFERS_ATI = System::Word(0x8824);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER0_ATI = System::Word(0x8825);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER1_ATI = System::Word(0x8826);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER2_ATI = System::Word(0x8827);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER3_ATI = System::Word(0x8828);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER4_ATI = System::Word(0x8829);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER5_ATI = System::Word(0x882a);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER6_ATI = System::Word(0x882b);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER7_ATI = System::Word(0x882c);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER8_ATI = System::Word(0x882d);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER9_ATI = System::Word(0x882e);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER10_ATI = System::Word(0x882f);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER11_ATI = System::Word(0x8830);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER12_ATI = System::Word(0x8831);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER13_ATI = System::Word(0x8832);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER14_ATI = System::Word(0x8833);
static _DELPHI_CONST System::Word GL_DRAW_BUFFER15_ATI = System::Word(0x8834);
static _DELPHI_CONST System::Word GL_ELEMENT_ARRAY_ATI = System::Word(0x8768);
static _DELPHI_CONST System::Word GL_ELEMENT_ARRAY_TYPE_ATI = System::Word(0x8769);
static _DELPHI_CONST System::Word GL_ELEMENT_ARRAY_POINTER_ATI = System::Word(0x876a);
static _DELPHI_CONST System::Word GL_BUMP_ROT_MATRIX_ATI = System::Word(0x8775);
static _DELPHI_CONST System::Word GL_BUMP_ROT_MATRIX_SIZE_ATI = System::Word(0x8776);
static _DELPHI_CONST System::Word GL_BUMP_NUM_TEX_UNITS_ATI = System::Word(0x8777);
static _DELPHI_CONST System::Word GL_BUMP_TEX_UNITS_ATI = System::Word(0x8778);
static _DELPHI_CONST System::Word GL_DUDV_ATI = System::Word(0x8779);
static _DELPHI_CONST System::Word GL_DU8DV8_ATI = System::Word(0x877a);
static _DELPHI_CONST System::Word GL_BUMP_ENVMAP_ATI = System::Word(0x877b);
static _DELPHI_CONST System::Word GL_BUMP_TARGET_ATI = System::Word(0x877c);
static _DELPHI_CONST System::Word GL_FRAGMENT_SHADER_ATI = System::Word(0x8920);
static _DELPHI_CONST System::Word GL_REG_0_ATI = System::Word(0x8921);
static _DELPHI_CONST System::Word GL_REG_1_ATI = System::Word(0x8922);
static _DELPHI_CONST System::Word GL_REG_2_ATI = System::Word(0x8923);
static _DELPHI_CONST System::Word GL_REG_3_ATI = System::Word(0x8924);
static _DELPHI_CONST System::Word GL_REG_4_ATI = System::Word(0x8925);
static _DELPHI_CONST System::Word GL_REG_5_ATI = System::Word(0x8926);
static _DELPHI_CONST System::Word GL_REG_6_ATI = System::Word(0x8927);
static _DELPHI_CONST System::Word GL_REG_7_ATI = System::Word(0x8928);
static _DELPHI_CONST System::Word GL_REG_8_ATI = System::Word(0x8929);
static _DELPHI_CONST System::Word GL_REG_9_ATI = System::Word(0x892a);
static _DELPHI_CONST System::Word GL_REG_10_ATI = System::Word(0x892b);
static _DELPHI_CONST System::Word GL_REG_11_ATI = System::Word(0x892c);
static _DELPHI_CONST System::Word GL_REG_12_ATI = System::Word(0x892d);
static _DELPHI_CONST System::Word GL_REG_13_ATI = System::Word(0x892e);
static _DELPHI_CONST System::Word GL_REG_14_ATI = System::Word(0x892f);
static _DELPHI_CONST System::Word GL_REG_15_ATI = System::Word(0x8930);
static _DELPHI_CONST System::Word GL_REG_16_ATI = System::Word(0x8931);
static _DELPHI_CONST System::Word GL_REG_17_ATI = System::Word(0x8932);
static _DELPHI_CONST System::Word GL_REG_18_ATI = System::Word(0x8933);
static _DELPHI_CONST System::Word GL_REG_19_ATI = System::Word(0x8934);
static _DELPHI_CONST System::Word GL_REG_20_ATI = System::Word(0x8935);
static _DELPHI_CONST System::Word GL_REG_21_ATI = System::Word(0x8936);
static _DELPHI_CONST System::Word GL_REG_22_ATI = System::Word(0x8937);
static _DELPHI_CONST System::Word GL_REG_23_ATI = System::Word(0x8938);
static _DELPHI_CONST System::Word GL_REG_24_ATI = System::Word(0x8939);
static _DELPHI_CONST System::Word GL_REG_25_ATI = System::Word(0x893a);
static _DELPHI_CONST System::Word GL_REG_26_ATI = System::Word(0x893b);
static _DELPHI_CONST System::Word GL_REG_27_ATI = System::Word(0x893c);
static _DELPHI_CONST System::Word GL_REG_28_ATI = System::Word(0x893d);
static _DELPHI_CONST System::Word GL_REG_29_ATI = System::Word(0x893e);
static _DELPHI_CONST System::Word GL_REG_30_ATI = System::Word(0x893f);
static _DELPHI_CONST System::Word GL_REG_31_ATI = System::Word(0x8940);
static _DELPHI_CONST System::Word GL_CON_0_ATI = System::Word(0x8941);
static _DELPHI_CONST System::Word GL_CON_1_ATI = System::Word(0x8942);
static _DELPHI_CONST System::Word GL_CON_2_ATI = System::Word(0x8943);
static _DELPHI_CONST System::Word GL_CON_3_ATI = System::Word(0x8944);
static _DELPHI_CONST System::Word GL_CON_4_ATI = System::Word(0x8945);
static _DELPHI_CONST System::Word GL_CON_5_ATI = System::Word(0x8946);
static _DELPHI_CONST System::Word GL_CON_6_ATI = System::Word(0x8947);
static _DELPHI_CONST System::Word GL_CON_7_ATI = System::Word(0x8948);
static _DELPHI_CONST System::Word GL_CON_8_ATI = System::Word(0x8949);
static _DELPHI_CONST System::Word GL_CON_9_ATI = System::Word(0x894a);
static _DELPHI_CONST System::Word GL_CON_10_ATI = System::Word(0x894b);
static _DELPHI_CONST System::Word GL_CON_11_ATI = System::Word(0x894c);
static _DELPHI_CONST System::Word GL_CON_12_ATI = System::Word(0x894d);
static _DELPHI_CONST System::Word GL_CON_13_ATI = System::Word(0x894e);
static _DELPHI_CONST System::Word GL_CON_14_ATI = System::Word(0x894f);
static _DELPHI_CONST System::Word GL_CON_15_ATI = System::Word(0x8950);
static _DELPHI_CONST System::Word GL_CON_16_ATI = System::Word(0x8951);
static _DELPHI_CONST System::Word GL_CON_17_ATI = System::Word(0x8952);
static _DELPHI_CONST System::Word GL_CON_18_ATI = System::Word(0x8953);
static _DELPHI_CONST System::Word GL_CON_19_ATI = System::Word(0x8954);
static _DELPHI_CONST System::Word GL_CON_20_ATI = System::Word(0x8955);
static _DELPHI_CONST System::Word GL_CON_21_ATI = System::Word(0x8956);
static _DELPHI_CONST System::Word GL_CON_22_ATI = System::Word(0x8957);
static _DELPHI_CONST System::Word GL_CON_23_ATI = System::Word(0x8958);
static _DELPHI_CONST System::Word GL_CON_24_ATI = System::Word(0x8959);
static _DELPHI_CONST System::Word GL_CON_25_ATI = System::Word(0x895a);
static _DELPHI_CONST System::Word GL_CON_26_ATI = System::Word(0x895b);
static _DELPHI_CONST System::Word GL_CON_27_ATI = System::Word(0x895c);
static _DELPHI_CONST System::Word GL_CON_28_ATI = System::Word(0x895d);
static _DELPHI_CONST System::Word GL_CON_29_ATI = System::Word(0x895e);
static _DELPHI_CONST System::Word GL_CON_30_ATI = System::Word(0x895f);
static _DELPHI_CONST System::Word GL_CON_31_ATI = System::Word(0x8960);
static _DELPHI_CONST System::Word GL_MOV_ATI = System::Word(0x8961);
static _DELPHI_CONST System::Word GL_ADD_ATI = System::Word(0x8963);
static _DELPHI_CONST System::Word GL_MUL_ATI = System::Word(0x8964);
static _DELPHI_CONST System::Word GL_SUB_ATI = System::Word(0x8965);
static _DELPHI_CONST System::Word GL_DOT3_ATI = System::Word(0x8966);
static _DELPHI_CONST System::Word GL_DOT4_ATI = System::Word(0x8967);
static _DELPHI_CONST System::Word GL_MAD_ATI = System::Word(0x8968);
static _DELPHI_CONST System::Word GL_LERP_ATI = System::Word(0x8969);
static _DELPHI_CONST System::Word GL_CND_ATI = System::Word(0x896a);
static _DELPHI_CONST System::Word GL_CND0_ATI = System::Word(0x896b);
static _DELPHI_CONST System::Word GL_DOT2_ADD_ATI = System::Word(0x896c);
static _DELPHI_CONST System::Word GL_SECONDARY_INTERPOLATOR_ATI = System::Word(0x896d);
static _DELPHI_CONST System::Word GL_NUM_FRAGMENT_REGISTERS_ATI = System::Word(0x896e);
static _DELPHI_CONST System::Word GL_NUM_FRAGMENT_CONSTANTS_ATI = System::Word(0x896f);
static _DELPHI_CONST System::Word GL_NUM_PASSES_ATI = System::Word(0x8970);
static _DELPHI_CONST System::Word GL_NUM_INSTRUCTIONS_PER_PASS_ATI = System::Word(0x8971);
static _DELPHI_CONST System::Word GL_NUM_INSTRUCTIONS_TOTAL_ATI = System::Word(0x8972);
static _DELPHI_CONST System::Word GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI = System::Word(0x8973);
static _DELPHI_CONST System::Word GL_NUM_LOOPBACK_COMPONENTS_ATI = System::Word(0x8974);
static _DELPHI_CONST System::Word GL_COLOR_ALPHA_PAIRING_ATI = System::Word(0x8975);
static _DELPHI_CONST System::Word GL_SWIZZLE_STR_ATI = System::Word(0x8976);
static _DELPHI_CONST System::Word GL_SWIZZLE_STQ_ATI = System::Word(0x8977);
static _DELPHI_CONST System::Word GL_SWIZZLE_STR_DR_ATI = System::Word(0x8978);
static _DELPHI_CONST System::Word GL_SWIZZLE_STQ_DQ_ATI = System::Word(0x8979);
static _DELPHI_CONST System::Word GL_SWIZZLE_STRQ_ATI = System::Word(0x897a);
static _DELPHI_CONST System::Word GL_SWIZZLE_STRQ_DQ_ATI = System::Word(0x897b);
static _DELPHI_CONST System::Int8 GL_RED_BIT_ATI = System::Int8(0x1);
static _DELPHI_CONST System::Int8 GL_GREEN_BIT_ATI = System::Int8(0x2);
static _DELPHI_CONST System::Int8 GL_BLUE_BIT_ATI = System::Int8(0x4);
static _DELPHI_CONST System::Int8 GL_2X_BIT_ATI = System::Int8(0x1);
static _DELPHI_CONST System::Int8 GL_4X_BIT_ATI = System::Int8(0x2);
static _DELPHI_CONST System::Int8 GL_8X_BIT_ATI = System::Int8(0x4);
static _DELPHI_CONST System::Int8 GL_HALF_BIT_ATI = System::Int8(0x8);
static _DELPHI_CONST System::Int8 GL_QUARTER_BIT_ATI = System::Int8(0x10);
static _DELPHI_CONST System::Int8 GL_EIGHTH_BIT_ATI = System::Int8(0x20);
static _DELPHI_CONST System::Int8 GL_SATURATE_BIT_ATI = System::Int8(0x40);
static _DELPHI_CONST System::Int8 GL_COMP_BIT_ATI = System::Int8(0x2);
static _DELPHI_CONST System::Int8 GL_NEGATE_BIT_ATI = System::Int8(0x4);
static _DELPHI_CONST System::Int8 GL_BIAS_BIT_ATI = System::Int8(0x8);
static _DELPHI_CONST System::Word GL_PN_TRIANGLES_ATI = System::Word(0x87f0);
static _DELPHI_CONST System::Word GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI = System::Word(0x87f1);
static _DELPHI_CONST System::Word GL_PN_TRIANGLES_POINT_MODE_ATI = System::Word(0x87f2);
static _DELPHI_CONST System::Word GL_PN_TRIANGLES_NORMAL_MODE_ATI = System::Word(0x87f3);
static _DELPHI_CONST System::Word GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI = System::Word(0x87f4);
static _DELPHI_CONST System::Word GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI = System::Word(0x87f5);
static _DELPHI_CONST System::Word GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI = System::Word(0x87f6);
static _DELPHI_CONST System::Word GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI = System::Word(0x87f7);
static _DELPHI_CONST System::Word GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI = System::Word(0x87f8);
static _DELPHI_CONST System::Word GL_STENCIL_BACK_FUNC_ATI = System::Word(0x8800);
static _DELPHI_CONST System::Word GL_STENCIL_BACK_FAIL_ATI = System::Word(0x8801);
static _DELPHI_CONST System::Word GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI = System::Word(0x8802);
static _DELPHI_CONST System::Word GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI = System::Word(0x8803);
static _DELPHI_CONST System::Word GL_TEXT_FRAGMENT_SHADER_ATI = System::Word(0x8200);
static _DELPHI_CONST System::Word GL_MODULATE_ADD_ATI = System::Word(0x8744);
static _DELPHI_CONST System::Word GL_MODULATE_SIGNED_ADD_ATI = System::Word(0x8745);
static _DELPHI_CONST System::Word GL_MODULATE_SUBTRACT_ATI = System::Word(0x8746);
static _DELPHI_CONST System::Word GL_RGBA_FLOAT32_ATI = System::Word(0x8814);
static _DELPHI_CONST System::Word GL_RGB_FLOAT32_ATI = System::Word(0x8815);
static _DELPHI_CONST System::Word GL_ALPHA_FLOAT32_ATI = System::Word(0x8816);
static _DELPHI_CONST System::Word GL_INTENSITY_FLOAT32_ATI = System::Word(0x8817);
static _DELPHI_CONST System::Word GL_LUMINANCE_FLOAT32_ATI = System::Word(0x8818);
static _DELPHI_CONST System::Word GL_LUMINANCE_ALPHA_FLOAT32_ATI = System::Word(0x8819);
static _DELPHI_CONST System::Word GL_RGBA_FLOAT16_ATI = System::Word(0x881a);
static _DELPHI_CONST System::Word GL_RGB_FLOAT16_ATI = System::Word(0x881b);
static _DELPHI_CONST System::Word GL_ALPHA_FLOAT16_ATI = System::Word(0x881c);
static _DELPHI_CONST System::Word GL_INTENSITY_FLOAT16_ATI = System::Word(0x881d);
static _DELPHI_CONST System::Word GL_LUMINANCE_FLOAT16_ATI = System::Word(0x881e);
static _DELPHI_CONST System::Word GL_LUMINANCE_ALPHA_FLOAT16_ATI = System::Word(0x881f);
static _DELPHI_CONST System::Word GL_MIRROR_CLAMP_ATI = System::Word(0x8742);
static _DELPHI_CONST System::Word GL_MIRROR_CLAMP_TO_EDGE_ATI = System::Word(0x8743);
static _DELPHI_CONST System::Word GL_STATIC_ATI = System::Word(0x8760);
static _DELPHI_CONST System::Word GL_DYNAMIC_ATI = System::Word(0x8761);
static _DELPHI_CONST System::Word GL_PRESERVE_ATI = System::Word(0x8762);
static _DELPHI_CONST System::Word GL_DISCARD_ATI = System::Word(0x8763);
static _DELPHI_CONST System::Word GL_OBJECT_BUFFER_SIZE_ATI = System::Word(0x8764);
static _DELPHI_CONST System::Word GL_OBJECT_BUFFER_USAGE_ATI = System::Word(0x8765);
static _DELPHI_CONST System::Word GL_ARRAY_OBJECT_BUFFER_ATI = System::Word(0x8766);
static _DELPHI_CONST System::Word GL_ARRAY_OBJECT_OFFSET_ATI = System::Word(0x8767);
static _DELPHI_CONST System::Word GL_MAX_VERTEX_STREAMS_ATI = System::Word(0x876b);
static _DELPHI_CONST System::Word GL_VERTEX_STREAM0_ATI = System::Word(0x876c);
static _DELPHI_CONST System::Word GL_VERTEX_STREAM1_ATI = System::Word(0x876d);
static _DELPHI_CONST System::Word GL_VERTEX_STREAM2_ATI = System::Word(0x876e);
static _DELPHI_CONST System::Word GL_VERTEX_STREAM3_ATI = System::Word(0x876f);
static _DELPHI_CONST System::Word GL_VERTEX_STREAM4_ATI = System::Word(0x8770);
static _DELPHI_CONST System::Word GL_VERTEX_STREAM5_ATI = System::Word(0x8771);
static _DELPHI_CONST System::Word GL_VERTEX_STREAM6_ATI = System::Word(0x8772);
static _DELPHI_CONST System::Word GL_VERTEX_STREAM7_ATI = System::Word(0x8773);
static _DELPHI_CONST System::Word GL_VERTEX_SOURCE_ATI = System::Word(0x8774);
static _DELPHI_CONST System::Word GL_VBO_FREE_MEMORY_ATI = System::Word(0x87fb);
static _DELPHI_CONST System::Word GL_TEXTURE_FREE_MEMORY_ATI = System::Word(0x87fc);
static _DELPHI_CONST System::Word GL_RENDERBUFFER_FREE_MEMORY_ATI = System::Word(0x87fd);
static _DELPHI_CONST System::Word GL_COUNTER_TYPE_AMD = System::Word(0x8bc0);
static _DELPHI_CONST System::Word GL_COUNTER_RANGE_AMD = System::Word(0x8bc1);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT64_AMD = System::Word(0x8bc2);
static _DELPHI_CONST System::Word GL_PERCENTAGE_AMD = System::Word(0x8bc3);
static _DELPHI_CONST System::Word GL_PERFMON_RESULT_AVAILABLE_AMD = System::Word(0x8bc4);
static _DELPHI_CONST System::Word GL_PERFMON_RESULT_SIZE_AMD = System::Word(0x8bc5);
static _DELPHI_CONST System::Word GL_PERFMON_RESULT_AMD = System::Word(0x8bc6);
static _DELPHI_CONST System::Word GL_SAMPLER_BUFFER_AMD = System::Word(0x9001);
static _DELPHI_CONST System::Word GL_INT_SAMPLER_BUFFER_AMD = System::Word(0x9002);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD = System::Word(0x9003);
static _DELPHI_CONST System::Word GL_TESSELLATION_MODE_AMD = System::Word(0x9004);
static _DELPHI_CONST System::Word GL_TESSELLATION_FACTOR_AMD = System::Word(0x9005);
static _DELPHI_CONST System::Word GL_DISCRETE_AMD = System::Word(0x9006);
static _DELPHI_CONST System::Word GL_CONTINUOUS_AMD = System::Word(0x9007);
static _DELPHI_CONST System::Word GL_DATA_BUFFER_AMD = System::Word(0x9151);
static _DELPHI_CONST System::Word GL_PERFORMANCE_MONITOR_AMD = System::Word(0x9152);
static _DELPHI_CONST System::Word GL_QUERY_OBJECT_AMD = System::Word(0x9153);
static _DELPHI_CONST System::Word GL_VERTEX_ARRAY_OBJECT_AMD = System::Word(0x9154);
static _DELPHI_CONST System::Word GL_SAMPLER_OBJECT_AMD = System::Word(0x9155);
static _DELPHI_CONST System::Word GL_MAX_DEBUG_LOGGED_MESSAGES_AMD = System::Word(0x9144);
static _DELPHI_CONST System::Word GL_DEBUG_LOGGED_MESSAGES_AMD = System::Word(0x9145);
static _DELPHI_CONST System::Word GL_DEBUG_SEVERITY_HIGH_AMD = System::Word(0x9146);
static _DELPHI_CONST System::Word GL_DEBUG_SEVERITY_MEDIUM_AMD = System::Word(0x9147);
static _DELPHI_CONST System::Word GL_DEBUG_SEVERITY_LOW_AMD = System::Word(0x9148);
static _DELPHI_CONST System::Word GL_DEBUG_CATEGORY_API_ERROR_AMD = System::Word(0x9149);
static _DELPHI_CONST System::Word GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD = System::Word(0x914a);
static _DELPHI_CONST System::Word GL_DEBUG_CATEGORY_DEPRECATION_AMD = System::Word(0x914b);
static _DELPHI_CONST System::Word GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD = System::Word(0x914c);
static _DELPHI_CONST System::Word GL_DEBUG_CATEGORY_PERFORMANCE_AMD = System::Word(0x914d);
static _DELPHI_CONST System::Word GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD = System::Word(0x914e);
static _DELPHI_CONST System::Word GL_DEBUG_CATEGORY_APPLICATION_AMD = System::Word(0x914f);
static _DELPHI_CONST System::Word GL_DEBUG_CATEGORY_OTHER_AMD = System::Word(0x9150);
static _DELPHI_CONST System::Word GL_DEPTH_CLAMP_NEAR_AMD = System::Word(0x901e);
static _DELPHI_CONST System::Word GL_DEPTH_CLAMP_FAR_AMD = System::Word(0x901f);
static _DELPHI_CONST System::Word GL_422_EXT = System::Word(0x80cc);
static _DELPHI_CONST System::Word GL_422_REV_EXT = System::Word(0x80cd);
static _DELPHI_CONST System::Word GL_422_AVERAGE_EXT = System::Word(0x80ce);
static _DELPHI_CONST System::Word GL_422_REV_AVERAGE_EXT = System::Word(0x80cf);
static _DELPHI_CONST System::Word GL_ABGR_EXT = System::Word(0x8000);
static _DELPHI_CONST System::Word GL_BGR_EXT = System::Word(0x80e0);
static _DELPHI_CONST System::Word GL_BGRA_EXT = System::Word(0x80e1);
static _DELPHI_CONST System::Word GL_CONSTANT_COLOR_EXT = System::Word(0x8001);
static _DELPHI_CONST System::Word GL_ONE_MINUS_CONSTANT_COLOR_EXT = System::Word(0x8002);
static _DELPHI_CONST System::Word GL_CONSTANT_ALPHA_EXT = System::Word(0x8003);
static _DELPHI_CONST System::Word GL_ONE_MINUS_CONSTANT_ALPHA_EXT = System::Word(0x8004);
static _DELPHI_CONST System::Word GL_BLEND_COLOR_EXT = System::Word(0x8005);
static _DELPHI_CONST System::Word GL_BLEND_DST_RGB_EXT = System::Word(0x80c8);
static _DELPHI_CONST System::Word GL_BLEND_SRC_RGB_EXT = System::Word(0x80c9);
static _DELPHI_CONST System::Word GL_BLEND_DST_ALPHA_EXT = System::Word(0x80ca);
static _DELPHI_CONST System::Word GL_BLEND_SRC_ALPHA_EXT = System::Word(0x80cb);
static _DELPHI_CONST System::Word GL_FUNC_ADD_EXT = System::Word(0x8006);
static _DELPHI_CONST System::Word GL_MIN_EXT = System::Word(0x8007);
static _DELPHI_CONST System::Word GL_MAX_EXT = System::Word(0x8008);
static _DELPHI_CONST System::Word GL_BLEND_EQUATION_EXT = System::Word(0x8009);
static _DELPHI_CONST System::Word GL_FUNC_SUBTRACT_EXT = System::Word(0x800a);
static _DELPHI_CONST System::Word GL_FUNC_REVERSE_SUBTRACT_EXT = System::Word(0x800b);
static _DELPHI_CONST System::Word GL_CLIP_VOLUME_CLIPPING_HINT_EXT = System::Word(0x80f0);
static _DELPHI_CONST System::Word GL_CMYK_EXT = System::Word(0x800c);
static _DELPHI_CONST System::Word GL_CMYKA_EXT = System::Word(0x800d);
static _DELPHI_CONST System::Word GL_PACK_CMYK_HINT_EXT = System::Word(0x800e);
static _DELPHI_CONST System::Word GL_UNPACK_CMYK_HINT_EXT = System::Word(0x800f);
static _DELPHI_CONST System::Word GL_ARRAY_ELEMENT_LOCK_FIRST_EXT = System::Word(0x81a8);
static _DELPHI_CONST System::Word GL_ARRAY_ELEMENT_LOCK_COUNT_EXT = System::Word(0x81a9);
static _DELPHI_CONST System::Word GL_CONVOLUTION_1D_EXT = System::Word(0x8010);
static _DELPHI_CONST System::Word GL_CONVOLUTION_2D_EXT = System::Word(0x8011);
static _DELPHI_CONST System::Word GL_SEPARABLE_2D_EXT = System::Word(0x8012);
static _DELPHI_CONST System::Word GL_CONVOLUTION_BORDER_MODE_EXT = System::Word(0x8013);
static _DELPHI_CONST System::Word GL_CONVOLUTION_FILTER_SCALE_EXT = System::Word(0x8014);
static _DELPHI_CONST System::Word GL_CONVOLUTION_FILTER_BIAS_EXT = System::Word(0x8015);
static _DELPHI_CONST System::Word GL_REDUCE_EXT = System::Word(0x8016);
static _DELPHI_CONST System::Word GL_CONVOLUTION_FORMAT_EXT = System::Word(0x8017);
static _DELPHI_CONST System::Word GL_CONVOLUTION_WIDTH_EXT = System::Word(0x8018);
static _DELPHI_CONST System::Word GL_CONVOLUTION_HEIGHT_EXT = System::Word(0x8019);
static _DELPHI_CONST System::Word GL_MAX_CONVOLUTION_WIDTH_EXT = System::Word(0x801a);
static _DELPHI_CONST System::Word GL_MAX_CONVOLUTION_HEIGHT_EXT = System::Word(0x801b);
static _DELPHI_CONST System::Word GL_POST_CONVOLUTION_RED_SCALE_EXT = System::Word(0x801c);
static _DELPHI_CONST System::Word GL_POST_CONVOLUTION_GREEN_SCALE_EXT = System::Word(0x801d);
static _DELPHI_CONST System::Word GL_POST_CONVOLUTION_BLUE_SCALE_EXT = System::Word(0x801e);
static _DELPHI_CONST System::Word GL_POST_CONVOLUTION_ALPHA_SCALE_EXT = System::Word(0x801f);
static _DELPHI_CONST System::Word GL_POST_CONVOLUTION_RED_BIAS_EXT = System::Word(0x8020);
static _DELPHI_CONST System::Word GL_POST_CONVOLUTION_GREEN_BIAS_EXT = System::Word(0x8021);
static _DELPHI_CONST System::Word GL_POST_CONVOLUTION_BLUE_BIAS_EXT = System::Word(0x8022);
static _DELPHI_CONST System::Word GL_POST_CONVOLUTION_ALPHA_BIAS_EXT = System::Word(0x8023);
static _DELPHI_CONST System::Word GL_TANGENT_ARRAY_EXT = System::Word(0x8439);
static _DELPHI_CONST System::Word GL_BINORMAL_ARRAY_EXT = System::Word(0x843a);
static _DELPHI_CONST System::Word GL_CURRENT_TANGENT_EXT = System::Word(0x843b);
static _DELPHI_CONST System::Word GL_CURRENT_BINORMAL_EXT = System::Word(0x843c);
static _DELPHI_CONST System::Word GL_TANGENT_ARRAY_TYPE_EXT = System::Word(0x843e);
static _DELPHI_CONST System::Word GL_TANGENT_ARRAY_STRIDE_EXT = System::Word(0x843f);
static _DELPHI_CONST System::Word GL_BINORMAL_ARRAY_TYPE_EXT = System::Word(0x8440);
static _DELPHI_CONST System::Word GL_BINORMAL_ARRAY_STRIDE_EXT = System::Word(0x8441);
static _DELPHI_CONST System::Word GL_TANGENT_ARRAY_POINTER_EXT = System::Word(0x8442);
static _DELPHI_CONST System::Word GL_BINORMAL_ARRAY_POINTER_EXT = System::Word(0x8443);
static _DELPHI_CONST System::Word GL_MAP1_TANGENT_EXT = System::Word(0x8444);
static _DELPHI_CONST System::Word GL_MAP2_TANGENT_EXT = System::Word(0x8445);
static _DELPHI_CONST System::Word GL_MAP1_BINORMAL_EXT = System::Word(0x8446);
static _DELPHI_CONST System::Word GL_MAP2_BINORMAL_EXT = System::Word(0x8447);
static _DELPHI_CONST System::Word GL_CULL_VERTEX_EXT = System::Word(0x81aa);
static _DELPHI_CONST System::Word GL_CULL_VERTEX_EYE_POSITION_EXT = System::Word(0x81ab);
static _DELPHI_CONST System::Word GL_CULL_VERTEX_OBJECT_POSITION_EXT = System::Word(0x81ac);
static _DELPHI_CONST System::Word GL_MAX_ELEMENTS_VERTICES_EXT = System::Word(0x80e8);
static _DELPHI_CONST System::Word GL_MAX_ELEMENTS_INDICES_EXT = System::Word(0x80e9);
static _DELPHI_CONST System::Word GL_FOG_COORDINATE_SOURCE_EXT = System::Word(0x8450);
static _DELPHI_CONST System::Word GL_FOG_COORDINATE_EXT = System::Word(0x8451);
static _DELPHI_CONST System::Word GL_FRAGMENT_DEPTH_EXT = System::Word(0x8452);
static _DELPHI_CONST System::Word GL_CURRENT_FOG_COORDINATE_EXT = System::Word(0x8453);
static _DELPHI_CONST System::Word GL_FOG_COORDINATE_ARRAY_TYPE_EXT = System::Word(0x8454);
static _DELPHI_CONST System::Word GL_FOG_COORDINATE_ARRAY_STRIDE_EXT = System::Word(0x8455);
static _DELPHI_CONST System::Word GL_FOG_COORDINATE_ARRAY_POINTER_EXT = System::Word(0x8456);
static _DELPHI_CONST System::Word GL_FOG_COORDINATE_ARRAY_EXT = System::Word(0x8457);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_EXT = System::Word(0x8d40);
static _DELPHI_CONST System::Word GL_RENDERBUFFER_EXT = System::Word(0x8d41);
static _DELPHI_CONST System::Word GL_STENCIL_INDEX_EXT = System::Word(0x8d45);
static _DELPHI_CONST System::Word GL_STENCIL_INDEX1_EXT = System::Word(0x8d46);
static _DELPHI_CONST System::Word GL_STENCIL_INDEX4_EXT = System::Word(0x8d47);
static _DELPHI_CONST System::Word GL_STENCIL_INDEX8_EXT = System::Word(0x8d48);
static _DELPHI_CONST System::Word GL_STENCIL_INDEX16_EXT = System::Word(0x8d49);
static _DELPHI_CONST System::Word GL_RENDERBUFFER_WIDTH_EXT = System::Word(0x8d42);
static _DELPHI_CONST System::Word GL_RENDERBUFFER_HEIGHT_EXT = System::Word(0x8d43);
static _DELPHI_CONST System::Word GL_RENDERBUFFER_INTERNAL_FORMAT_EXT = System::Word(0x8d44);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT = System::Word(0x8cd0);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT = System::Word(0x8cd1);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT = System::Word(0x8cd2);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT = System::Word(0x8cd3);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT = System::Word(0x8cd4);
static _DELPHI_CONST System::Word GL_COLOR_ATTACHMENT0_EXT = System::Word(0x8ce0);
static _DELPHI_CONST System::Word GL_COLOR_ATTACHMENT1_EXT = System::Word(0x8ce1);
static _DELPHI_CONST System::Word GL_COLOR_ATTACHMENT2_EXT = System::Word(0x8ce2);
static _DELPHI_CONST System::Word GL_COLOR_ATTACHMENT3_EXT = System::Word(0x8ce3);
static _DELPHI_CONST System::Word GL_COLOR_ATTACHMENT4_EXT = System::Word(0x8ce4);
static _DELPHI_CONST System::Word GL_COLOR_ATTACHMENT5_EXT = System::Word(0x8ce5);
static _DELPHI_CONST System::Word GL_COLOR_ATTACHMENT6_EXT = System::Word(0x8ce6);
static _DELPHI_CONST System::Word GL_COLOR_ATTACHMENT7_EXT = System::Word(0x8ce7);
static _DELPHI_CONST System::Word GL_COLOR_ATTACHMENT8_EXT = System::Word(0x8ce8);
static _DELPHI_CONST System::Word GL_COLOR_ATTACHMENT9_EXT = System::Word(0x8ce9);
static _DELPHI_CONST System::Word GL_COLOR_ATTACHMENT10_EXT = System::Word(0x8cea);
static _DELPHI_CONST System::Word GL_COLOR_ATTACHMENT11_EXT = System::Word(0x8ceb);
static _DELPHI_CONST System::Word GL_COLOR_ATTACHMENT12_EXT = System::Word(0x8cec);
static _DELPHI_CONST System::Word GL_COLOR_ATTACHMENT13_EXT = System::Word(0x8ced);
static _DELPHI_CONST System::Word GL_COLOR_ATTACHMENT14_EXT = System::Word(0x8cee);
static _DELPHI_CONST System::Word GL_COLOR_ATTACHMENT15_EXT = System::Word(0x8cef);
static _DELPHI_CONST System::Word GL_DEPTH_ATTACHMENT_EXT = System::Word(0x8d00);
static _DELPHI_CONST System::Word GL_STENCIL_ATTACHMENT_EXT = System::Word(0x8d20);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_COMPLETE_EXT = System::Word(0x8cd5);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT = System::Word(0x8cd6);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT = System::Word(0x8cd7);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_INCOMPLETE_DUPLICATE_ATTACHMENT_EXT = System::Word(0x8cd8);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT = System::Word(0x8cd9);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT = System::Word(0x8cda);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT = System::Word(0x8cdb);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT = System::Word(0x8cdc);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_UNSUPPORTED_EXT = System::Word(0x8cdd);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_STATUS_ERROR_EXT = System::Word(0x8cde);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_BINDING_EXT = System::Word(0x8ca6);
static _DELPHI_CONST System::Word GL_RENDERBUFFER_BINDING_EXT = System::Word(0x8ca7);
static _DELPHI_CONST System::Word GL_MAX_COLOR_ATTACHMENTS_EXT = System::Word(0x8cdf);
static _DELPHI_CONST System::Word GL_MAX_RENDERBUFFER_SIZE_EXT = System::Word(0x84e8);
static _DELPHI_CONST System::Word GL_INVALID_FRAMEBUFFER_OPERATION_EXT = System::Word(0x506);
static _DELPHI_CONST System::Word GL_HISTOGRAM_EXT = System::Word(0x8024);
static _DELPHI_CONST System::Word GL_PROXY_HISTOGRAM_EXT = System::Word(0x8025);
static _DELPHI_CONST System::Word GL_HISTOGRAM_WIDTH_EXT = System::Word(0x8026);
static _DELPHI_CONST System::Word GL_HISTOGRAM_FORMAT_EXT = System::Word(0x8027);
static _DELPHI_CONST System::Word GL_HISTOGRAM_RED_SIZE_EXT = System::Word(0x8028);
static _DELPHI_CONST System::Word GL_HISTOGRAM_GREEN_SIZE_EXT = System::Word(0x8029);
static _DELPHI_CONST System::Word GL_HISTOGRAM_BLUE_SIZE_EXT = System::Word(0x802a);
static _DELPHI_CONST System::Word GL_HISTOGRAM_ALPHA_SIZE_EXT = System::Word(0x802b);
static _DELPHI_CONST System::Word GL_HISTOGRAM_LUMINANCE_SIZE_EXT = System::Word(0x802c);
static _DELPHI_CONST System::Word GL_HISTOGRAM_SINK_EXT = System::Word(0x802d);
static _DELPHI_CONST System::Word GL_MINMAX_EXT = System::Word(0x802e);
static _DELPHI_CONST System::Word GL_MINMAX_FORMAT_EXT = System::Word(0x802f);
static _DELPHI_CONST System::Word GL_MINMAX_SINK_EXT = System::Word(0x8030);
static _DELPHI_CONST System::Word GL_TABLE_TOO_LARGE_EXT = System::Word(0x8031);
static _DELPHI_CONST System::Word GL_IUI_V2F_EXT = System::Word(0x81ad);
static _DELPHI_CONST System::Word GL_IUI_V3F_EXT = System::Word(0x81ae);
static _DELPHI_CONST System::Word GL_IUI_N3F_V2F_EXT = System::Word(0x81af);
static _DELPHI_CONST System::Word GL_IUI_N3F_V3F_EXT = System::Word(0x81b0);
static _DELPHI_CONST System::Word GL_T2F_IUI_V2F_EXT = System::Word(0x81b1);
static _DELPHI_CONST System::Word GL_T2F_IUI_V3F_EXT = System::Word(0x81b2);
static _DELPHI_CONST System::Word GL_T2F_IUI_N3F_V2F_EXT = System::Word(0x81b3);
static _DELPHI_CONST System::Word GL_T2F_IUI_N3F_V3F_EXT = System::Word(0x81b4);
static _DELPHI_CONST System::Word GL_INDEX_TEST_EXT = System::Word(0x81b5);
static _DELPHI_CONST System::Word GL_INDEX_TEST_FUNC_EXT = System::Word(0x81b6);
static _DELPHI_CONST System::Word GL_INDEX_TEST_REF_EXT = System::Word(0x81b7);
static _DELPHI_CONST System::Word GL_INDEX_MATERIAL_EXT = System::Word(0x81b8);
static _DELPHI_CONST System::Word GL_INDEX_MATERIAL_PARAMETER_EXT = System::Word(0x81b9);
static _DELPHI_CONST System::Word GL_INDEX_MATERIAL_FACE_EXT = System::Word(0x81ba);
static _DELPHI_CONST System::Word GL_FRAGMENT_MATERIAL_EXT = System::Word(0x8349);
static _DELPHI_CONST System::Word GL_FRAGMENT_NORMAL_EXT = System::Word(0x834a);
static _DELPHI_CONST System::Word GL_FRAGMENT_COLOR_EXT = System::Word(0x834c);
static _DELPHI_CONST System::Word GL_ATTENUATION_EXT = System::Word(0x834d);
static _DELPHI_CONST System::Word GL_SHADOW_ATTENUATION_EXT = System::Word(0x834e);
static _DELPHI_CONST System::Word GL_TEXTURE_APPLICATION_MODE_EXT = System::Word(0x834f);
static _DELPHI_CONST System::Word GL_TEXTURE_LIGHT_EXT = System::Word(0x8350);
static _DELPHI_CONST System::Word GL_TEXTURE_MATERIAL_FACE_EXT = System::Word(0x8351);
static _DELPHI_CONST System::Word GL_TEXTURE_MATERIAL_PARAMETER_EXT = System::Word(0x8352);
static _DELPHI_CONST System::Word GL_MULTISAMPLE_EXT = System::Word(0x809d);
static _DELPHI_CONST System::Word GL_SAMPLE_ALPHA_TO_MASK_EXT = System::Word(0x809e);
static _DELPHI_CONST System::Word GL_SAMPLE_ALPHA_TO_ONE_EXT = System::Word(0x809f);
static _DELPHI_CONST System::Word GL_SAMPLE_MASK_EXT = System::Word(0x80a0);
static _DELPHI_CONST System::Word GL_1PASS_EXT = System::Word(0x80a1);
static _DELPHI_CONST System::Word GL_2PASS_0_EXT = System::Word(0x80a2);
static _DELPHI_CONST System::Word GL_2PASS_1_EXT = System::Word(0x80a3);
static _DELPHI_CONST System::Word GL_4PASS_0_EXT = System::Word(0x80a4);
static _DELPHI_CONST System::Word GL_4PASS_1_EXT = System::Word(0x80a5);
static _DELPHI_CONST System::Word GL_4PASS_2_EXT = System::Word(0x80a6);
static _DELPHI_CONST System::Word GL_4PASS_3_EXT = System::Word(0x80a7);
static _DELPHI_CONST System::Word GL_SAMPLE_BUFFERS_EXT = System::Word(0x80a8);
static _DELPHI_CONST System::Word GL_SAMPLES_EXT = System::Word(0x80a9);
static _DELPHI_CONST System::Word GL_SAMPLE_MASK_VALUE_EXT = System::Word(0x80aa);
static _DELPHI_CONST System::Word GL_SAMPLE_MASK_INVERT_EXT = System::Word(0x80ab);
static _DELPHI_CONST System::Word GL_SAMPLE_PATTERN_EXT = System::Word(0x80ac);
static _DELPHI_CONST int GL_MULTISAMPLE_BIT_EXT = int(0x20000000);
static _DELPHI_CONST System::Word GL_UNSIGNED_BYTE_3_3_2_EXT = System::Word(0x8032);
static _DELPHI_CONST System::Word GL_UNSIGNED_SHORT_4_4_4_4_EXT = System::Word(0x8033);
static _DELPHI_CONST System::Word GL_UNSIGNED_SHORT_5_5_5_1_EXT = System::Word(0x8034);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_8_8_8_8_EXT = System::Word(0x8035);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_10_10_10_2_EXT = System::Word(0x8036);
static _DELPHI_CONST System::Word GL_COLOR_INDEX1_EXT = System::Word(0x80e2);
static _DELPHI_CONST System::Word GL_COLOR_INDEX2_EXT = System::Word(0x80e3);
static _DELPHI_CONST System::Word GL_COLOR_INDEX4_EXT = System::Word(0x80e4);
static _DELPHI_CONST System::Word GL_COLOR_INDEX8_EXT = System::Word(0x80e5);
static _DELPHI_CONST System::Word GL_COLOR_INDEX12_EXT = System::Word(0x80e6);
static _DELPHI_CONST System::Word GL_COLOR_INDEX16_EXT = System::Word(0x80e7);
static _DELPHI_CONST System::Word GL_TEXTURE_INDEX_SIZE_EXT = System::Word(0x80ed);
static _DELPHI_CONST System::Word GL_PIXEL_TRANSFORM_2D_EXT = System::Word(0x8330);
static _DELPHI_CONST System::Word GL_PIXEL_MAG_FILTER_EXT = System::Word(0x8331);
static _DELPHI_CONST System::Word GL_PIXEL_MIN_FILTER_EXT = System::Word(0x8332);
static _DELPHI_CONST System::Word GL_PIXEL_CUBIC_WEIGHT_EXT = System::Word(0x8333);
static _DELPHI_CONST System::Word GL_CUBIC_EXT = System::Word(0x8334);
static _DELPHI_CONST System::Word GL_AVERAGE_EXT = System::Word(0x8335);
static _DELPHI_CONST System::Word GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT = System::Word(0x8336);
static _DELPHI_CONST System::Word GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT = System::Word(0x8337);
static _DELPHI_CONST System::Word GL_PIXEL_TRANSFORM_2D_MATRIX_EXT = System::Word(0x8338);
static _DELPHI_CONST System::Word GL_POINT_SIZE_MIN_EXT = System::Word(0x8126);
static _DELPHI_CONST System::Word GL_POINT_SIZE_MAX_EXT = System::Word(0x8127);
static _DELPHI_CONST System::Word GL_POINT_FADE_THRESHOLD_SIZE_EXT = System::Word(0x8128);
static _DELPHI_CONST System::Word GL_DISTANCE_ATTENUATION_EXT = System::Word(0x8129);
static _DELPHI_CONST System::Word GL_POLYGON_OFFSET_EXT = System::Word(0x8037);
static _DELPHI_CONST System::Word GL_POLYGON_OFFSET_FACTOR_EXT = System::Word(0x8038);
static _DELPHI_CONST System::Word GL_POLYGON_OFFSET_BIAS_EXT = System::Word(0x8039);
static _DELPHI_CONST System::Word GL_RESCALE_NORMAL_EXT = System::Word(0x803a);
static _DELPHI_CONST System::Word GL_COLOR_SUM_EXT = System::Word(0x8458);
static _DELPHI_CONST System::Word GL_CURRENT_SECONDARY_COLOR_EXT = System::Word(0x8459);
static _DELPHI_CONST System::Word GL_SECONDARY_COLOR_ARRAY_SIZE_EXT = System::Word(0x845a);
static _DELPHI_CONST System::Word GL_SECONDARY_COLOR_ARRAY_TYPE_EXT = System::Word(0x845b);
static _DELPHI_CONST System::Word GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT = System::Word(0x845c);
static _DELPHI_CONST System::Word GL_SECONDARY_COLOR_ARRAY_POINTER_EXT = System::Word(0x845d);
static _DELPHI_CONST System::Word GL_SECONDARY_COLOR_ARRAY_EXT = System::Word(0x845e);
static _DELPHI_CONST System::Word GL_LIGHT_MODEL_COLOR_CONTROL_EXT = System::Word(0x81f8);
static _DELPHI_CONST System::Word GL_SINGLE_COLOR_EXT = System::Word(0x81f9);
static _DELPHI_CONST System::Word GL_SEPARATE_SPECULAR_COLOR_EXT = System::Word(0x81fa);
static _DELPHI_CONST System::Word GL_SHARED_TEXTURE_PALETTE_EXT = System::Word(0x81fb);
static _DELPHI_CONST System::Word GL_STENCIL_TEST_TWO_SIDE_EXT = System::Word(0x8910);
static _DELPHI_CONST System::Word GL_ACTIVE_STENCIL_FACE_EXT = System::Word(0x8911);
static _DELPHI_CONST System::Word GL_INCR_WRAP_EXT = System::Word(0x8507);
static _DELPHI_CONST System::Word GL_DECR_WRAP_EXT = System::Word(0x8508);
static _DELPHI_CONST System::Word GL_ALPHA4_EXT = System::Word(0x803b);
static _DELPHI_CONST System::Word GL_ALPHA8_EXT = System::Word(0x803c);
static _DELPHI_CONST System::Word GL_ALPHA12_EXT = System::Word(0x803d);
static _DELPHI_CONST System::Word GL_ALPHA16_EXT = System::Word(0x803e);
static _DELPHI_CONST System::Word GL_LUMINANCE4_EXT = System::Word(0x803f);
static _DELPHI_CONST System::Word GL_LUMINANCE8_EXT = System::Word(0x8040);
static _DELPHI_CONST System::Word GL_LUMINANCE12_EXT = System::Word(0x8041);
static _DELPHI_CONST System::Word GL_LUMINANCE16_EXT = System::Word(0x8042);
static _DELPHI_CONST System::Word GL_LUMINANCE4_ALPHA4_EXT = System::Word(0x8043);
static _DELPHI_CONST System::Word GL_LUMINANCE6_ALPHA2_EXT = System::Word(0x8044);
static _DELPHI_CONST System::Word GL_LUMINANCE8_ALPHA8_EXT = System::Word(0x8045);
static _DELPHI_CONST System::Word GL_LUMINANCE12_ALPHA4_EXT = System::Word(0x8046);
static _DELPHI_CONST System::Word GL_LUMINANCE12_ALPHA12_EXT = System::Word(0x8047);
static _DELPHI_CONST System::Word GL_LUMINANCE16_ALPHA16_EXT = System::Word(0x8048);
static _DELPHI_CONST System::Word GL_INTENSITY_EXT = System::Word(0x8049);
static _DELPHI_CONST System::Word GL_INTENSITY4_EXT = System::Word(0x804a);
static _DELPHI_CONST System::Word GL_INTENSITY8_EXT = System::Word(0x804b);
static _DELPHI_CONST System::Word GL_INTENSITY12_EXT = System::Word(0x804c);
static _DELPHI_CONST System::Word GL_INTENSITY16_EXT = System::Word(0x804d);
static _DELPHI_CONST System::Word GL_RGB2_EXT = System::Word(0x804e);
static _DELPHI_CONST System::Word GL_RGB4_EXT = System::Word(0x804f);
static _DELPHI_CONST System::Word GL_RGB5_EXT = System::Word(0x8050);
static _DELPHI_CONST System::Word GL_RGB8_EXT = System::Word(0x8051);
static _DELPHI_CONST System::Word GL_RGB10_EXT = System::Word(0x8052);
static _DELPHI_CONST System::Word GL_RGB12_EXT = System::Word(0x8053);
static _DELPHI_CONST System::Word GL_RGB16_EXT = System::Word(0x8054);
static _DELPHI_CONST System::Word GL_RGBA2_EXT = System::Word(0x8055);
static _DELPHI_CONST System::Word GL_RGBA4_EXT = System::Word(0x8056);
static _DELPHI_CONST System::Word GL_RGB5_A1_EXT = System::Word(0x8057);
static _DELPHI_CONST System::Word GL_RGBA8_EXT = System::Word(0x8058);
static _DELPHI_CONST System::Word GL_RGB10_A2_EXT = System::Word(0x8059);
static _DELPHI_CONST System::Word GL_RGBA12_EXT = System::Word(0x805a);
static _DELPHI_CONST System::Word GL_RGBA16_EXT = System::Word(0x805b);
static _DELPHI_CONST System::Word GL_TEXTURE_RED_SIZE_EXT = System::Word(0x805c);
static _DELPHI_CONST System::Word GL_TEXTURE_GREEN_SIZE_EXT = System::Word(0x805d);
static _DELPHI_CONST System::Word GL_TEXTURE_BLUE_SIZE_EXT = System::Word(0x805e);
static _DELPHI_CONST System::Word GL_TEXTURE_ALPHA_SIZE_EXT = System::Word(0x805f);
static _DELPHI_CONST System::Word GL_TEXTURE_LUMINANCE_SIZE_EXT = System::Word(0x8060);
static _DELPHI_CONST System::Word GL_TEXTURE_INTENSITY_SIZE_EXT = System::Word(0x8061);
static _DELPHI_CONST System::Word GL_REPLACE_EXT = System::Word(0x8062);
static _DELPHI_CONST System::Word GL_PROXY_TEXTURE_1D_EXT = System::Word(0x8063);
static _DELPHI_CONST System::Word GL_PROXY_TEXTURE_2D_EXT = System::Word(0x8064);
static _DELPHI_CONST System::Word GL_TEXTURE_TOO_LARGE_EXT = System::Word(0x8065);
static _DELPHI_CONST System::Word GL_PACK_SKIP_IMAGES_EXT = System::Word(0x806b);
static _DELPHI_CONST System::Word GL_PACK_IMAGE_HEIGHT_EXT = System::Word(0x806c);
static _DELPHI_CONST System::Word GL_UNPACK_SKIP_IMAGES_EXT = System::Word(0x806d);
static _DELPHI_CONST System::Word GL_UNPACK_IMAGE_HEIGHT_EXT = System::Word(0x806e);
static _DELPHI_CONST System::Word GL_TEXTURE_3D_EXT = System::Word(0x806f);
static _DELPHI_CONST System::Word GL_PROXY_TEXTURE_3D_EXT = System::Word(0x8070);
static _DELPHI_CONST System::Word GL_TEXTURE_DEPTH_EXT = System::Word(0x8071);
static _DELPHI_CONST System::Word GL_TEXTURE_WRAP_R_EXT = System::Word(0x8072);
static _DELPHI_CONST System::Word GL_MAX_3D_TEXTURE_SIZE_EXT = System::Word(0x8073);
static _DELPHI_CONST System::Word GL_COMPRESSED_RGB_S3TC_DXT1_EXT = System::Word(0x83f0);
static _DELPHI_CONST System::Word GL_COMPRESSED_RGBA_S3TC_DXT1_EXT = System::Word(0x83f1);
static _DELPHI_CONST System::Word GL_COMPRESSED_RGBA_S3TC_DXT3_EXT = System::Word(0x83f2);
static _DELPHI_CONST System::Word GL_COMPRESSED_RGBA_S3TC_DXT5_EXT = System::Word(0x83f3);
static _DELPHI_CONST System::Word GL_NORMAL_MAP_EXT = System::Word(0x8511);
static _DELPHI_CONST System::Word GL_REFLECTION_MAP_EXT = System::Word(0x8512);
static _DELPHI_CONST System::Word GL_TEXTURE_CUBE_MAP_EXT = System::Word(0x8513);
static _DELPHI_CONST System::Word GL_TEXTURE_BINDING_CUBE_MAP_EXT = System::Word(0x8514);
static _DELPHI_CONST System::Word GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT = System::Word(0x8515);
static _DELPHI_CONST System::Word GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT = System::Word(0x8516);
static _DELPHI_CONST System::Word GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT = System::Word(0x8517);
static _DELPHI_CONST System::Word GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT = System::Word(0x8518);
static _DELPHI_CONST System::Word GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT = System::Word(0x8519);
static _DELPHI_CONST System::Word GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT = System::Word(0x851a);
static _DELPHI_CONST System::Word GL_PROXY_TEXTURE_CUBE_MAP_EXT = System::Word(0x851b);
static _DELPHI_CONST System::Word GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT = System::Word(0x851c);
static _DELPHI_CONST System::Word GL_CLAMP_TO_EDGE_EXT = System::Word(0x812f);
static _DELPHI_CONST System::Word GL_COMBINE_EXT = System::Word(0x8570);
static _DELPHI_CONST System::Word GL_COMBINE_RGB_EXT = System::Word(0x8571);
static _DELPHI_CONST System::Word GL_COMBINE_ALPHA_EXT = System::Word(0x8572);
static _DELPHI_CONST System::Word GL_RGB_SCALE_EXT = System::Word(0x8573);
static _DELPHI_CONST System::Word GL_ADD_SIGNED_EXT = System::Word(0x8574);
static _DELPHI_CONST System::Word GL_INTERPOLATE_EXT = System::Word(0x8575);
static _DELPHI_CONST System::Word GL_CONSTANT_EXT = System::Word(0x8576);
static _DELPHI_CONST System::Word GL_PRIMARY_COLOR_EXT = System::Word(0x8577);
static _DELPHI_CONST System::Word GL_PREVIOUS_EXT = System::Word(0x8578);
static _DELPHI_CONST System::Word GL_SOURCE0_RGB_EXT = System::Word(0x8580);
static _DELPHI_CONST System::Word GL_SOURCE1_RGB_EXT = System::Word(0x8581);
static _DELPHI_CONST System::Word GL_SOURCE2_RGB_EXT = System::Word(0x8582);
static _DELPHI_CONST System::Word GL_SOURCE0_ALPHA_EXT = System::Word(0x8588);
static _DELPHI_CONST System::Word GL_SOURCE1_ALPHA_EXT = System::Word(0x8589);
static _DELPHI_CONST System::Word GL_SOURCE2_ALPHA_EXT = System::Word(0x858a);
static _DELPHI_CONST System::Word GL_OPERAND0_RGB_EXT = System::Word(0x8590);
static _DELPHI_CONST System::Word GL_OPERAND1_RGB_EXT = System::Word(0x8591);
static _DELPHI_CONST System::Word GL_OPERAND2_RGB_EXT = System::Word(0x8592);
static _DELPHI_CONST System::Word GL_OPERAND0_ALPHA_EXT = System::Word(0x8598);
static _DELPHI_CONST System::Word GL_OPERAND1_ALPHA_EXT = System::Word(0x8599);
static _DELPHI_CONST System::Word GL_OPERAND2_ALPHA_EXT = System::Word(0x859a);
static _DELPHI_CONST System::Word GL_DOT3_RGB_EXT = System::Word(0x8740);
static _DELPHI_CONST System::Word GL_DOT3_RGBA_EXT = System::Word(0x8741);
static _DELPHI_CONST System::Word GL_TEXTURE_MAX_ANISOTROPY_EXT = System::Word(0x84fe);
static _DELPHI_CONST System::Word GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT = System::Word(0x84ff);
static _DELPHI_CONST System::Word GL_MAX_TEXTURE_LOD_BIAS_EXT = System::Word(0x84fd);
static _DELPHI_CONST System::Word GL_TEXTURE_FILTER_CONTROL_EXT = System::Word(0x8500);
static _DELPHI_CONST System::Word GL_TEXTURE_LOD_BIAS_EXT = System::Word(0x8501);
static _DELPHI_CONST System::Word GL_TEXTURE_PRIORITY_EXT = System::Word(0x8066);
static _DELPHI_CONST System::Word GL_TEXTURE_RESIDENT_EXT = System::Word(0x8067);
static _DELPHI_CONST System::Word GL_TEXTURE_1D_BINDING_EXT = System::Word(0x8068);
static _DELPHI_CONST System::Word GL_TEXTURE_2D_BINDING_EXT = System::Word(0x8069);
static _DELPHI_CONST System::Word GL_TEXTURE_3D_BINDING_EXT = System::Word(0x806a);
static _DELPHI_CONST System::Word GL_PERTURB_EXT = System::Word(0x85ae);
static _DELPHI_CONST System::Word GL_TEXTURE_NORMAL_EXT = System::Word(0x85af);
static _DELPHI_CONST System::Word GL_TEXTURE_RECTANGLE_EXT = System::Word(0x84f5);
static _DELPHI_CONST System::Word GL_TEXTURE_BINDING_RECTANGLE_EXT = System::Word(0x84f6);
static _DELPHI_CONST System::Word GL_PROXY_TEXTURE_RECTANGLE_EXT = System::Word(0x84f7);
static _DELPHI_CONST System::Word GL_MAX_RECTANGLE_TEXTURE_SIZE_EXT = System::Word(0x84f8);
static _DELPHI_CONST System::Word GL_VERTEX_ARRAY_EXT = System::Word(0x8074);
static _DELPHI_CONST System::Word GL_NORMAL_ARRAY_EXT = System::Word(0x8075);
static _DELPHI_CONST System::Word GL_COLOR_ARRAY_EXT = System::Word(0x8076);
static _DELPHI_CONST System::Word GL_INDEX_ARRAY_EXT = System::Word(0x8077);
static _DELPHI_CONST System::Word GL_TEXTURE_COORD_ARRAY_EXT = System::Word(0x8078);
static _DELPHI_CONST System::Word GL_EDGE_FLAG_ARRAY_EXT = System::Word(0x8079);
static _DELPHI_CONST System::Word GL_VERTEX_ARRAY_SIZE_EXT = System::Word(0x807a);
static _DELPHI_CONST System::Word GL_VERTEX_ARRAY_TYPE_EXT = System::Word(0x807b);
static _DELPHI_CONST System::Word GL_VERTEX_ARRAY_STRIDE_EXT = System::Word(0x807c);
static _DELPHI_CONST System::Word GL_VERTEX_ARRAY_COUNT_EXT = System::Word(0x807d);
static _DELPHI_CONST System::Word GL_NORMAL_ARRAY_TYPE_EXT = System::Word(0x807e);
static _DELPHI_CONST System::Word GL_NORMAL_ARRAY_STRIDE_EXT = System::Word(0x807f);
static _DELPHI_CONST System::Word GL_NORMAL_ARRAY_COUNT_EXT = System::Word(0x8080);
static _DELPHI_CONST System::Word GL_COLOR_ARRAY_SIZE_EXT = System::Word(0x8081);
static _DELPHI_CONST System::Word GL_COLOR_ARRAY_TYPE_EXT = System::Word(0x8082);
static _DELPHI_CONST System::Word GL_COLOR_ARRAY_STRIDE_EXT = System::Word(0x8083);
static _DELPHI_CONST System::Word GL_COLOR_ARRAY_COUNT_EXT = System::Word(0x8084);
static _DELPHI_CONST System::Word GL_INDEX_ARRAY_TYPE_EXT = System::Word(0x8085);
static _DELPHI_CONST System::Word GL_INDEX_ARRAY_STRIDE_EXT = System::Word(0x8086);
static _DELPHI_CONST System::Word GL_INDEX_ARRAY_COUNT_EXT = System::Word(0x8087);
static _DELPHI_CONST System::Word GL_TEXTURE_COORD_ARRAY_SIZE_EXT = System::Word(0x8088);
static _DELPHI_CONST System::Word GL_TEXTURE_COORD_ARRAY_TYPE_EXT = System::Word(0x8089);
static _DELPHI_CONST System::Word GL_TEXTURE_COORD_ARRAY_STRIDE_EXT = System::Word(0x808a);
static _DELPHI_CONST System::Word GL_TEXTURE_COORD_ARRAY_COUNT_EXT = System::Word(0x808b);
static _DELPHI_CONST System::Word GL_EDGE_FLAG_ARRAY_STRIDE_EXT = System::Word(0x808c);
static _DELPHI_CONST System::Word GL_EDGE_FLAG_ARRAY_COUNT_EXT = System::Word(0x808d);
static _DELPHI_CONST System::Word GL_VERTEX_ARRAY_POINTER_EXT = System::Word(0x808e);
static _DELPHI_CONST System::Word GL_NORMAL_ARRAY_POINTER_EXT = System::Word(0x808f);
static _DELPHI_CONST System::Word GL_COLOR_ARRAY_POINTER_EXT = System::Word(0x8090);
static _DELPHI_CONST System::Word GL_INDEX_ARRAY_POINTER_EXT = System::Word(0x8091);
static _DELPHI_CONST System::Word GL_TEXTURE_COORD_ARRAY_POINTER_EXT = System::Word(0x8092);
static _DELPHI_CONST System::Word GL_EDGE_FLAG_ARRAY_POINTER_EXT = System::Word(0x8093);
static _DELPHI_CONST System::Word GL_VERTEX_SHADER_EXT = System::Word(0x8780);
static _DELPHI_CONST System::Word GL_VERTEX_SHADER_BINDING_EXT = System::Word(0x8781);
static _DELPHI_CONST System::Word GL_OP_INDEX_EXT = System::Word(0x8782);
static _DELPHI_CONST System::Word GL_OP_NEGATE_EXT = System::Word(0x8783);
static _DELPHI_CONST System::Word GL_OP_DOT3_EXT = System::Word(0x8784);
static _DELPHI_CONST System::Word GL_OP_DOT4_EXT = System::Word(0x8785);
static _DELPHI_CONST System::Word GL_OP_MUL_EXT = System::Word(0x8786);
static _DELPHI_CONST System::Word GL_OP_ADD_EXT = System::Word(0x8787);
static _DELPHI_CONST System::Word GL_OP_MADD_EXT = System::Word(0x8788);
static _DELPHI_CONST System::Word GL_OP_FRAC_EXT = System::Word(0x8789);
static _DELPHI_CONST System::Word GL_OP_MAX_EXT = System::Word(0x878a);
static _DELPHI_CONST System::Word GL_OP_MIN_EXT = System::Word(0x878b);
static _DELPHI_CONST System::Word GL_OP_SET_GE_EXT = System::Word(0x878c);
static _DELPHI_CONST System::Word GL_OP_SET_LT_EXT = System::Word(0x878d);
static _DELPHI_CONST System::Word GL_OP_CLAMP_EXT = System::Word(0x878e);
static _DELPHI_CONST System::Word GL_OP_FLOOR_EXT = System::Word(0x878f);
static _DELPHI_CONST System::Word GL_OP_ROUND_EXT = System::Word(0x8790);
static _DELPHI_CONST System::Word GL_OP_EXP_BASE_2_EXT = System::Word(0x8791);
static _DELPHI_CONST System::Word GL_OP_LOG_BASE_2_EXT = System::Word(0x8792);
static _DELPHI_CONST System::Word GL_OP_POWER_EXT = System::Word(0x8793);
static _DELPHI_CONST System::Word GL_OP_RECIP_EXT = System::Word(0x8794);
static _DELPHI_CONST System::Word GL_OP_RECIP_SQRT_EXT = System::Word(0x8795);
static _DELPHI_CONST System::Word GL_OP_SUB_EXT = System::Word(0x8796);
static _DELPHI_CONST System::Word GL_OP_CROSS_PRODUCT_EXT = System::Word(0x8797);
static _DELPHI_CONST System::Word GL_OP_MULTIPLY_MATRIX_EXT = System::Word(0x8798);
static _DELPHI_CONST System::Word GL_OP_MOV_EXT = System::Word(0x8799);
static _DELPHI_CONST System::Word GL_OUTPUT_VERTEX_EXT = System::Word(0x879a);
static _DELPHI_CONST System::Word GL_OUTPUT_COLOR0_EXT = System::Word(0x879b);
static _DELPHI_CONST System::Word GL_OUTPUT_COLOR1_EXT = System::Word(0x879c);
static _DELPHI_CONST System::Word GL_OUTPUT_TEXTURE_COORD0_EXT = System::Word(0x879d);
static _DELPHI_CONST System::Word GL_OUTPUT_TEXTURE_COORD1_EXT = System::Word(0x879e);
static _DELPHI_CONST System::Word GL_OUTPUT_TEXTURE_COORD2_EXT = System::Word(0x879f);
static _DELPHI_CONST System::Word GL_OUTPUT_TEXTURE_COORD3_EXT = System::Word(0x87a0);
static _DELPHI_CONST System::Word GL_OUTPUT_TEXTURE_COORD4_EXT = System::Word(0x87a1);
static _DELPHI_CONST System::Word GL_OUTPUT_TEXTURE_COORD5_EXT = System::Word(0x87a2);
static _DELPHI_CONST System::Word GL_OUTPUT_TEXTURE_COORD6_EXT = System::Word(0x87a3);
static _DELPHI_CONST System::Word GL_OUTPUT_TEXTURE_COORD7_EXT = System::Word(0x87a4);
static _DELPHI_CONST System::Word GL_OUTPUT_TEXTURE_COORD8_EXT = System::Word(0x87a5);
static _DELPHI_CONST System::Word GL_OUTPUT_TEXTURE_COORD9_EXT = System::Word(0x87a6);
static _DELPHI_CONST System::Word GL_OUTPUT_TEXTURE_COORD10_EXT = System::Word(0x87a7);
static _DELPHI_CONST System::Word GL_OUTPUT_TEXTURE_COORD11_EXT = System::Word(0x87a8);
static _DELPHI_CONST System::Word GL_OUTPUT_TEXTURE_COORD12_EXT = System::Word(0x87a9);
static _DELPHI_CONST System::Word GL_OUTPUT_TEXTURE_COORD13_EXT = System::Word(0x87aa);
static _DELPHI_CONST System::Word GL_OUTPUT_TEXTURE_COORD14_EXT = System::Word(0x87ab);
static _DELPHI_CONST System::Word GL_OUTPUT_TEXTURE_COORD15_EXT = System::Word(0x87ac);
static _DELPHI_CONST System::Word GL_OUTPUT_TEXTURE_COORD16_EXT = System::Word(0x87ad);
static _DELPHI_CONST System::Word GL_OUTPUT_TEXTURE_COORD17_EXT = System::Word(0x87ae);
static _DELPHI_CONST System::Word GL_OUTPUT_TEXTURE_COORD18_EXT = System::Word(0x87af);
static _DELPHI_CONST System::Word GL_OUTPUT_TEXTURE_COORD19_EXT = System::Word(0x87b0);
static _DELPHI_CONST System::Word GL_OUTPUT_TEXTURE_COORD20_EXT = System::Word(0x87b1);
static _DELPHI_CONST System::Word GL_OUTPUT_TEXTURE_COORD21_EXT = System::Word(0x87b2);
static _DELPHI_CONST System::Word GL_OUTPUT_TEXTURE_COORD22_EXT = System::Word(0x87b3);
static _DELPHI_CONST System::Word GL_OUTPUT_TEXTURE_COORD23_EXT = System::Word(0x87b4);
static _DELPHI_CONST System::Word GL_OUTPUT_TEXTURE_COORD24_EXT = System::Word(0x87b5);
static _DELPHI_CONST System::Word GL_OUTPUT_TEXTURE_COORD25_EXT = System::Word(0x87b6);
static _DELPHI_CONST System::Word GL_OUTPUT_TEXTURE_COORD26_EXT = System::Word(0x87b7);
static _DELPHI_CONST System::Word GL_OUTPUT_TEXTURE_COORD27_EXT = System::Word(0x87b8);
static _DELPHI_CONST System::Word GL_OUTPUT_TEXTURE_COORD28_EXT = System::Word(0x87b9);
static _DELPHI_CONST System::Word GL_OUTPUT_TEXTURE_COORD29_EXT = System::Word(0x87ba);
static _DELPHI_CONST System::Word GL_OUTPUT_TEXTURE_COORD30_EXT = System::Word(0x87bb);
static _DELPHI_CONST System::Word GL_OUTPUT_TEXTURE_COORD31_EXT = System::Word(0x87bc);
static _DELPHI_CONST System::Word GL_OUTPUT_FOG_EXT = System::Word(0x87bd);
static _DELPHI_CONST System::Word GL_SCALAR_EXT = System::Word(0x87be);
static _DELPHI_CONST System::Word GL_VECTOR_EXT = System::Word(0x87bf);
static _DELPHI_CONST System::Word GL_MATRIX_EXT = System::Word(0x87c0);
static _DELPHI_CONST System::Word GL_VARIANT_EXT = System::Word(0x87c1);
static _DELPHI_CONST System::Word GL_INVARIANT_EXT = System::Word(0x87c2);
static _DELPHI_CONST System::Word GL_LOCAL_CONSTANT_EXT = System::Word(0x87c3);
static _DELPHI_CONST System::Word GL_LOCAL_EXT = System::Word(0x87c4);
static _DELPHI_CONST System::Word GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT = System::Word(0x87c5);
static _DELPHI_CONST System::Word GL_MAX_VERTEX_SHADER_VARIANTS_EXT = System::Word(0x87c6);
static _DELPHI_CONST System::Word GL_MAX_VERTEX_SHADER_INVARIANTS_EXT = System::Word(0x87c7);
static _DELPHI_CONST System::Word GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = System::Word(0x87c8);
static _DELPHI_CONST System::Word GL_MAX_VERTEX_SHADER_LOCALS_EXT = System::Word(0x87c9);
static _DELPHI_CONST System::Word GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT = System::Word(0x87ca);
static _DELPHI_CONST System::Word GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT = System::Word(0x87cb);
static _DELPHI_CONST System::Word GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = System::Word(0x87cc);
static _DELPHI_CONST System::Word GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT = System::Word(0x87cd);
static _DELPHI_CONST System::Word GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT = System::Word(0x87ce);
static _DELPHI_CONST System::Word GL_VERTEX_SHADER_INSTRUCTIONS_EXT = System::Word(0x87cf);
static _DELPHI_CONST System::Word GL_VERTEX_SHADER_VARIANTS_EXT = System::Word(0x87d0);
static _DELPHI_CONST System::Word GL_VERTEX_SHADER_INVARIANTS_EXT = System::Word(0x87d1);
static _DELPHI_CONST System::Word GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = System::Word(0x87d2);
static _DELPHI_CONST System::Word GL_VERTEX_SHADER_LOCALS_EXT = System::Word(0x87d3);
static _DELPHI_CONST System::Word GL_VERTEX_SHADER_OPTIMIZED_EXT = System::Word(0x87d4);
static _DELPHI_CONST System::Word GL_X_EXT = System::Word(0x87d5);
static _DELPHI_CONST System::Word GL_Y_EXT = System::Word(0x87d6);
static _DELPHI_CONST System::Word GL_Z_EXT = System::Word(0x87d7);
static _DELPHI_CONST System::Word GL_W_EXT = System::Word(0x87d8);
static _DELPHI_CONST System::Word GL_NEGATIVE_X_EXT = System::Word(0x87d9);
static _DELPHI_CONST System::Word GL_NEGATIVE_Y_EXT = System::Word(0x87da);
static _DELPHI_CONST System::Word GL_NEGATIVE_Z_EXT = System::Word(0x87db);
static _DELPHI_CONST System::Word GL_NEGATIVE_W_EXT = System::Word(0x87dc);
static _DELPHI_CONST System::Word GL_ZERO_EXT = System::Word(0x87dd);
static _DELPHI_CONST System::Word GL_ONE_EXT = System::Word(0x87de);
static _DELPHI_CONST System::Word GL_NEGATIVE_ONE_EXT = System::Word(0x87df);
static _DELPHI_CONST System::Word GL_NORMALIZED_RANGE_EXT = System::Word(0x87e0);
static _DELPHI_CONST System::Word GL_FULL_RANGE_EXT = System::Word(0x87e1);
static _DELPHI_CONST System::Word GL_CURRENT_VERTEX_EXT = System::Word(0x87e2);
static _DELPHI_CONST System::Word GL_MVP_MATRIX_EXT = System::Word(0x87e3);
static _DELPHI_CONST System::Word GL_VARIANT_VALUE_EXT = System::Word(0x87e4);
static _DELPHI_CONST System::Word GL_VARIANT_DATATYPE_EXT = System::Word(0x87e5);
static _DELPHI_CONST System::Word GL_VARIANT_ARRAY_STRIDE_EXT = System::Word(0x87e6);
static _DELPHI_CONST System::Word GL_VARIANT_ARRAY_TYPE_EXT = System::Word(0x87e7);
static _DELPHI_CONST System::Word GL_VARIANT_ARRAY_EXT = System::Word(0x87e8);
static _DELPHI_CONST System::Word GL_VARIANT_ARRAY_POINTER_EXT = System::Word(0x87e9);
static _DELPHI_CONST System::Word GL_INVARIANT_VALUE_EXT = System::Word(0x87ea);
static _DELPHI_CONST System::Word GL_INVARIANT_DATATYPE_EXT = System::Word(0x87eb);
static _DELPHI_CONST System::Word GL_LOCAL_CONSTANT_VALUE_EXT = System::Word(0x87ec);
static _DELPHI_CONST System::Word GL_LOCAL_CONSTANT_DATATYPE_EXT = System::Word(0x87ed);
static _DELPHI_CONST System::Word GL_MODELVIEW0_STACK_DEPTH_EXT = System::Word(0xba3);
static _DELPHI_CONST System::Word GL_MODELVIEW1_STACK_DEPTH_EXT = System::Word(0x8502);
static _DELPHI_CONST System::Word GL_MODELVIEW0_MATRIX_EXT = System::Word(0xba6);
static _DELPHI_CONST System::Word GL_MODELVIEW1_MATRIX_EXT = System::Word(0x8506);
static _DELPHI_CONST System::Word GL_VERTEX_WEIGHTING_EXT = System::Word(0x8509);
static _DELPHI_CONST System::Word GL_MODELVIEW0_EXT = System::Word(0x1700);
static _DELPHI_CONST System::Word GL_MODELVIEW1_EXT = System::Word(0x850a);
static _DELPHI_CONST System::Word GL_CURRENT_VERTEX_WEIGHT_EXT = System::Word(0x850b);
static _DELPHI_CONST System::Word GL_VERTEX_WEIGHT_ARRAY_EXT = System::Word(0x850c);
static _DELPHI_CONST System::Word GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT = System::Word(0x850d);
static _DELPHI_CONST System::Word GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT = System::Word(0x850e);
static _DELPHI_CONST System::Word GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT = System::Word(0x850f);
static _DELPHI_CONST System::Word GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT = System::Word(0x8510);
static _DELPHI_CONST System::Word GL_DEPTH_BOUNDS_TEST_EXT = System::Word(0x8890);
static _DELPHI_CONST System::Word GL_DEPTH_BOUNDS_EXT = System::Word(0x8891);
static _DELPHI_CONST System::Word GL_MIRROR_CLAMP_EXT = System::Word(0x8742);
static _DELPHI_CONST System::Word GL_MIRROR_CLAMP_TO_EDGE_EXT = System::Word(0x8743);
static _DELPHI_CONST System::Word GL_MIRROR_CLAMP_TO_BORDER_EXT = System::Word(0x8912);
static _DELPHI_CONST System::Word GL_BLEND_EQUATION_RGB_EXT = System::Word(0x8009);
static _DELPHI_CONST System::Word GL_BLEND_EQUATION_ALPHA_EXT = System::Word(0x883d);
static _DELPHI_CONST System::Word GL_PIXEL_PACK_BUFFER_EXT = System::Word(0x88eb);
static _DELPHI_CONST System::Word GL_PIXEL_UNPACK_BUFFER_EXT = System::Word(0x88ec);
static _DELPHI_CONST System::Word GL_PIXEL_PACK_BUFFER_BINDING_EXT = System::Word(0x88ed);
static _DELPHI_CONST System::Word GL_PIXEL_UNPACK_BUFFER_BINDING_EXT = System::Word(0x88ef);
static _DELPHI_CONST System::Word GL_STENCIL_TAG_BITS_EXT = System::Word(0x88f2);
static _DELPHI_CONST System::Word GL_STENCIL_CLEAR_TAG_VALUE_EXT = System::Word(0x88f3);
static _DELPHI_CONST System::Word GL_DEPTH_STENCIL_EXT = System::Word(0x84f9);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_24_8_EXT = System::Word(0x84fa);
static _DELPHI_CONST System::Word GL_DEPTH24_STENCIL8_EXT = System::Word(0x88f0);
static _DELPHI_CONST System::Word GL_TEXTURE_STENCIL_SIZE_EXT = System::Word(0x88f1);
static _DELPHI_CONST System::Word GL_SRGB_EXT = System::Word(0x8c40);
static _DELPHI_CONST System::Word GL_SRGB8_EXT = System::Word(0x8c41);
static _DELPHI_CONST System::Word GL_SRGB_ALPHA_EXT = System::Word(0x8c42);
static _DELPHI_CONST System::Word GL_SRGB8_ALPHA8_EXT = System::Word(0x8c43);
static _DELPHI_CONST System::Word GL_SLUMINANCE_ALPHA_EXT = System::Word(0x8c44);
static _DELPHI_CONST System::Word GL_SLUMINANCE8_ALPHA8_EXT = System::Word(0x8c45);
static _DELPHI_CONST System::Word GL_SLUMINANCE_EXT = System::Word(0x8c46);
static _DELPHI_CONST System::Word GL_SLUMINANCE8_EXT = System::Word(0x8c47);
static _DELPHI_CONST System::Word GL_COMPRESSED_SRGB_EXT = System::Word(0x8c48);
static _DELPHI_CONST System::Word GL_COMPRESSED_SRGB_ALPHA_EXT = System::Word(0x8c49);
static _DELPHI_CONST System::Word GL_COMPRESSED_SLUMINANCE_EXT = System::Word(0x8c4a);
static _DELPHI_CONST System::Word GL_COMPRESSED_SLUMINANCE_ALPHA_EXT = System::Word(0x8c4b);
static _DELPHI_CONST System::Word GL_COMPRESSED_SRGB_S3TC_DXT1_EXT = System::Word(0x8c4c);
static _DELPHI_CONST System::Word GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT = System::Word(0x8c4d);
static _DELPHI_CONST System::Word GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT = System::Word(0x8c4e);
static _DELPHI_CONST System::Word GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT = System::Word(0x8c4f);
static _DELPHI_CONST System::Word GL_READ_FRAMEBUFFER_EXT = System::Word(0x8ca8);
static _DELPHI_CONST System::Word GL_DRAW_FRAMEBUFFER_EXT = System::Word(0x8ca9);
static _DELPHI_CONST System::Word GL_READ_FRAMEBUFFER_BINDING_EXT = System::Word(0x8ca6);
static _DELPHI_CONST System::Word GL_DRAW_FRAMEBUFFER_BINDING_EXT = System::Word(0x8caa);
static _DELPHI_CONST System::Word GL_RENDERBUFFER_SAMPLES_EXT = System::Word(0x8cab);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT = System::Word(0x8d56);
static _DELPHI_CONST System::Word GL_MAX_SAMPLES_EXT = System::Word(0x8d57);
static _DELPHI_CONST System::Word GL_TIME_ELAPSED_EXT = System::Word(0x88bf);
static _DELPHI_CONST System::Word GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT = System::Word(0x8de2);
static _DELPHI_CONST System::Word GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT = System::Word(0x8de3);
static _DELPHI_CONST System::Word GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT = System::Word(0x8de4);
static _DELPHI_CONST System::Word GL_MAX_BINDABLE_UNIFORM_SIZE_EXT = System::Word(0x8ded);
static _DELPHI_CONST System::Word GL_UNIFORM_BUFFER_EXT = System::Word(0x8dee);
static _DELPHI_CONST System::Word GL_UNIFORM_BUFFER_BINDING_EXT = System::Word(0x8def);
static _DELPHI_CONST System::Word GLX_FRAMEBUFFER_SRGB_CAPABLE_EXT = System::Word(0x20b2);
static _DELPHI_CONST System::Word WGL_FRAMEBUFFER_SRGB_CAPABLE_EXT = System::Word(0x20a9);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_SRGB_EXT = System::Word(0x8db9);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_SRGB_CAPABLE_EXT = System::Word(0x8dba);
static _DELPHI_CONST System::Word GL_GEOMETRY_SHADER_EXT = System::Word(0x8dd9);
static _DELPHI_CONST System::Word GL_GEOMETRY_VERTICES_OUT_EXT = System::Word(0x8dda);
static _DELPHI_CONST System::Word GL_GEOMETRY_INPUT_TYPE_EXT = System::Word(0x8ddb);
static _DELPHI_CONST System::Word GL_GEOMETRY_OUTPUT_TYPE_EXT = System::Word(0x8ddc);
static _DELPHI_CONST System::Word GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT = System::Word(0x8c29);
static _DELPHI_CONST System::Word GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT = System::Word(0x8ddd);
static _DELPHI_CONST System::Word GL_MAX_VERTEX_VARYING_COMPONENTS_EXT = System::Word(0x8dde);
static _DELPHI_CONST System::Word GL_MAX_VARYING_COMPONENTS_EXT = System::Word(0x8b4b);
static _DELPHI_CONST System::Word GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT = System::Word(0x8ddf);
static _DELPHI_CONST System::Word GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT = System::Word(0x8de0);
static _DELPHI_CONST System::Word GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT = System::Word(0x8de1);
static _DELPHI_CONST System::Int8 GL_LINES_ADJACENCY_EXT = System::Int8(0xa);
static _DELPHI_CONST System::Int8 GL_LINE_STRIP_ADJACENCY_EXT = System::Int8(0xb);
static _DELPHI_CONST System::Int8 GL_TRIANGLES_ADJACENCY_EXT = System::Int8(0xc);
static _DELPHI_CONST System::Int8 GL_TRIANGLE_STRIP_ADJACENCY_EXT = System::Int8(0xd);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT = System::Word(0x8da8);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT = System::Word(0x8da9);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT = System::Word(0x8da7);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT = System::Word(0x8cd4);
static _DELPHI_CONST System::Word GL_PROGRAM_POINT_SIZE_EXT = System::Word(0x8642);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT = System::Word(0x88fd);
static _DELPHI_CONST System::Word GL_SAMPLER_1D_ARRAY_EXT = System::Word(0x8dc0);
static _DELPHI_CONST System::Word GL_SAMPLER_2D_ARRAY_EXT = System::Word(0x8dc1);
static _DELPHI_CONST System::Word GL_SAMPLER_BUFFER_EXT = System::Word(0x8dc2);
static _DELPHI_CONST System::Word GL_SAMPLER_1D_ARRAY_SHADOW_EXT = System::Word(0x8dc3);
static _DELPHI_CONST System::Word GL_SAMPLER_2D_ARRAY_SHADOW_EXT = System::Word(0x8dc4);
static _DELPHI_CONST System::Word GL_SAMPLER_CUBE_SHADOW_EXT = System::Word(0x8dc5);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_VEC2_EXT = System::Word(0x8dc6);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_VEC3_EXT = System::Word(0x8dc7);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_VEC4_EXT = System::Word(0x8dc8);
static _DELPHI_CONST System::Word GL_INT_SAMPLER_1D_EXT = System::Word(0x8dc9);
static _DELPHI_CONST System::Word GL_INT_SAMPLER_2D_EXT = System::Word(0x8dca);
static _DELPHI_CONST System::Word GL_INT_SAMPLER_3D_EXT = System::Word(0x8dcb);
static _DELPHI_CONST System::Word GL_INT_SAMPLER_CUBE_EXT = System::Word(0x8dcc);
static _DELPHI_CONST System::Word GL_INT_SAMPLER_2D_RECT_EXT = System::Word(0x8dcd);
static _DELPHI_CONST System::Word GL_INT_SAMPLER_1D_ARRAY_EXT = System::Word(0x8dce);
static _DELPHI_CONST System::Word GL_INT_SAMPLER_2D_ARRAY_EXT = System::Word(0x8dcf);
static _DELPHI_CONST System::Word GL_INT_SAMPLER_BUFFER_EXT = System::Word(0x8dd0);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_SAMPLER_1D_EXT = System::Word(0x8dd1);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_SAMPLER_2D_EXT = System::Word(0x8dd2);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_SAMPLER_3D_EXT = System::Word(0x8dd3);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_SAMPLER_CUBE_EXT = System::Word(0x8dd4);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT = System::Word(0x8dd5);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT = System::Word(0x8dd6);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT = System::Word(0x8dd7);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT = System::Word(0x8dd8);
static _DELPHI_CONST System::Word GL_MIN_PROGRAM_TEXEL_OFFSET_EXT = System::Word(0x8904);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_TEXEL_OFFSET_EXT = System::Word(0x8905);
static _DELPHI_CONST System::Word GL_R11F_G11F_B10F_EXT = System::Word(0x8c3a);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_10F_11F_11F_REV_EXT = System::Word(0x8c3b);
static _DELPHI_CONST System::Word RGBA_SIGNED_COMPONENTS_EXT = System::Word(0x8c3c);
static _DELPHI_CONST System::Word WGL_TYPE_RGBA_UNSIGNED_FLOAT_EXT = System::Word(0x20a8);
static _DELPHI_CONST System::Word GLX_RGBA_UNSIGNED_FLOAT_TYPE_EXT = System::Word(0x20b1);
static _DELPHI_CONST System::Int8 GLX_RGBA_UNSIGNED_FLOAT_BIT_EXT = System::Int8(0x8);
static _DELPHI_CONST System::Word GL_TEXTURE_1D_ARRAY_EXT = System::Word(0x8c18);
static _DELPHI_CONST System::Word GL_TEXTURE_2D_ARRAY_EXT = System::Word(0x8c1a);
static _DELPHI_CONST System::Word GL_PROXY_TEXTURE_2D_ARRAY_EXT = System::Word(0x8c1b);
static _DELPHI_CONST System::Word GL_PROXY_TEXTURE_1D_ARRAY_EXT = System::Word(0x8c19);
static _DELPHI_CONST System::Word GL_TEXTURE_BINDING_1D_ARRAY_EXT = System::Word(0x8c1c);
static _DELPHI_CONST System::Word GL_TEXTURE_BINDING_2D_ARRAY_EXT = System::Word(0x8c1d);
static _DELPHI_CONST System::Word GL_MAX_ARRAY_TEXTURE_LAYERS_EXT = System::Word(0x88ff);
static _DELPHI_CONST System::Word GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT = System::Word(0x884e);
static _DELPHI_CONST System::Word GL_TEXTURE_BUFFER_EXT = System::Word(0x8c2a);
static _DELPHI_CONST System::Word GL_MAX_TEXTURE_BUFFER_SIZE_EXT = System::Word(0x8c2b);
static _DELPHI_CONST System::Word GL_TEXTURE_BINDING_BUFFER_EXT = System::Word(0x8c2c);
static _DELPHI_CONST System::Word GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT = System::Word(0x8c2d);
static _DELPHI_CONST System::Word GL_TEXTURE_BUFFER_FORMAT_EXT = System::Word(0x8c2e);
static _DELPHI_CONST System::Word GL_COMPRESSED_LUMINANCE_LATC1_EXT = System::Word(0x8c70);
static _DELPHI_CONST System::Word GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT = System::Word(0x8c71);
static _DELPHI_CONST System::Word GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT = System::Word(0x8c72);
static _DELPHI_CONST System::Word GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT = System::Word(0x8c73);
static _DELPHI_CONST System::Word GL_COMPRESSED_RED_RGTC1_EXT = System::Word(0x8dbb);
static _DELPHI_CONST System::Word GL_COMPRESSED_SIGNED_RED_RGTC1_EXT = System::Word(0x8dbc);
static _DELPHI_CONST System::Word GL_COMPRESSED_RED_GREEN_RGTC2_EXT = System::Word(0x8dbd);
static _DELPHI_CONST System::Word GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT = System::Word(0x8dbe);
static _DELPHI_CONST System::Word GL_RGBA_INTEGER_MODE_EXT = System::Word(0x8d9e);
static _DELPHI_CONST System::Word GL_RGBA32UI_EXT = System::Word(0x8d70);
static _DELPHI_CONST System::Word GL_RGB32UI_EXT = System::Word(0x8d71);
static _DELPHI_CONST System::Word GL_ALPHA32UI_EXT = System::Word(0x8d72);
static _DELPHI_CONST System::Word GL_INTENSITY32UI_EXT = System::Word(0x8d73);
static _DELPHI_CONST System::Word GL_LUMINANCE32UI_EXT = System::Word(0x8d74);
static _DELPHI_CONST System::Word GL_LUMINANCE_ALPHA32UI_EXT = System::Word(0x8d75);
static _DELPHI_CONST System::Word GL_RGBA16UI_EXT = System::Word(0x8d76);
static _DELPHI_CONST System::Word GL_RGB16UI_EXT = System::Word(0x8d77);
static _DELPHI_CONST System::Word GL_ALPHA16UI_EXT = System::Word(0x8d78);
static _DELPHI_CONST System::Word GL_INTENSITY16UI_EXT = System::Word(0x8d79);
static _DELPHI_CONST System::Word GL_LUMINANCE16UI_EXT = System::Word(0x8d7a);
static _DELPHI_CONST System::Word GL_LUMINANCE_ALPHA16UI_EXT = System::Word(0x8d7b);
static _DELPHI_CONST System::Word GL_RGBA8UI_EXT = System::Word(0x8d7c);
static _DELPHI_CONST System::Word GL_RGB8UI_EXT = System::Word(0x8d7d);
static _DELPHI_CONST System::Word GL_ALPHA8UI_EXT = System::Word(0x8d7e);
static _DELPHI_CONST System::Word GL_INTENSITY8UI_EXT = System::Word(0x8d7f);
static _DELPHI_CONST System::Word GL_LUMINANCE8UI_EXT = System::Word(0x8d80);
static _DELPHI_CONST System::Word GL_LUMINANCE_ALPHA8UI_EXT = System::Word(0x8d81);
static _DELPHI_CONST System::Word GL_RGBA32I_EXT = System::Word(0x8d82);
static _DELPHI_CONST System::Word GL_RGB32I_EXT = System::Word(0x8d83);
static _DELPHI_CONST System::Word GL_ALPHA32I_EXT = System::Word(0x8d84);
static _DELPHI_CONST System::Word GL_INTENSITY32I_EXT = System::Word(0x8d85);
static _DELPHI_CONST System::Word GL_LUMINANCE32I_EXT = System::Word(0x8d86);
static _DELPHI_CONST System::Word GL_LUMINANCE_ALPHA32I_EXT = System::Word(0x8d87);
static _DELPHI_CONST System::Word GL_RGBA16I_EXT = System::Word(0x8d88);
static _DELPHI_CONST System::Word GL_RGB16I_EXT = System::Word(0x8d89);
static _DELPHI_CONST System::Word GL_ALPHA16I_EXT = System::Word(0x8d8a);
static _DELPHI_CONST System::Word GL_INTENSITY16I_EXT = System::Word(0x8d8b);
static _DELPHI_CONST System::Word GL_LUMINANCE16I_EXT = System::Word(0x8d8c);
static _DELPHI_CONST System::Word GL_LUMINANCE_ALPHA16I_EXT = System::Word(0x8d8d);
static _DELPHI_CONST System::Word GL_RGBA8I_EXT = System::Word(0x8d8e);
static _DELPHI_CONST System::Word GL_RGB8I_EXT = System::Word(0x8d8f);
static _DELPHI_CONST System::Word GL_ALPHA8I_EXT = System::Word(0x8d90);
static _DELPHI_CONST System::Word GL_INTENSITY8I_EXT = System::Word(0x8d91);
static _DELPHI_CONST System::Word GL_LUMINANCE8I_EXT = System::Word(0x8d92);
static _DELPHI_CONST System::Word GL_LUMINANCE_ALPHA8I_EXT = System::Word(0x8d93);
static _DELPHI_CONST System::Word GL_RED_INTEGER_EXT = System::Word(0x8d94);
static _DELPHI_CONST System::Word GL_GREEN_INTEGER_EXT = System::Word(0x8d95);
static _DELPHI_CONST System::Word GL_BLUE_INTEGER_EXT = System::Word(0x8d96);
static _DELPHI_CONST System::Word GL_ALPHA_INTEGER_EXT = System::Word(0x8d97);
static _DELPHI_CONST System::Word GL_RGB_INTEGER_EXT = System::Word(0x8d98);
static _DELPHI_CONST System::Word GL_RGBA_INTEGER_EXT = System::Word(0x8d99);
static _DELPHI_CONST System::Word GL_BGR_INTEGER_EXT = System::Word(0x8d9a);
static _DELPHI_CONST System::Word GL_BGRA_INTEGER_EXT = System::Word(0x8d9b);
static _DELPHI_CONST System::Word GL_LUMINANCE_INTEGER_EXT = System::Word(0x8d9c);
static _DELPHI_CONST System::Word GL_LUMINANCE_ALPHA_INTEGER_EXT = System::Word(0x8d9d);
static _DELPHI_CONST System::Word GL_RGB9_E5_EXT = System::Word(0x8c3d);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_5_9_9_9_REV_EXT = System::Word(0x8c3e);
static _DELPHI_CONST System::Word GL_TEXTURE_SHARED_SIZE_EXT = System::Word(0x8c3f);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_BUFFER_EXT = System::Word(0x8c8e);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT = System::Word(0x8c84);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT = System::Word(0x8c85);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT = System::Word(0x8c8f);
static _DELPHI_CONST System::Word GL_INTERLEAVED_ATTRIBS_EXT = System::Word(0x8c8c);
static _DELPHI_CONST System::Word GL_SEPARATE_ATTRIBS_EXT = System::Word(0x8c8d);
static _DELPHI_CONST System::Word GL_PRIMITIVES_GENERATED_EXT = System::Word(0x8c87);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT = System::Word(0x8c88);
static _DELPHI_CONST System::Word GL_RASTERIZER_DISCARD_EXT = System::Word(0x8c89);
static _DELPHI_CONST System::Word GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT = System::Word(0x8c8a);
static _DELPHI_CONST System::Word GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT = System::Word(0x8c8b);
static _DELPHI_CONST System::Word GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT = System::Word(0x8c80);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_VARYINGS_EXT = System::Word(0x8c83);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT = System::Word(0x8c7f);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT = System::Word(0x8c76);
static _DELPHI_CONST System::Word GL_PROGRAM_MATRIX_EXT = System::Word(0x8e2d);
static _DELPHI_CONST System::Word GL_TRANSPOSE_PROGRAM_MATRIX_EXT = System::Word(0x8e2e);
static _DELPHI_CONST System::Word GL_PROGRAM_MATRIX_STACK_DEPTH_EXT = System::Word(0x8e2f);
static _DELPHI_CONST System::Word GL_TEXTURE_SWIZZLE_R_EXT = System::Word(0x8e42);
static _DELPHI_CONST System::Word GL_TEXTURE_SWIZZLE_G_EXT = System::Word(0x8e43);
static _DELPHI_CONST System::Word GL_TEXTURE_SWIZZLE_B_EXT = System::Word(0x8e44);
static _DELPHI_CONST System::Word GL_TEXTURE_SWIZZLE_A_EXT = System::Word(0x8e45);
static _DELPHI_CONST System::Word GL_TEXTURE_SWIZZLE_RGBA_EXT = System::Word(0x8e46);
static _DELPHI_CONST System::Word GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT = System::Word(0x8e4c);
static _DELPHI_CONST System::Word GL_FIRST_VERTEX_CONVENTION_EXT = System::Word(0x8e4d);
static _DELPHI_CONST System::Word GL_LAST_VERTEX_CONVENTION_EXT = System::Word(0x8e4e);
static _DELPHI_CONST System::Word GL_PROVOKING_VERTEX_EXT = System::Word(0x8e4f);
static _DELPHI_CONST System::Word GL_ALPHA_SNORM = System::Word(0x9010);
static _DELPHI_CONST System::Word GL_LUMINANCE_SNORM = System::Word(0x9011);
static _DELPHI_CONST System::Word GL_LUMINANCE_ALPHA_SNORM = System::Word(0x9012);
static _DELPHI_CONST System::Word GL_INTENSITY_SNORM = System::Word(0x9013);
static _DELPHI_CONST System::Word GL_ALPHA8_SNORM = System::Word(0x9014);
static _DELPHI_CONST System::Word GL_LUMINANCE8_SNORM = System::Word(0x9015);
static _DELPHI_CONST System::Word GL_LUMINANCE8_ALPHA8_SNORM = System::Word(0x9016);
static _DELPHI_CONST System::Word GL_INTENSITY8_SNORM = System::Word(0x9017);
static _DELPHI_CONST System::Word GL_ALPHA16_SNORM = System::Word(0x9018);
static _DELPHI_CONST System::Word GL_LUMINANCE16_SNORM = System::Word(0x9019);
static _DELPHI_CONST System::Word GL_LUMINANCE16_ALPHA16_SNORM = System::Word(0x901a);
static _DELPHI_CONST System::Word GL_INTENSITY16_SNORM = System::Word(0x901b);
static _DELPHI_CONST System::Word GL_ACTIVE_PROGRAM_EXT = System::Word(0x8b8d);
static _DELPHI_CONST System::Word GL_MAX_IMAGE_UNITS_EXT = System::Word(0x8f38);
static _DELPHI_CONST System::Word GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT = System::Word(0x8f39);
static _DELPHI_CONST System::Word GL_IMAGE_BINDING_NAME_EXT = System::Word(0x8f3a);
static _DELPHI_CONST System::Word GL_IMAGE_BINDING_LEVEL_EXT = System::Word(0x8f3b);
static _DELPHI_CONST System::Word GL_IMAGE_BINDING_LAYERED_EXT = System::Word(0x8f3c);
static _DELPHI_CONST System::Word GL_IMAGE_BINDING_LAYER_EXT = System::Word(0x8f3d);
static _DELPHI_CONST System::Word GL_IMAGE_BINDING_ACCESS_EXT = System::Word(0x8f3e);
static _DELPHI_CONST System::Word GL_IMAGE_1D_EXT = System::Word(0x904c);
static _DELPHI_CONST System::Word GL_IMAGE_2D_EXT = System::Word(0x904d);
static _DELPHI_CONST System::Word GL_IMAGE_3D_EXT = System::Word(0x904e);
static _DELPHI_CONST System::Word GL_IMAGE_2D_RECT_EXT = System::Word(0x904f);
static _DELPHI_CONST System::Word GL_IMAGE_CUBE_EXT = System::Word(0x9050);
static _DELPHI_CONST System::Word GL_IMAGE_BUFFER_EXT = System::Word(0x9051);
static _DELPHI_CONST System::Word GL_IMAGE_1D_ARRAY_EXT = System::Word(0x9052);
static _DELPHI_CONST System::Word GL_IMAGE_2D_ARRAY_EXT = System::Word(0x9053);
static _DELPHI_CONST System::Word GL_IMAGE_CUBE_MAP_ARRAY_EXT = System::Word(0x9054);
static _DELPHI_CONST System::Word GL_IMAGE_2D_MULTISAMPLE_EXT = System::Word(0x9055);
static _DELPHI_CONST System::Word GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = System::Word(0x9056);
static _DELPHI_CONST System::Word GL_INT_IMAGE_1D_EXT = System::Word(0x9057);
static _DELPHI_CONST System::Word GL_INT_IMAGE_2D_EXT = System::Word(0x9058);
static _DELPHI_CONST System::Word GL_INT_IMAGE_3D_EXT = System::Word(0x9059);
static _DELPHI_CONST System::Word GL_INT_IMAGE_2D_RECT_EXT = System::Word(0x905a);
static _DELPHI_CONST System::Word GL_INT_IMAGE_CUBE_EXT = System::Word(0x905b);
static _DELPHI_CONST System::Word GL_INT_IMAGE_BUFFER_EXT = System::Word(0x905c);
static _DELPHI_CONST System::Word GL_INT_IMAGE_1D_ARRAY_EXT = System::Word(0x905d);
static _DELPHI_CONST System::Word GL_INT_IMAGE_2D_ARRAY_EXT = System::Word(0x905e);
static _DELPHI_CONST System::Word GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT = System::Word(0x905f);
static _DELPHI_CONST System::Word GL_INT_IMAGE_2D_MULTISAMPLE_EXT = System::Word(0x9060);
static _DELPHI_CONST System::Word GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = System::Word(0x9061);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_IMAGE_1D_EXT = System::Word(0x9062);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_IMAGE_2D_EXT = System::Word(0x9063);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_IMAGE_3D_EXT = System::Word(0x9064);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT = System::Word(0x9065);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_IMAGE_CUBE_EXT = System::Word(0x9066);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_IMAGE_BUFFER_EXT = System::Word(0x9067);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT = System::Word(0x9068);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT = System::Word(0x9069);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT = System::Word(0x906a);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT = System::Word(0x906b);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = System::Word(0x906c);
static _DELPHI_CONST System::Word GL_MAX_IMAGE_SAMPLES_EXT = System::Word(0x906d);
static _DELPHI_CONST System::Word GL_IMAGE_BINDING_FORMAT_EXT = System::Word(0x906e);
static _DELPHI_CONST System::Int8 GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT = System::Int8(0x1);
static _DELPHI_CONST System::Int8 GL_ELEMENT_ARRAY_BARRIER_BIT_EXT = System::Int8(0x2);
static _DELPHI_CONST System::Int8 GL_UNIFORM_BARRIER_BIT_EXT = System::Int8(0x4);
static _DELPHI_CONST System::Int8 GL_TEXTURE_FETCH_BARRIER_BIT_EXT = System::Int8(0x8);
static _DELPHI_CONST System::Int8 GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT = System::Int8(0x20);
static _DELPHI_CONST System::Int8 GL_COMMAND_BARRIER_BIT_EXT = System::Int8(0x40);
static _DELPHI_CONST System::Byte GL_PIXEL_BUFFER_BARRIER_BIT_EXT = System::Byte(0x80);
static _DELPHI_CONST System::Word GL_TEXTURE_UPDATE_BARRIER_BIT_EXT = System::Word(0x100);
static _DELPHI_CONST System::Word GL_BUFFER_UPDATE_BARRIER_BIT_EXT = System::Word(0x200);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_BARRIER_BIT_EXT = System::Word(0x400);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT = System::Word(0x800);
static _DELPHI_CONST System::Word GL_ATOMIC_COUNTER_BARRIER_BIT_EXT = System::Word(0x1000);
static _DELPHI_CONST unsigned GL_ALL_BARRIER_BITS_EXT = unsigned(0xffffffff);
static _DELPHI_CONST System::Word GL_DOUBLE_VEC2_EXT = System::Word(0x8ffc);
static _DELPHI_CONST System::Word GL_DOUBLE_VEC3_EXT = System::Word(0x8ffd);
static _DELPHI_CONST System::Word GL_DOUBLE_VEC4_EXT = System::Word(0x8ffe);
static _DELPHI_CONST System::Word GL_DOUBLE_MAT2_EXT = System::Word(0x8f46);
static _DELPHI_CONST System::Word GL_DOUBLE_MAT3_EXT = System::Word(0x8f47);
static _DELPHI_CONST System::Word GL_DOUBLE_MAT4_EXT = System::Word(0x8f48);
static _DELPHI_CONST System::Word GL_DOUBLE_MAT2x3_EXT = System::Word(0x8f49);
static _DELPHI_CONST System::Word GL_DOUBLE_MAT2x4_EXT = System::Word(0x8f4a);
static _DELPHI_CONST System::Word GL_DOUBLE_MAT3x2_EXT = System::Word(0x8f4b);
static _DELPHI_CONST System::Word GL_DOUBLE_MAT3x4_EXT = System::Word(0x8f4c);
static _DELPHI_CONST System::Word GL_DOUBLE_MAT4x2_EXT = System::Word(0x8f4d);
static _DELPHI_CONST System::Word GL_DOUBLE_MAT4x3_EXT = System::Word(0x8f4e);
static _DELPHI_CONST System::Word GL_TEXTURE_SRGB_DECODE_EXT = System::Word(0x8a48);
static _DELPHI_CONST System::Word GL_DECODE_EXT = System::Word(0x8a49);
static _DELPHI_CONST System::Word GL_SKIP_DECODE_EXT = System::Word(0x8a4a);
static _DELPHI_CONST System::Word GL_TEXTURE_COVERAGE_SAMPLES_NV = System::Word(0x9045);
static _DELPHI_CONST System::Word GL_TEXTURE_COLOR_SAMPLES_NV = System::Word(0x9046);
static _DELPHI_CONST System::Word GL_FACTOR_MIN_AMD = System::Word(0x901c);
static _DELPHI_CONST System::Word GL_FACTOR_MAX_AMD = System::Word(0x901d);
static _DELPHI_CONST System::Word GL_SUBSAMPLE_DISTANCE_AMD = System::Word(0x883f);
static _DELPHI_CONST System::Word GL_SYNC_X11_FENCE_EXT = System::Word(0x90e1);
static _DELPHI_CONST System::Word GL_SCALED_RESOLVE_FASTEST_EXT = System::Word(0x90ba);
static _DELPHI_CONST System::Word GL_SCALED_RESOLVE_NICEST_EXT = System::Word(0x90bb);
static _DELPHI_CONST System::Word GL_PATH_FORMAT_SVG_NV = System::Word(0x9070);
static _DELPHI_CONST System::Word GL_PATH_FORMAT_PS_NV = System::Word(0x9071);
static _DELPHI_CONST System::Word GL_STANDARD_FONT_NAME_NV = System::Word(0x9072);
static _DELPHI_CONST System::Word GL_SYSTEM_FONT_NAME_NV = System::Word(0x9073);
static _DELPHI_CONST System::Word GL_FILE_NAME_NV = System::Word(0x9074);
static _DELPHI_CONST System::Word GL_PATH_STROKE_WIDTH_NV = System::Word(0x9075);
static _DELPHI_CONST System::Word GL_PATH_END_CAPS_NV = System::Word(0x9076);
static _DELPHI_CONST System::Word GL_PATH_INITIAL_END_CAP_NV = System::Word(0x9077);
static _DELPHI_CONST System::Word GL_PATH_TERMINAL_END_CAP_NV = System::Word(0x9078);
static _DELPHI_CONST System::Word GL_PATH_JOIN_STYLE_NV = System::Word(0x9079);
static _DELPHI_CONST System::Word GL_PATH_MITER_LIMIT_NV = System::Word(0x907a);
static _DELPHI_CONST System::Word GL_PATH_DASH_CAPS_NV = System::Word(0x907b);
static _DELPHI_CONST System::Word GL_PATH_INITIAL_DASH_CAP_NV = System::Word(0x907c);
static _DELPHI_CONST System::Word GL_PATH_TERMINAL_DASH_CAP_NV = System::Word(0x907d);
static _DELPHI_CONST System::Word GL_PATH_DASH_OFFSET_NV = System::Word(0x907e);
static _DELPHI_CONST System::Word GL_PATH_CLIENT_LENGTH_NV = System::Word(0x907f);
static _DELPHI_CONST System::Word GL_PATH_FILL_MODE_NV = System::Word(0x9080);
static _DELPHI_CONST System::Word GL_PATH_FILL_MASK_NV = System::Word(0x9081);
static _DELPHI_CONST System::Word GL_PATH_FILL_COVER_MODE_NV = System::Word(0x9082);
static _DELPHI_CONST System::Word GL_PATH_STROKE_COVER_MODE_NV = System::Word(0x9083);
static _DELPHI_CONST System::Word GL_PATH_STROKE_MASK_NV = System::Word(0x9084);
static _DELPHI_CONST System::Word GL_PATH_SAMPLE_QUALITY_NV = System::Word(0x9085);
static _DELPHI_CONST System::Word GL_PATH_STROKE_BOUND_NV = System::Word(0x9086);
static _DELPHI_CONST System::Word GL_PATH_STROKE_OVERSAMPLE_COUNT_NV = System::Word(0x9087);
static _DELPHI_CONST System::Word GL_COUNT_UP_NV = System::Word(0x9088);
static _DELPHI_CONST System::Word GL_COUNT_DOWN_NV = System::Word(0x9089);
static _DELPHI_CONST System::Word GL_PATH_OBJECT_BOUNDING_BOX_NV = System::Word(0x908a);
static _DELPHI_CONST System::Word GL_CONVEX_HULL_NV = System::Word(0x908b);
static _DELPHI_CONST System::Word GL_MULTI_HULLS_NV = System::Word(0x908c);
static _DELPHI_CONST System::Word GL_BOUNDING_BOX_NV = System::Word(0x908d);
static _DELPHI_CONST System::Word GL_TRANSLATE_X_NV = System::Word(0x908e);
static _DELPHI_CONST System::Word GL_TRANSLATE_Y_NV = System::Word(0x908f);
static _DELPHI_CONST System::Word GL_TRANSLATE_2D_NV = System::Word(0x9090);
static _DELPHI_CONST System::Word GL_TRANSLATE_3D_NV = System::Word(0x9091);
static _DELPHI_CONST System::Word GL_AFFINE_2D_NV = System::Word(0x9092);
static _DELPHI_CONST System::Word GL_PROJECTIVE_2D_NV = System::Word(0x9093);
static _DELPHI_CONST System::Word GL_AFFINE_3D_NV = System::Word(0x9094);
static _DELPHI_CONST System::Word GL_PROJECTIVE_3D_NV = System::Word(0x9095);
static _DELPHI_CONST System::Word GL_TRANSPOSE_AFFINE_2D_NV = System::Word(0x9096);
static _DELPHI_CONST System::Word GL_TRANSPOSE_PROJECTIVE_2D_NV = System::Word(0x9097);
static _DELPHI_CONST System::Word GL_TRANSPOSE_AFFINE_3D_NV = System::Word(0x9098);
static _DELPHI_CONST System::Word GL_TRANSPOSE_PROJECTIVE_3D_NV = System::Word(0x9099);
static _DELPHI_CONST System::Word GL_UTF8_NV = System::Word(0x909a);
static _DELPHI_CONST System::Word GL_UTF16_NV = System::Word(0x909b);
static _DELPHI_CONST System::Word GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV = System::Word(0x909c);
static _DELPHI_CONST System::Word GL_PATH_COMMAND_COUNT_NV = System::Word(0x909d);
static _DELPHI_CONST System::Word GL_PATH_COORD_COUNT_NV = System::Word(0x909e);
static _DELPHI_CONST System::Word GL_PATH_DASH_ARRAY_COUNT_NV = System::Word(0x909f);
static _DELPHI_CONST System::Word GL_PATH_COMPUTED_LENGTH_NV = System::Word(0x90a0);
static _DELPHI_CONST System::Word GL_PATH_FILL_BOUNDING_BOX_NV = System::Word(0x90a1);
static _DELPHI_CONST System::Word GL_PATH_STROKE_BOUNDING_BOX_NV = System::Word(0x90a2);
static _DELPHI_CONST System::Word GL_SQUARE_NV = System::Word(0x90a3);
static _DELPHI_CONST System::Word GL_ROUND_NV = System::Word(0x90a4);
static _DELPHI_CONST System::Word GL_TRIANGULAR_NV = System::Word(0x90a5);
static _DELPHI_CONST System::Word GL_BEVEL_NV = System::Word(0x90a6);
static _DELPHI_CONST System::Word GL_MITER_REVERT_NV = System::Word(0x90a7);
static _DELPHI_CONST System::Word GL_MITER_TRUNCATE_NV = System::Word(0x90a8);
static _DELPHI_CONST System::Word GL_SKIP_MISSING_GLYPH_NV = System::Word(0x90a9);
static _DELPHI_CONST System::Word GL_USE_MISSING_GLYPH_NV = System::Word(0x90aa);
static _DELPHI_CONST System::Word GL_PATH_ERROR_POSITION_NV = System::Word(0x90ab);
static _DELPHI_CONST System::Word GL_PATH_FOG_GEN_MODE_NV = System::Word(0x90ac);
static _DELPHI_CONST System::Word GL_ACCUM_ADJACENT_PAIRS_NV = System::Word(0x90ad);
static _DELPHI_CONST System::Word GL_ADJACENT_PAIRS_NV = System::Word(0x90ae);
static _DELPHI_CONST System::Word GL_FIRST_TO_REST_NV = System::Word(0x90af);
static _DELPHI_CONST System::Word GL_PATH_GEN_MODE_NV = System::Word(0x90b0);
static _DELPHI_CONST System::Word GL_PATH_GEN_COEFF_NV = System::Word(0x90b1);
static _DELPHI_CONST System::Word GL_PATH_GEN_COLOR_FORMAT_NV = System::Word(0x90b2);
static _DELPHI_CONST System::Word GL_PATH_GEN_COMPONENTS_NV = System::Word(0x90b3);
static _DELPHI_CONST System::Word GL_PATH_STENCIL_FUNC_NV = System::Word(0x90b7);
static _DELPHI_CONST System::Word GL_PATH_STENCIL_REF_NV = System::Word(0x90b8);
static _DELPHI_CONST System::Word GL_PATH_STENCIL_VALUE_MASK_NV = System::Word(0x90b9);
static _DELPHI_CONST System::Word GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV = System::Word(0x90bd);
static _DELPHI_CONST System::Word GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV = System::Word(0x90be);
static _DELPHI_CONST System::Word GL_PATH_COVER_DEPTH_FUNC_NV = System::Word(0x90bf);
static _DELPHI_CONST System::Word GL_PATH_DASH_OFFSET_RESET_NV = System::Word(0x90b4);
static _DELPHI_CONST System::Word GL_MOVE_TO_RESETS_NV = System::Word(0x90b5);
static _DELPHI_CONST System::Word GL_MOVE_TO_CONTINUES_NV = System::Word(0x90b6);
static _DELPHI_CONST System::Int8 GL_CLOSE_PATH_NV = System::Int8(0x0);
static _DELPHI_CONST System::Int8 GL_MOVE_TO_NV = System::Int8(0x2);
static _DELPHI_CONST System::Int8 GL_RELATIVE_MOVE_TO_NV = System::Int8(0x3);
static _DELPHI_CONST System::Int8 GL_LINE_TO_NV = System::Int8(0x4);
static _DELPHI_CONST System::Int8 GL_RELATIVE_LINE_TO_NV = System::Int8(0x5);
static _DELPHI_CONST System::Int8 GL_HORIZONTAL_LINE_TO_NV = System::Int8(0x6);
static _DELPHI_CONST System::Int8 GL_RELATIVE_HORIZONTAL_LINE_TO_NV = System::Int8(0x7);
static _DELPHI_CONST System::Int8 GL_VERTICAL_LINE_TO_NV = System::Int8(0x8);
static _DELPHI_CONST System::Int8 GL_RELATIVE_VERTICAL_LINE_TO_NV = System::Int8(0x9);
static _DELPHI_CONST System::Int8 GL_QUADRATIC_CURVE_TO_NV = System::Int8(0xa);
static _DELPHI_CONST System::Int8 GL_RELATIVE_QUADRATIC_CURVE_TO_NV = System::Int8(0xb);
static _DELPHI_CONST System::Int8 GL_CUBIC_CURVE_TO_NV = System::Int8(0xc);
static _DELPHI_CONST System::Int8 GL_RELATIVE_CUBIC_CURVE_TO_NV = System::Int8(0xd);
static _DELPHI_CONST System::Int8 GL_SMOOTH_QUADRATIC_CURVE_TO_NV = System::Int8(0xe);
static _DELPHI_CONST System::Int8 GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV = System::Int8(0xf);
static _DELPHI_CONST System::Int8 GL_SMOOTH_CUBIC_CURVE_TO_NV = System::Int8(0x10);
static _DELPHI_CONST System::Int8 GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV = System::Int8(0x11);
static _DELPHI_CONST System::Int8 GL_SMALL_CCW_ARC_TO_NV = System::Int8(0x12);
static _DELPHI_CONST System::Int8 GL_RELATIVE_SMALL_CCW_ARC_TO_NV = System::Int8(0x13);
static _DELPHI_CONST System::Int8 GL_SMALL_CW_ARC_TO_NV = System::Int8(0x14);
static _DELPHI_CONST System::Int8 GL_RELATIVE_SMALL_CW_ARC_TO_NV = System::Int8(0x15);
static _DELPHI_CONST System::Int8 GL_LARGE_CCW_ARC_TO_NV = System::Int8(0x16);
static _DELPHI_CONST System::Int8 GL_RELATIVE_LARGE_CCW_ARC_TO_NV = System::Int8(0x17);
static _DELPHI_CONST System::Int8 GL_LARGE_CW_ARC_TO_NV = System::Int8(0x18);
static _DELPHI_CONST System::Int8 GL_RELATIVE_LARGE_CW_ARC_TO_NV = System::Int8(0x19);
static _DELPHI_CONST System::Byte GL_RESTART_PATH_NV = System::Byte(0xf0);
static _DELPHI_CONST System::Byte GL_DUP_FIRST_CUBIC_CURVE_TO_NV = System::Byte(0xf2);
static _DELPHI_CONST System::Byte GL_DUP_LAST_CUBIC_CURVE_TO_NV = System::Byte(0xf4);
static _DELPHI_CONST System::Byte GL_RECT_NV = System::Byte(0xf6);
static _DELPHI_CONST System::Byte GL_CIRCULAR_CCW_ARC_TO_NV = System::Byte(0xf8);
static _DELPHI_CONST System::Byte GL_CIRCULAR_CW_ARC_TO_NV = System::Byte(0xfa);
static _DELPHI_CONST System::Byte GL_CIRCULAR_TANGENT_ARC_TO_NV = System::Byte(0xfc);
static _DELPHI_CONST System::Byte GL_ARC_TO_NV = System::Byte(0xfe);
static _DELPHI_CONST System::Byte GL_RELATIVE_ARC_TO_NV = System::Byte(0xff);
static _DELPHI_CONST System::Int8 GL_BOLD_BIT_NV = System::Int8(0x1);
static _DELPHI_CONST System::Int8 GL_ITALIC_BIT_NV = System::Int8(0x2);
static _DELPHI_CONST System::Int8 GL_GLYPH_WIDTH_BIT_NV = System::Int8(0x1);
static _DELPHI_CONST System::Int8 GL_GLYPH_HEIGHT_BIT_NV = System::Int8(0x2);
static _DELPHI_CONST System::Int8 GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV = System::Int8(0x4);
static _DELPHI_CONST System::Int8 GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV = System::Int8(0x8);
static _DELPHI_CONST System::Int8 GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV = System::Int8(0x10);
static _DELPHI_CONST System::Int8 GL_GLYPH_VERTICAL_BEARING_X_BIT_NV = System::Int8(0x20);
static _DELPHI_CONST System::Int8 GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV = System::Int8(0x40);
static _DELPHI_CONST System::Byte GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV = System::Byte(0x80);
static _DELPHI_CONST System::Word GL_GLYPH_HAS_KERNING_NV = System::Word(0x100);
static _DELPHI_CONST int GL_FONT_X_MIN_BOUNDS_NV = int(0x10000);
static _DELPHI_CONST int GL_FONT_Y_MIN_BOUNDS_NV = int(0x20000);
static _DELPHI_CONST int GL_FONT_X_MAX_BOUNDS_NV = int(0x40000);
static _DELPHI_CONST int GL_FONT_Y_MAX_BOUNDS_NV = int(0x80000);
static _DELPHI_CONST int GL_FONT_UNITS_PER_EM_NV = int(0x100000);
static _DELPHI_CONST int GL_FONT_ASCENDER_NV = int(0x200000);
static _DELPHI_CONST int GL_FONT_DESCENDER_NV = int(0x400000);
static _DELPHI_CONST int GL_FONT_HEIGHT_NV = int(0x800000);
static _DELPHI_CONST int GL_FONT_MAX_ADVANCE_WIDTH_NV = int(0x1000000);
static _DELPHI_CONST int GL_FONT_MAX_ADVANCE_HEIGHT_NV = int(0x2000000);
static _DELPHI_CONST int GL_FONT_UNDERLINE_POSITION_NV = int(0x4000000);
static _DELPHI_CONST int GL_FONT_UNDERLINE_THICKNESS_NV = int(0x8000000);
static _DELPHI_CONST int GL_FONT_HAS_KERNING_NV = int(0x10000000);
static _DELPHI_CONST System::Word GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD = System::Word(0x9160);
static _DELPHI_CONST System::Word GL_SET_AMD = System::Word(0x874a);
static _DELPHI_CONST System::Word GL_REPLACE_VALUE_AMD = System::Word(0x874b);
static _DELPHI_CONST System::Word GL_STENCIL_OP_VALUE_AMD = System::Word(0x874c);
static _DELPHI_CONST System::Word GL_STENCIL_BACK_OP_VALUE_AMD = System::Word(0x874d);
static _DELPHI_CONST System::Word GL_QUERY_BUFFER_AMD = System::Word(0x9192);
static _DELPHI_CONST System::Word GL_QUERY_BUFFER_BINDING_AMD = System::Word(0x9193);
static _DELPHI_CONST System::Word GL_QUERY_RESULT_NO_WAIT_AMD = System::Word(0x9194);
static _DELPHI_CONST System::Int8 GL_TEXTURE_DEFORMATION_BIT_SGIX = System::Int8(0x1);
static _DELPHI_CONST System::Int8 GL_GEOMETRY_DEFORMATION_BIT_SGIX = System::Int8(0x2);
static _DELPHI_CONST System::Word GL_IGNORE_BORDER_HP = System::Word(0x8150);
static _DELPHI_CONST System::Word GL_CONSTANT_BORDER_HP = System::Word(0x8151);
static _DELPHI_CONST System::Word GL_REPLICATE_BORDER_HP = System::Word(0x8153);
static _DELPHI_CONST System::Word GL_CONVOLUTION_BORDER_COLOR_HP = System::Word(0x8154);
static _DELPHI_CONST System::Word GL_IMAGE_SCALE_X_HP = System::Word(0x8155);
static _DELPHI_CONST System::Word GL_IMAGE_SCALE_Y_HP = System::Word(0x8156);
static _DELPHI_CONST System::Word GL_IMAGE_TRANSLATE_X_HP = System::Word(0x8157);
static _DELPHI_CONST System::Word GL_IMAGE_TRANSLATE_Y_HP = System::Word(0x8158);
static _DELPHI_CONST System::Word GL_IMAGE_ROTATE_ANGLE_HP = System::Word(0x8159);
static _DELPHI_CONST System::Word GL_IMAGE_ROTATE_ORIGIN_X_HP = System::Word(0x815a);
static _DELPHI_CONST System::Word GL_IMAGE_ROTATE_ORIGIN_Y_HP = System::Word(0x815b);
static _DELPHI_CONST System::Word GL_IMAGE_MAG_FILTER_HP = System::Word(0x815c);
static _DELPHI_CONST System::Word GL_IMAGE_MIN_FILTER_HP = System::Word(0x815d);
static _DELPHI_CONST System::Word GL_IMAGE_CUBIC_WEIGHT_HP = System::Word(0x815e);
static _DELPHI_CONST System::Word GL_CUBIC_HP = System::Word(0x815f);
static _DELPHI_CONST System::Word GL_AVERAGE_HP = System::Word(0x8160);
static _DELPHI_CONST System::Word GL_IMAGE_TRANSFORM_2D_HP = System::Word(0x8161);
static _DELPHI_CONST System::Word GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP = System::Word(0x8162);
static _DELPHI_CONST System::Word GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP = System::Word(0x8163);
static _DELPHI_CONST System::Word GL_OCCLUSION_TEST_HP = System::Word(0x8165);
static _DELPHI_CONST System::Word GL_OCCLUSION_TEST_RESULT_HP = System::Word(0x8166);
static _DELPHI_CONST System::Word GL_TEXTURE_LIGHTING_MODE_HP = System::Word(0x8167);
static _DELPHI_CONST System::Word GL_TEXTURE_POST_SPECULAR_HP = System::Word(0x8168);
static _DELPHI_CONST System::Word GL_TEXTURE_PRE_SPECULAR_HP = System::Word(0x8169);
static _DELPHI_CONST int GL_CULL_VERTEX_IBM = int(0x1928a);
static _DELPHI_CONST int GL_RASTER_POSITION_UNCLIPPED_IBM = int(0x19262);
static _DELPHI_CONST System::Word GL_MIRRORED_REPEAT_IBM = System::Word(0x8370);
static _DELPHI_CONST int GL_VERTEX_ARRAY_LIST_IBM = int(0x1929e);
static _DELPHI_CONST int GL_NORMAL_ARRAY_LIST_IBM = int(0x1929f);
static _DELPHI_CONST int GL_COLOR_ARRAY_LIST_IBM = int(0x192a0);
static _DELPHI_CONST int GL_INDEX_ARRAY_LIST_IBM = int(0x192a1);
static _DELPHI_CONST int GL_TEXTURE_COORD_ARRAY_LIST_IBM = int(0x192a2);
static _DELPHI_CONST int GL_EDGE_FLAG_ARRAY_LIST_IBM = int(0x192a3);
static _DELPHI_CONST int GL_FOG_COORDINATE_ARRAY_LIST_IBM = int(0x192a4);
static _DELPHI_CONST int GL_SECONDARY_COLOR_ARRAY_LIST_IBM = int(0x192a5);
static _DELPHI_CONST int GL_VERTEX_ARRAY_LIST_STRIDE_IBM = int(0x192a8);
static _DELPHI_CONST int GL_NORMAL_ARRAY_LIST_STRIDE_IBM = int(0x192a9);
static _DELPHI_CONST int GL_COLOR_ARRAY_LIST_STRIDE_IBM = int(0x192aa);
static _DELPHI_CONST int GL_INDEX_ARRAY_LIST_STRIDE_IBM = int(0x192ab);
static _DELPHI_CONST int GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM = int(0x192ac);
static _DELPHI_CONST int GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM = int(0x192ad);
static _DELPHI_CONST int GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM = int(0x192ae);
static _DELPHI_CONST int GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM = int(0x192af);
static _DELPHI_CONST System::Word GL_RED_MIN_CLAMP_INGR = System::Word(0x8560);
static _DELPHI_CONST System::Word GL_GREEN_MIN_CLAMP_INGR = System::Word(0x8561);
static _DELPHI_CONST System::Word GL_BLUE_MIN_CLAMP_INGR = System::Word(0x8562);
static _DELPHI_CONST System::Word GL_ALPHA_MIN_CLAMP_INGR = System::Word(0x8563);
static _DELPHI_CONST System::Word GL_RED_MAX_CLAMP_INGR = System::Word(0x8564);
static _DELPHI_CONST System::Word GL_GREEN_MAX_CLAMP_INGR = System::Word(0x8565);
static _DELPHI_CONST System::Word GL_BLUE_MAX_CLAMP_INGR = System::Word(0x8566);
static _DELPHI_CONST System::Word GL_ALPHA_MAX_CLAMP_INGR = System::Word(0x8567);
static _DELPHI_CONST System::Word GL_INTERLACE_READ_INGR = System::Word(0x8568);
static _DELPHI_CONST System::Word GL_PARALLEL_ARRAYS_INTEL = System::Word(0x83f4);
static _DELPHI_CONST System::Word GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL = System::Word(0x83f5);
static _DELPHI_CONST System::Word GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL = System::Word(0x83f6);
static _DELPHI_CONST System::Word GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL = System::Word(0x83f7);
static _DELPHI_CONST System::Word GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL = System::Word(0x83f8);
static _DELPHI_CONST System::Word GL_DEPTH_STENCIL_TO_RGBA_NV = System::Word(0x886e);
static _DELPHI_CONST System::Word GL_DEPTH_STENCIL_TO_BGRA_NV = System::Word(0x886f);
static _DELPHI_CONST System::Word GL_DEPTH_CLAMP_NV = System::Word(0x864f);
static _DELPHI_CONST System::Word GL_EVAL_2D_NV = System::Word(0x86c0);
static _DELPHI_CONST System::Word GL_EVAL_TRIANGULAR_2D_NV = System::Word(0x86c1);
static _DELPHI_CONST System::Word GL_MAP_TESSELLATION_NV = System::Word(0x86c2);
static _DELPHI_CONST System::Word GL_MAP_ATTRIB_U_ORDER_NV = System::Word(0x86c3);
static _DELPHI_CONST System::Word GL_MAP_ATTRIB_V_ORDER_NV = System::Word(0x86c4);
static _DELPHI_CONST System::Word GL_EVAL_FRACTIONAL_TESSELLATION_NV = System::Word(0x86c5);
static _DELPHI_CONST System::Word GL_EVAL_VERTEX_ATTRIB0_NV = System::Word(0x86c6);
static _DELPHI_CONST System::Word GL_EVAL_VERTEX_ATTRIB1_NV = System::Word(0x86c7);
static _DELPHI_CONST System::Word GL_EVAL_VERTEX_ATTRIB2_NV = System::Word(0x86c8);
static _DELPHI_CONST System::Word GL_EVAL_VERTEX_ATTRIB3_NV = System::Word(0x86c9);
static _DELPHI_CONST System::Word GL_EVAL_VERTEX_ATTRIB4_NV = System::Word(0x86ca);
static _DELPHI_CONST System::Word GL_EVAL_VERTEX_ATTRIB5_NV = System::Word(0x86cb);
static _DELPHI_CONST System::Word GL_EVAL_VERTEX_ATTRIB6_NV = System::Word(0x86cc);
static _DELPHI_CONST System::Word GL_EVAL_VERTEX_ATTRIB7_NV = System::Word(0x86cd);
static _DELPHI_CONST System::Word GL_EVAL_VERTEX_ATTRIB8_NV = System::Word(0x86ce);
static _DELPHI_CONST System::Word GL_EVAL_VERTEX_ATTRIB9_NV = System::Word(0x86cf);
static _DELPHI_CONST System::Word GL_EVAL_VERTEX_ATTRIB10_NV = System::Word(0x86d0);
static _DELPHI_CONST System::Word GL_EVAL_VERTEX_ATTRIB11_NV = System::Word(0x86d1);
static _DELPHI_CONST System::Word GL_EVAL_VERTEX_ATTRIB12_NV = System::Word(0x86d2);
static _DELPHI_CONST System::Word GL_EVAL_VERTEX_ATTRIB13_NV = System::Word(0x86d3);
static _DELPHI_CONST System::Word GL_EVAL_VERTEX_ATTRIB14_NV = System::Word(0x86d4);
static _DELPHI_CONST System::Word GL_EVAL_VERTEX_ATTRIB15_NV = System::Word(0x86d5);
static _DELPHI_CONST System::Word GL_MAX_MAP_TESSELLATION_NV = System::Word(0x86d6);
static _DELPHI_CONST System::Word GL_MAX_RATIONAL_EVAL_ORDER_NV = System::Word(0x86d7);
static _DELPHI_CONST System::Word GL_ALL_COMPLETED_NV = System::Word(0x84f2);
static _DELPHI_CONST System::Word GL_FENCE_STATUS_NV = System::Word(0x84f3);
static _DELPHI_CONST System::Word GL_FENCE_CONDITION_NV = System::Word(0x84f4);
static _DELPHI_CONST System::Word GL_FLOAT_R_NV = System::Word(0x8880);
static _DELPHI_CONST System::Word GL_FLOAT_RG_NV = System::Word(0x8881);
static _DELPHI_CONST System::Word GL_FLOAT_RGB_NV = System::Word(0x8882);
static _DELPHI_CONST System::Word GL_FLOAT_RGBA_NV = System::Word(0x8883);
static _DELPHI_CONST System::Word GL_FLOAT_R16_NV = System::Word(0x8884);
static _DELPHI_CONST System::Word GL_FLOAT_R32_NV = System::Word(0x8885);
static _DELPHI_CONST System::Word GL_FLOAT_RG16_NV = System::Word(0x8886);
static _DELPHI_CONST System::Word GL_FLOAT_RG32_NV = System::Word(0x8887);
static _DELPHI_CONST System::Word GL_FLOAT_RGB16_NV = System::Word(0x8888);
static _DELPHI_CONST System::Word GL_FLOAT_RGB32_NV = System::Word(0x8889);
static _DELPHI_CONST System::Word GL_FLOAT_RGBA16_NV = System::Word(0x888a);
static _DELPHI_CONST System::Word GL_FLOAT_RGBA32_NV = System::Word(0x888b);
static _DELPHI_CONST System::Word GL_TEXTURE_FLOAT_COMPONENTS_NV = System::Word(0x888c);
static _DELPHI_CONST System::Word GL_FLOAT_CLEAR_COLOR_VALUE_NV = System::Word(0x888d);
static _DELPHI_CONST System::Word GL_FLOAT_RGBA_MODE_NV = System::Word(0x888e);
static _DELPHI_CONST System::Word GL_FOG_DISTANCE_MODE_NV = System::Word(0x855a);
static _DELPHI_CONST System::Word GL_EYE_RADIAL_NV = System::Word(0x855b);
static _DELPHI_CONST System::Word GL_EYE_PLANE_ABSOLUTE_NV = System::Word(0x855c);
static _DELPHI_CONST System::Word GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV = System::Word(0x8868);
static _DELPHI_CONST System::Word GL_FRAGMENT_PROGRAM_NV = System::Word(0x8870);
static _DELPHI_CONST System::Word GL_MAX_TEXTURE_COORDS_NV = System::Word(0x8871);
static _DELPHI_CONST System::Word GL_MAX_TEXTURE_IMAGE_UNITS_NV = System::Word(0x8872);
static _DELPHI_CONST System::Word GL_FRAGMENT_PROGRAM_BINDING_NV = System::Word(0x8873);
static _DELPHI_CONST System::Word GL_PROGRAM_ERROR_STRING_NV = System::Word(0x8874);
static _DELPHI_CONST System::Word GL_HALF_FLOAT_NV = System::Word(0x140b);
static _DELPHI_CONST System::Word GL_MAX_SHININESS_NV = System::Word(0x8504);
static _DELPHI_CONST System::Word GL_MAX_SPOT_EXPONENT_NV = System::Word(0x8505);
static _DELPHI_CONST System::Word GL_MULTISAMPLE_FILTER_HINT_NV = System::Word(0x8534);
static _DELPHI_CONST System::Word GL_PIXEL_COUNTER_BITS_NV = System::Word(0x8864);
static _DELPHI_CONST System::Word GL_CURRENT_OCCLUSION_QUERY_ID_NV = System::Word(0x8865);
static _DELPHI_CONST System::Word GL_PIXEL_COUNT_NV = System::Word(0x8866);
static _DELPHI_CONST System::Word GL_PIXEL_COUNT_AVAILABLE_NV = System::Word(0x8867);
static _DELPHI_CONST System::Word GL_DEPTH_STENCIL_NV = System::Word(0x84f9);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_24_8_NV = System::Word(0x84fa);
static _DELPHI_CONST System::Word GL_WRITE_PIXEL_DATA_RANGE_NV = System::Word(0x8878);
static _DELPHI_CONST System::Word GL_READ_PIXEL_DATA_RANGE_NV = System::Word(0x8879);
static _DELPHI_CONST System::Word GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV = System::Word(0x887a);
static _DELPHI_CONST System::Word GL_READ_PIXEL_DATA_RANGE_LENGTH_NV = System::Word(0x887b);
static _DELPHI_CONST System::Word GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV = System::Word(0x887c);
static _DELPHI_CONST System::Word GL_READ_PIXEL_DATA_RANGE_POINTER_NV = System::Word(0x887d);
static _DELPHI_CONST System::Word GL_POINT_SPRITE_NV = System::Word(0x8861);
static _DELPHI_CONST System::Word GL_COORD_REPLACE_NV = System::Word(0x8862);
static _DELPHI_CONST System::Word GL_POINT_SPRITE_R_MODE_NV = System::Word(0x8863);
static _DELPHI_CONST System::Word GL_PRIMITIVE_RESTART_NV = System::Word(0x8558);
static _DELPHI_CONST System::Word GL_PRIMITIVE_RESTART_INDEX_NV = System::Word(0x8559);
static _DELPHI_CONST System::Word GL_REGISTER_COMBINERS_NV = System::Word(0x8522);
static _DELPHI_CONST System::Word GL_VARIABLE_A_NV = System::Word(0x8523);
static _DELPHI_CONST System::Word GL_VARIABLE_B_NV = System::Word(0x8524);
static _DELPHI_CONST System::Word GL_VARIABLE_C_NV = System::Word(0x8525);
static _DELPHI_CONST System::Word GL_VARIABLE_D_NV = System::Word(0x8526);
static _DELPHI_CONST System::Word GL_VARIABLE_E_NV = System::Word(0x8527);
static _DELPHI_CONST System::Word GL_VARIABLE_F_NV = System::Word(0x8528);
static _DELPHI_CONST System::Word GL_VARIABLE_G_NV = System::Word(0x8529);
static _DELPHI_CONST System::Word GL_CONSTANT_COLOR0_NV = System::Word(0x852a);
static _DELPHI_CONST System::Word GL_CONSTANT_COLOR1_NV = System::Word(0x852b);
static _DELPHI_CONST System::Word GL_PRIMARY_COLOR_NV = System::Word(0x852c);
static _DELPHI_CONST System::Word GL_SECONDARY_COLOR_NV = System::Word(0x852d);
static _DELPHI_CONST System::Word GL_SPARE0_NV = System::Word(0x852e);
static _DELPHI_CONST System::Word GL_SPARE1_NV = System::Word(0x852f);
static _DELPHI_CONST System::Word GL_DISCARD_NV = System::Word(0x8530);
static _DELPHI_CONST System::Word GL_E_TIMES_F_NV = System::Word(0x8531);
static _DELPHI_CONST System::Word GL_SPARE0_PLUS_SECONDARY_COLOR_NV = System::Word(0x8532);
static _DELPHI_CONST System::Word GL_UNSIGNED_IDENTITY_NV = System::Word(0x8536);
static _DELPHI_CONST System::Word GL_UNSIGNED_INVERT_NV = System::Word(0x8537);
static _DELPHI_CONST System::Word GL_EXPAND_NORMAL_NV = System::Word(0x8538);
static _DELPHI_CONST System::Word GL_EXPAND_NEGATE_NV = System::Word(0x8539);
static _DELPHI_CONST System::Word GL_HALF_BIAS_NORMAL_NV = System::Word(0x853a);
static _DELPHI_CONST System::Word GL_HALF_BIAS_NEGATE_NV = System::Word(0x853b);
static _DELPHI_CONST System::Word GL_SIGNED_IDENTITY_NV = System::Word(0x853c);
static _DELPHI_CONST System::Word GL_SIGNED_NEGATE_NV = System::Word(0x853d);
static _DELPHI_CONST System::Word GL_SCALE_BY_TWO_NV = System::Word(0x853e);
static _DELPHI_CONST System::Word GL_SCALE_BY_FOUR_NV = System::Word(0x853f);
static _DELPHI_CONST System::Word GL_SCALE_BY_ONE_HALF_NV = System::Word(0x8540);
static _DELPHI_CONST System::Word GL_BIAS_BY_NEGATIVE_ONE_HALF_NV = System::Word(0x8541);
static _DELPHI_CONST System::Word GL_COMBINER_INPUT_NV = System::Word(0x8542);
static _DELPHI_CONST System::Word GL_COMBINER_MAPPING_NV = System::Word(0x8543);
static _DELPHI_CONST System::Word GL_COMBINER_COMPONENT_USAGE_NV = System::Word(0x8544);
static _DELPHI_CONST System::Word GL_COMBINER_AB_DOT_PRODUCT_NV = System::Word(0x8545);
static _DELPHI_CONST System::Word GL_COMBINER_CD_DOT_PRODUCT_NV = System::Word(0x8546);
static _DELPHI_CONST System::Word GL_COMBINER_MUX_SUM_NV = System::Word(0x8547);
static _DELPHI_CONST System::Word GL_COMBINER_SCALE_NV = System::Word(0x8548);
static _DELPHI_CONST System::Word GL_COMBINER_BIAS_NV = System::Word(0x8549);
static _DELPHI_CONST System::Word GL_COMBINER_AB_OUTPUT_NV = System::Word(0x854a);
static _DELPHI_CONST System::Word GL_COMBINER_CD_OUTPUT_NV = System::Word(0x854b);
static _DELPHI_CONST System::Word GL_COMBINER_SUM_OUTPUT_NV = System::Word(0x854c);
static _DELPHI_CONST System::Word GL_MAX_GENERAL_COMBINERS_NV = System::Word(0x854d);
static _DELPHI_CONST System::Word GL_NUM_GENERAL_COMBINERS_NV = System::Word(0x854e);
static _DELPHI_CONST System::Word GL_COLOR_SUM_CLAMP_NV = System::Word(0x854f);
static _DELPHI_CONST System::Word GL_COMBINER0_NV = System::Word(0x8550);
static _DELPHI_CONST System::Word GL_COMBINER1_NV = System::Word(0x8551);
static _DELPHI_CONST System::Word GL_COMBINER2_NV = System::Word(0x8552);
static _DELPHI_CONST System::Word GL_COMBINER3_NV = System::Word(0x8553);
static _DELPHI_CONST System::Word GL_COMBINER4_NV = System::Word(0x8554);
static _DELPHI_CONST System::Word GL_COMBINER5_NV = System::Word(0x8555);
static _DELPHI_CONST System::Word GL_COMBINER6_NV = System::Word(0x8556);
static _DELPHI_CONST System::Word GL_COMBINER7_NV = System::Word(0x8557);
static _DELPHI_CONST System::Word GL_PER_STAGE_CONSTANTS_NV = System::Word(0x8535);
static _DELPHI_CONST System::Word GL_EMBOSS_LIGHT_NV = System::Word(0x855d);
static _DELPHI_CONST System::Word GL_EMBOSS_CONSTANT_NV = System::Word(0x855e);
static _DELPHI_CONST System::Word GL_EMBOSS_MAP_NV = System::Word(0x855f);
static _DELPHI_CONST System::Word GL_NORMAL_MAP_NV = System::Word(0x8511);
static _DELPHI_CONST System::Word GL_REFLECTION_MAP_NV = System::Word(0x8512);
static _DELPHI_CONST System::Word GL_COMBINE4_NV = System::Word(0x8503);
static _DELPHI_CONST System::Word GL_SOURCE3_RGB_NV = System::Word(0x8583);
static _DELPHI_CONST System::Word GL_SOURCE3_ALPHA_NV = System::Word(0x858b);
static _DELPHI_CONST System::Word GL_OPERAND3_RGB_NV = System::Word(0x8593);
static _DELPHI_CONST System::Word GL_OPERAND3_ALPHA_NV = System::Word(0x859b);
static _DELPHI_CONST System::Word GL_TEXTURE_UNSIGNED_REMAP_MODE_NV = System::Word(0x888f);
static _DELPHI_CONST System::Word GL_TEXTURE_RECTANGLE_NV = System::Word(0x84f5);
static _DELPHI_CONST System::Word GL_TEXTURE_BINDING_RECTANGLE_NV = System::Word(0x84f6);
static _DELPHI_CONST System::Word GL_PROXY_TEXTURE_RECTANGLE_NV = System::Word(0x84f7);
static _DELPHI_CONST System::Word GL_MAX_RECTANGLE_TEXTURE_SIZE_NV = System::Word(0x84f8);
static _DELPHI_CONST System::Word GL_OFFSET_TEXTURE_RECTANGLE_NV = System::Word(0x864c);
static _DELPHI_CONST System::Word GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV = System::Word(0x864d);
static _DELPHI_CONST System::Word GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV = System::Word(0x864e);
static _DELPHI_CONST System::Word GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV = System::Word(0x86d9);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_S8_S8_8_8_NV = System::Word(0x86da);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_8_8_S8_S8_REV_NV = System::Word(0x86db);
static _DELPHI_CONST System::Word GL_DSDT_MAG_INTENSITY_NV = System::Word(0x86dc);
static _DELPHI_CONST System::Word GL_SHADER_CONSISTENT_NV = System::Word(0x86dd);
static _DELPHI_CONST System::Word GL_TEXTURE_SHADER_NV = System::Word(0x86de);
static _DELPHI_CONST System::Word GL_SHADER_OPERATION_NV = System::Word(0x86df);
static _DELPHI_CONST System::Word GL_CULL_MODES_NV = System::Word(0x86e0);
static _DELPHI_CONST System::Word GL_OFFSET_TEXTURE_MATRIX_NV = System::Word(0x86e1);
static _DELPHI_CONST System::Word GL_OFFSET_TEXTURE_SCALE_NV = System::Word(0x86e2);
static _DELPHI_CONST System::Word GL_OFFSET_TEXTURE_BIAS_NV = System::Word(0x86e3);
static _DELPHI_CONST System::Word GL_OFFSET_TEXTURE_2D_MATRIX_NV = System::Word(0x86e1);
static _DELPHI_CONST System::Word GL_OFFSET_TEXTURE_2D_SCALE_NV = System::Word(0x86e2);
static _DELPHI_CONST System::Word GL_OFFSET_TEXTURE_2D_BIAS_NV = System::Word(0x86e3);
static _DELPHI_CONST System::Word GL_PREVIOUS_TEXTURE_INPUT_NV = System::Word(0x86e4);
static _DELPHI_CONST System::Word GL_CONST_EYE_NV = System::Word(0x86e5);
static _DELPHI_CONST System::Word GL_PASS_THROUGH_NV = System::Word(0x86e6);
static _DELPHI_CONST System::Word GL_CULL_FRAGMENT_NV = System::Word(0x86e7);
static _DELPHI_CONST System::Word GL_OFFSET_TEXTURE_2D_NV = System::Word(0x86e8);
static _DELPHI_CONST System::Word GL_DEPENDENT_AR_TEXTURE_2D_NV = System::Word(0x86e9);
static _DELPHI_CONST System::Word GL_DEPENDENT_GB_TEXTURE_2D_NV = System::Word(0x86ea);
static _DELPHI_CONST System::Word GL_DOT_PRODUCT_NV = System::Word(0x86ec);
static _DELPHI_CONST System::Word GL_DOT_PRODUCT_DEPTH_REPLACE_NV = System::Word(0x86ed);
static _DELPHI_CONST System::Word GL_DOT_PRODUCT_TEXTURE_2D_NV = System::Word(0x86ee);
static _DELPHI_CONST System::Word GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV = System::Word(0x86f0);
static _DELPHI_CONST System::Word GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV = System::Word(0x86f1);
static _DELPHI_CONST System::Word GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV = System::Word(0x86f2);
static _DELPHI_CONST System::Word GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV = System::Word(0x86f3);
static _DELPHI_CONST System::Word GL_HILO_NV = System::Word(0x86f4);
static _DELPHI_CONST System::Word GL_DSDT_NV = System::Word(0x86f5);
static _DELPHI_CONST System::Word GL_DSDT_MAG_NV = System::Word(0x86f6);
static _DELPHI_CONST System::Word GL_DSDT_MAG_VIB_NV = System::Word(0x86f7);
static _DELPHI_CONST System::Word GL_HILO16_NV = System::Word(0x86f8);
static _DELPHI_CONST System::Word GL_SIGNED_HILO_NV = System::Word(0x86f9);
static _DELPHI_CONST System::Word GL_SIGNED_HILO16_NV = System::Word(0x86fa);
static _DELPHI_CONST System::Word GL_SIGNED_RGBA_NV = System::Word(0x86fb);
static _DELPHI_CONST System::Word GL_SIGNED_RGBA8_NV = System::Word(0x86fc);
static _DELPHI_CONST System::Word GL_SIGNED_RGB_NV = System::Word(0x86fe);
static _DELPHI_CONST System::Word GL_SIGNED_RGB8_NV = System::Word(0x86ff);
static _DELPHI_CONST System::Word GL_SIGNED_LUMINANCE_NV = System::Word(0x8701);
static _DELPHI_CONST System::Word GL_SIGNED_LUMINANCE8_NV = System::Word(0x8702);
static _DELPHI_CONST System::Word GL_SIGNED_LUMINANCE_ALPHA_NV = System::Word(0x8703);
static _DELPHI_CONST System::Word GL_SIGNED_LUMINANCE8_ALPHA8_NV = System::Word(0x8704);
static _DELPHI_CONST System::Word GL_SIGNED_ALPHA_NV = System::Word(0x8705);
static _DELPHI_CONST System::Word GL_SIGNED_ALPHA8_NV = System::Word(0x8706);
static _DELPHI_CONST System::Word GL_SIGNED_INTENSITY_NV = System::Word(0x8707);
static _DELPHI_CONST System::Word GL_SIGNED_INTENSITY8_NV = System::Word(0x8708);
static _DELPHI_CONST System::Word GL_DSDT8_NV = System::Word(0x8709);
static _DELPHI_CONST System::Word GL_DSDT8_MAG8_NV = System::Word(0x870a);
static _DELPHI_CONST System::Word GL_DSDT8_MAG8_INTENSITY8_NV = System::Word(0x870b);
static _DELPHI_CONST System::Word GL_SIGNED_RGB_UNSIGNED_ALPHA_NV = System::Word(0x870c);
static _DELPHI_CONST System::Word GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV = System::Word(0x870d);
static _DELPHI_CONST System::Word GL_HI_SCALE_NV = System::Word(0x870e);
static _DELPHI_CONST System::Word GL_LO_SCALE_NV = System::Word(0x870f);
static _DELPHI_CONST System::Word GL_DS_SCALE_NV = System::Word(0x8710);
static _DELPHI_CONST System::Word GL_DT_SCALE_NV = System::Word(0x8711);
static _DELPHI_CONST System::Word GL_MAGNITUDE_SCALE_NV = System::Word(0x8712);
static _DELPHI_CONST System::Word GL_VIBRANCE_SCALE_NV = System::Word(0x8713);
static _DELPHI_CONST System::Word GL_HI_BIAS_NV = System::Word(0x8714);
static _DELPHI_CONST System::Word GL_LO_BIAS_NV = System::Word(0x8715);
static _DELPHI_CONST System::Word GL_DS_BIAS_NV = System::Word(0x8716);
static _DELPHI_CONST System::Word GL_DT_BIAS_NV = System::Word(0x8717);
static _DELPHI_CONST System::Word GL_MAGNITUDE_BIAS_NV = System::Word(0x8718);
static _DELPHI_CONST System::Word GL_VIBRANCE_BIAS_NV = System::Word(0x8719);
static _DELPHI_CONST System::Word GL_TEXTURE_BORDER_VALUES_NV = System::Word(0x871a);
static _DELPHI_CONST System::Word GL_TEXTURE_HI_SIZE_NV = System::Word(0x871b);
static _DELPHI_CONST System::Word GL_TEXTURE_LO_SIZE_NV = System::Word(0x871c);
static _DELPHI_CONST System::Word GL_TEXTURE_DS_SIZE_NV = System::Word(0x871d);
static _DELPHI_CONST System::Word GL_TEXTURE_DT_SIZE_NV = System::Word(0x871e);
static _DELPHI_CONST System::Word GL_TEXTURE_MAG_SIZE_NV = System::Word(0x871f);
static _DELPHI_CONST System::Word GL_DOT_PRODUCT_TEXTURE_3D_NV = System::Word(0x86ef);
static _DELPHI_CONST System::Word GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV = System::Word(0x8850);
static _DELPHI_CONST System::Word GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV = System::Word(0x8851);
static _DELPHI_CONST System::Word GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV = System::Word(0x8852);
static _DELPHI_CONST System::Word GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV = System::Word(0x8853);
static _DELPHI_CONST System::Word GL_OFFSET_HILO_TEXTURE_2D_NV = System::Word(0x8854);
static _DELPHI_CONST System::Word GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV = System::Word(0x8855);
static _DELPHI_CONST System::Word GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV = System::Word(0x8856);
static _DELPHI_CONST System::Word GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV = System::Word(0x8857);
static _DELPHI_CONST System::Word GL_DEPENDENT_HILO_TEXTURE_2D_NV = System::Word(0x8858);
static _DELPHI_CONST System::Word GL_DEPENDENT_RGB_TEXTURE_3D_NV = System::Word(0x8859);
static _DELPHI_CONST System::Word GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV = System::Word(0x885a);
static _DELPHI_CONST System::Word GL_DOT_PRODUCT_PASS_THROUGH_NV = System::Word(0x885b);
static _DELPHI_CONST System::Word GL_DOT_PRODUCT_TEXTURE_1D_NV = System::Word(0x885c);
static _DELPHI_CONST System::Word GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV = System::Word(0x885d);
static _DELPHI_CONST System::Word GL_HILO8_NV = System::Word(0x885e);
static _DELPHI_CONST System::Word GL_SIGNED_HILO8_NV = System::Word(0x885f);
static _DELPHI_CONST System::Word GL_FORCE_BLUE_TO_ONE_NV = System::Word(0x8860);
static _DELPHI_CONST System::Word GL_VERTEX_ARRAY_RANGE_NV = System::Word(0x851d);
static _DELPHI_CONST System::Word GL_VERTEX_ARRAY_RANGE_LENGTH_NV = System::Word(0x851e);
static _DELPHI_CONST System::Word GL_VERTEX_ARRAY_RANGE_VALID_NV = System::Word(0x851f);
static _DELPHI_CONST System::Word GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV = System::Word(0x8520);
static _DELPHI_CONST System::Word GL_VERTEX_ARRAY_RANGE_POINTER_NV = System::Word(0x8521);
static _DELPHI_CONST System::Word GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV = System::Word(0x8533);
static _DELPHI_CONST System::Word GL_VERTEX_PROGRAM_NV = System::Word(0x8620);
static _DELPHI_CONST System::Word GL_VERTEX_STATE_PROGRAM_NV = System::Word(0x8621);
static _DELPHI_CONST System::Word GL_ATTRIB_ARRAY_SIZE_NV = System::Word(0x8623);
static _DELPHI_CONST System::Word GL_ATTRIB_ARRAY_STRIDE_NV = System::Word(0x8624);
static _DELPHI_CONST System::Word GL_ATTRIB_ARRAY_TYPE_NV = System::Word(0x8625);
static _DELPHI_CONST System::Word GL_CURRENT_ATTRIB_NV = System::Word(0x8626);
static _DELPHI_CONST System::Word GL_PROGRAM_LENGTH_NV = System::Word(0x8627);
static _DELPHI_CONST System::Word GL_PROGRAM_STRING_NV = System::Word(0x8628);
static _DELPHI_CONST System::Word GL_MODELVIEW_PROJECTION_NV = System::Word(0x8629);
static _DELPHI_CONST System::Word GL_IDENTITY_NV = System::Word(0x862a);
static _DELPHI_CONST System::Word GL_INVERSE_NV = System::Word(0x862b);
static _DELPHI_CONST System::Word GL_TRANSPOSE_NV = System::Word(0x862c);
static _DELPHI_CONST System::Word GL_INVERSE_TRANSPOSE_NV = System::Word(0x862d);
static _DELPHI_CONST System::Word GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV = System::Word(0x862e);
static _DELPHI_CONST System::Word GL_MAX_TRACK_MATRICES_NV = System::Word(0x862f);
static _DELPHI_CONST System::Word GL_MATRIX0_NV = System::Word(0x8630);
static _DELPHI_CONST System::Word GL_MATRIX1_NV = System::Word(0x8631);
static _DELPHI_CONST System::Word GL_MATRIX2_NV = System::Word(0x8632);
static _DELPHI_CONST System::Word GL_MATRIX3_NV = System::Word(0x8633);
static _DELPHI_CONST System::Word GL_MATRIX4_NV = System::Word(0x8634);
static _DELPHI_CONST System::Word GL_MATRIX5_NV = System::Word(0x8635);
static _DELPHI_CONST System::Word GL_MATRIX6_NV = System::Word(0x8636);
static _DELPHI_CONST System::Word GL_MATRIX7_NV = System::Word(0x8637);
static _DELPHI_CONST System::Word GL_CURRENT_MATRIX_STACK_DEPTH_NV = System::Word(0x8640);
static _DELPHI_CONST System::Word GL_CURRENT_MATRIX_NV = System::Word(0x8641);
static _DELPHI_CONST System::Word GL_VERTEX_PROGRAM_POINT_SIZE_NV = System::Word(0x8642);
static _DELPHI_CONST System::Word GL_VERTEX_PROGRAM_TWO_SIDE_NV = System::Word(0x8643);
static _DELPHI_CONST System::Word GL_PROGRAM_PARAMETER_NV = System::Word(0x8644);
static _DELPHI_CONST System::Word GL_ATTRIB_ARRAY_POINTER_NV = System::Word(0x8645);
static _DELPHI_CONST System::Word GL_PROGRAM_TARGET_NV = System::Word(0x8646);
static _DELPHI_CONST System::Word GL_PROGRAM_RESIDENT_NV = System::Word(0x8647);
static _DELPHI_CONST System::Word GL_TRACK_MATRIX_NV = System::Word(0x8648);
static _DELPHI_CONST System::Word GL_TRACK_MATRIX_TRANSFORM_NV = System::Word(0x8649);
static _DELPHI_CONST System::Word GL_VERTEX_PROGRAM_BINDING_NV = System::Word(0x864a);
static _DELPHI_CONST System::Word GL_PROGRAM_ERROR_POSITION_NV = System::Word(0x864b);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_ARRAY0_NV = System::Word(0x8650);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_ARRAY1_NV = System::Word(0x8651);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_ARRAY2_NV = System::Word(0x8652);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_ARRAY3_NV = System::Word(0x8653);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_ARRAY4_NV = System::Word(0x8654);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_ARRAY5_NV = System::Word(0x8655);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_ARRAY6_NV = System::Word(0x8656);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_ARRAY7_NV = System::Word(0x8657);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_ARRAY8_NV = System::Word(0x8658);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_ARRAY9_NV = System::Word(0x8659);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_ARRAY10_NV = System::Word(0x865a);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_ARRAY11_NV = System::Word(0x865b);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_ARRAY12_NV = System::Word(0x865c);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_ARRAY13_NV = System::Word(0x865d);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_ARRAY14_NV = System::Word(0x865e);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_ARRAY15_NV = System::Word(0x865f);
static _DELPHI_CONST System::Word GL_MAP1_VERTEX_ATTRIB0_4_NV = System::Word(0x8660);
static _DELPHI_CONST System::Word GL_MAP1_VERTEX_ATTRIB1_4_NV = System::Word(0x8661);
static _DELPHI_CONST System::Word GL_MAP1_VERTEX_ATTRIB2_4_NV = System::Word(0x8662);
static _DELPHI_CONST System::Word GL_MAP1_VERTEX_ATTRIB3_4_NV = System::Word(0x8663);
static _DELPHI_CONST System::Word GL_MAP1_VERTEX_ATTRIB4_4_NV = System::Word(0x8664);
static _DELPHI_CONST System::Word GL_MAP1_VERTEX_ATTRIB5_4_NV = System::Word(0x8665);
static _DELPHI_CONST System::Word GL_MAP1_VERTEX_ATTRIB6_4_NV = System::Word(0x8666);
static _DELPHI_CONST System::Word GL_MAP1_VERTEX_ATTRIB7_4_NV = System::Word(0x8667);
static _DELPHI_CONST System::Word GL_MAP1_VERTEX_ATTRIB8_4_NV = System::Word(0x8668);
static _DELPHI_CONST System::Word GL_MAP1_VERTEX_ATTRIB9_4_NV = System::Word(0x8669);
static _DELPHI_CONST System::Word GL_MAP1_VERTEX_ATTRIB10_4_NV = System::Word(0x866a);
static _DELPHI_CONST System::Word GL_MAP1_VERTEX_ATTRIB11_4_NV = System::Word(0x866b);
static _DELPHI_CONST System::Word GL_MAP1_VERTEX_ATTRIB12_4_NV = System::Word(0x866c);
static _DELPHI_CONST System::Word GL_MAP1_VERTEX_ATTRIB13_4_NV = System::Word(0x866d);
static _DELPHI_CONST System::Word GL_MAP1_VERTEX_ATTRIB14_4_NV = System::Word(0x866e);
static _DELPHI_CONST System::Word GL_MAP1_VERTEX_ATTRIB15_4_NV = System::Word(0x866f);
static _DELPHI_CONST System::Word GL_MAP2_VERTEX_ATTRIB0_4_NV = System::Word(0x8670);
static _DELPHI_CONST System::Word GL_MAP2_VERTEX_ATTRIB1_4_NV = System::Word(0x8671);
static _DELPHI_CONST System::Word GL_MAP2_VERTEX_ATTRIB2_4_NV = System::Word(0x8672);
static _DELPHI_CONST System::Word GL_MAP2_VERTEX_ATTRIB3_4_NV = System::Word(0x8673);
static _DELPHI_CONST System::Word GL_MAP2_VERTEX_ATTRIB4_4_NV = System::Word(0x8674);
static _DELPHI_CONST System::Word GL_MAP2_VERTEX_ATTRIB5_4_NV = System::Word(0x8675);
static _DELPHI_CONST System::Word GL_MAP2_VERTEX_ATTRIB6_4_NV = System::Word(0x8676);
static _DELPHI_CONST System::Word GL_MAP2_VERTEX_ATTRIB7_4_NV = System::Word(0x8677);
static _DELPHI_CONST System::Word GL_MAP2_VERTEX_ATTRIB8_4_NV = System::Word(0x8678);
static _DELPHI_CONST System::Word GL_MAP2_VERTEX_ATTRIB9_4_NV = System::Word(0x8679);
static _DELPHI_CONST System::Word GL_MAP2_VERTEX_ATTRIB10_4_NV = System::Word(0x867a);
static _DELPHI_CONST System::Word GL_MAP2_VERTEX_ATTRIB11_4_NV = System::Word(0x867b);
static _DELPHI_CONST System::Word GL_MAP2_VERTEX_ATTRIB12_4_NV = System::Word(0x867c);
static _DELPHI_CONST System::Word GL_MAP2_VERTEX_ATTRIB13_4_NV = System::Word(0x867d);
static _DELPHI_CONST System::Word GL_MAP2_VERTEX_ATTRIB14_4_NV = System::Word(0x867e);
static _DELPHI_CONST System::Word GL_MAP2_VERTEX_ATTRIB15_4_NV = System::Word(0x867f);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV = System::Word(0x88f4);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_CALL_DEPTH_NV = System::Word(0x88f5);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_IF_DEPTH_NV = System::Word(0x88f6);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_LOOP_DEPTH_NV = System::Word(0x88f7);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_LOOP_COUNT_NV = System::Word(0x88f8);
static _DELPHI_CONST System::Word MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB = System::Word(0x8b4c);
static _DELPHI_CONST System::Word GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV = System::Word(0x8dad);
static _DELPHI_CONST System::Word GL_DEPTH_BUFFER_FLOAT_MODE_NV = System::Word(0x8daf);
static _DELPHI_CONST System::Word GL_RENDERBUFFER_COVERAGE_SAMPLES_NV = System::Word(0x8cab);
static _DELPHI_CONST System::Word GL_RENDERBUFFER_COLOR_SAMPLES_NV = System::Word(0x8e10);
static _DELPHI_CONST System::Word GL_GEOMETRY_PROGRAM_NV = System::Word(0x8c26);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_OUTPUT_VERTICES_NV = System::Word(0x8c27);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV = System::Word(0x8c28);
static _DELPHI_CONST System::Word GL_PROGRAM_ATTRIB_COMPONENTS_NV = System::Word(0x8906);
static _DELPHI_CONST System::Word GL_PROGRAM_RESULT_COMPONENTS_NV = System::Word(0x8907);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV = System::Word(0x8908);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_RESULT_COMPONENTS_NV = System::Word(0x8909);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV = System::Word(0x8da5);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_GENERIC_RESULTS_NV = System::Word(0x8da6);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV = System::Word(0x8da0);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV = System::Word(0x8da1);
static _DELPHI_CONST System::Word GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV = System::Word(0x8da2);
static _DELPHI_CONST System::Word GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV = System::Word(0x8da3);
static _DELPHI_CONST System::Word GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV = System::Word(0x8da4);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_BUFFER_NV = System::Word(0x8c8e);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_BUFFER_START_NV = System::Word(0x8c84);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV = System::Word(0x8c85);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_RECORD_NV = System::Word(0x8c86);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV = System::Word(0x8c8f);
static _DELPHI_CONST System::Word GL_INTERLEAVED_ATTRIBS_NV = System::Word(0x8c8c);
static _DELPHI_CONST System::Word GL_SEPARATE_ATTRIBS_NV = System::Word(0x8c8d);
static _DELPHI_CONST System::Word GL_PRIMITIVES_GENERATED_NV = System::Word(0x8c87);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV = System::Word(0x8c88);
static _DELPHI_CONST System::Word GL_RASTERIZER_DISCARD_NV = System::Word(0x8c89);
static _DELPHI_CONST System::Word GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV = System::Word(0x8c8a);
static _DELPHI_CONST System::Word GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV = System::Word(0x8c8b);
static _DELPHI_CONST System::Word GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV = System::Word(0x8c80);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_ATTRIBS_NV = System::Word(0x8c7e);
static _DELPHI_CONST System::Word GL_ACTIVE_VARYINGS_NV = System::Word(0x8c81);
static _DELPHI_CONST System::Word GL_ACTIVE_VARYING_MAX_LENGTH_NV = System::Word(0x8c82);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_VARYINGS_NV = System::Word(0x8c83);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV = System::Word(0x8c7f);
static _DELPHI_CONST System::Word GL_BACK_PRIMARY_COLOR_NV = System::Word(0x8c77);
static _DELPHI_CONST System::Word GL_BACK_SECONDARY_COLOR_NV = System::Word(0x8c78);
static _DELPHI_CONST System::Word GL_TEXTURE_COORD_NV = System::Word(0x8c79);
static _DELPHI_CONST System::Word GL_CLIP_DISTANCE_NV = System::Word(0x8c7a);
static _DELPHI_CONST System::Word GL_VERTEX_ID_NV = System::Word(0x8c7b);
static _DELPHI_CONST System::Word GL_PRIMITIVE_ID_NV = System::Word(0x8c7c);
static _DELPHI_CONST System::Word GL_GENERIC_ATTRIB_NV = System::Word(0x8c7d);
static _DELPHI_CONST System::Word GL_LAYER_NV = System::Word(0x8daa);
static _DELPHI_CONST System::Int8 GL_NEXT_BUFFER_NV = System::Int8(-2);
static _DELPHI_CONST System::Int8 GL_SKIP_COMPONENTS4_NV = System::Int8(-3);
static _DELPHI_CONST System::Int8 GL_SKIP_COMPONENTS3_NV = System::Int8(-4);
static _DELPHI_CONST System::Int8 GL_SKIP_COMPONENTS2_NV = System::Int8(-5);
static _DELPHI_CONST System::Int8 GL_SKIP_COMPONENTS1_NV = System::Int8(-6);
static _DELPHI_CONST System::Word GL_QUERY_WAIT_NV = System::Word(0x8e13);
static _DELPHI_CONST System::Word GL_QUERY_NO_WAIT_NV = System::Word(0x8e14);
static _DELPHI_CONST System::Word GL_QUERY_BY_REGION_WAIT_NV = System::Word(0x8e15);
static _DELPHI_CONST System::Word GL_QUERY_BY_REGION_NO_WAIT_NV = System::Word(0x8e16);
static _DELPHI_CONST System::Word GL_CONSERVATIVE_RASTERIZATION_NV = System::Word(0x9346);
static _DELPHI_CONST System::Word GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV = System::Word(0x9347);
static _DELPHI_CONST System::Word GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV = System::Word(0x9348);
static _DELPHI_CONST System::Word GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV = System::Word(0x9349);
static _DELPHI_CONST System::Word GL_CONSERVATIVE_RASTER_DILATE_NV = System::Word(0x9379);
static _DELPHI_CONST System::Word GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV = System::Word(0x937a);
static _DELPHI_CONST System::Word GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV = System::Word(0x937b);
static _DELPHI_CONST System::Word GL_FRAME_NV = System::Word(0x8e26);
static _DELPHI_CONST System::Word GL_FIELDS_NV = System::Word(0x8e27);
static _DELPHI_CONST System::Word GL_CURRENT_TIME_NV = System::Word(0x8e28);
static _DELPHI_CONST System::Word GL_NUM_FILL_STREAMS_NV = System::Word(0x8e29);
static _DELPHI_CONST System::Word GL_PRESENT_TIME_NV = System::Word(0x8e2a);
static _DELPHI_CONST System::Word GL_PRESENT_DURATION_NV = System::Word(0x8e2b);
static _DELPHI_CONST System::Word GL_SAMPLE_POSITION_NV = System::Word(0x8e50);
static _DELPHI_CONST System::Word GL_SAMPLE_MASK_NV = System::Word(0x8e51);
static _DELPHI_CONST System::Word GL_SAMPLE_MASK_VALUE_NV = System::Word(0x8e52);
static _DELPHI_CONST System::Word GL_TEXTURE_BINDING_RENDERBUFFER_NV = System::Word(0x8e53);
static _DELPHI_CONST System::Word GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV = System::Word(0x8e54);
static _DELPHI_CONST System::Word GL_TEXTURE_RENDERBUFFER_NV = System::Word(0x8e55);
static _DELPHI_CONST System::Word GL_SAMPLER_RENDERBUFFER_NV = System::Word(0x8e56);
static _DELPHI_CONST System::Word GL_INT_SAMPLER_RENDERBUFFER_NV = System::Word(0x8e57);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV = System::Word(0x8e58);
static _DELPHI_CONST System::Word GL_MAX_SAMPLE_MASK_WORDS_NV = System::Word(0x8e59);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_NV = System::Word(0x8e22);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV = System::Word(0x8e23);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV = System::Word(0x8e24);
static _DELPHI_CONST System::Word GL_TRANSFORM_FEEDBACK_BINDING_NV = System::Word(0x8e25);
static _DELPHI_CONST System::Word GL_VIDEO_BUFFER_NV = System::Word(0x9020);
static _DELPHI_CONST System::Word GL_VIDEO_BUFFER_BINDING_NV = System::Word(0x9021);
static _DELPHI_CONST System::Word GL_FIELD_UPPER_NV = System::Word(0x9022);
static _DELPHI_CONST System::Word GL_FIELD_LOWER_NV = System::Word(0x9023);
static _DELPHI_CONST System::Word GL_NUM_VIDEO_CAPTURE_STREAMS_NV = System::Word(0x9024);
static _DELPHI_CONST System::Word GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV = System::Word(0x9025);
static _DELPHI_CONST System::Word GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV = System::Word(0x9026);
static _DELPHI_CONST System::Word GL_LAST_VIDEO_CAPTURE_STATUS_NV = System::Word(0x9027);
static _DELPHI_CONST System::Word GL_VIDEO_BUFFER_PITCH_NV = System::Word(0x9028);
static _DELPHI_CONST System::Word GL_VIDEO_COLOR_CONVERSION_MATRIX_NV = System::Word(0x9029);
static _DELPHI_CONST System::Word GL_VIDEO_COLOR_CONVERSION_MAX_NV = System::Word(0x902a);
static _DELPHI_CONST System::Word GL_VIDEO_COLOR_CONVERSION_MIN_NV = System::Word(0x902b);
static _DELPHI_CONST System::Word GL_VIDEO_COLOR_CONVERSION_OFFSET_NV = System::Word(0x902c);
static _DELPHI_CONST System::Word GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV = System::Word(0x902d);
static _DELPHI_CONST System::Word GL_PARTIAL_SUCCESS_NV = System::Word(0x902e);
static _DELPHI_CONST System::Word GL_SUCCESS_NV = System::Word(0x902f);
static _DELPHI_CONST System::Word GL_FAILURE_NV = System::Word(0x9030);
static _DELPHI_CONST System::Word GL_YCBYCR8_422_NV = System::Word(0x9031);
static _DELPHI_CONST System::Word GL_YCBAYCR8A_4224_NV = System::Word(0x9032);
static _DELPHI_CONST System::Word GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV = System::Word(0x9033);
static _DELPHI_CONST System::Word GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV = System::Word(0x9034);
static _DELPHI_CONST System::Word GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV = System::Word(0x9035);
static _DELPHI_CONST System::Word GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV = System::Word(0x9036);
static _DELPHI_CONST System::Word GL_Z4Y12Z4CB12Z4CR12_444_NV = System::Word(0x9037);
static _DELPHI_CONST System::Word GL_VIDEO_CAPTURE_FRAME_WIDTH_NV = System::Word(0x9038);
static _DELPHI_CONST System::Word GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV = System::Word(0x9039);
static _DELPHI_CONST System::Word GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV = System::Word(0x903a);
static _DELPHI_CONST System::Word GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV = System::Word(0x903b);
static _DELPHI_CONST System::Word GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV = System::Word(0x903c);
static _DELPHI_CONST System::Word GL_BUFFER_GPU_ADDRESS_NV = System::Word(0x8f1d);
static _DELPHI_CONST System::Word GL_GPU_ADDRESS_NV = System::Word(0x8f34);
static _DELPHI_CONST System::Word GL_MAX_SHADER_BUFFER_ADDRESS_NV = System::Word(0x8f35);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV = System::Word(0x8f1e);
static _DELPHI_CONST System::Word GL_ELEMENT_ARRAY_UNIFIED_NV = System::Word(0x8f1f);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV = System::Word(0x8f20);
static _DELPHI_CONST System::Word GL_VERTEX_ARRAY_ADDRESS_NV = System::Word(0x8f21);
static _DELPHI_CONST System::Word GL_NORMAL_ARRAY_ADDRESS_NV = System::Word(0x8f22);
static _DELPHI_CONST System::Word GL_COLOR_ARRAY_ADDRESS_NV = System::Word(0x8f23);
static _DELPHI_CONST System::Word GL_INDEX_ARRAY_ADDRESS_NV = System::Word(0x8f24);
static _DELPHI_CONST System::Word GL_TEXTURE_COORD_ARRAY_ADDRESS_NV = System::Word(0x8f25);
static _DELPHI_CONST System::Word GL_EDGE_FLAG_ARRAY_ADDRESS_NV = System::Word(0x8f26);
static _DELPHI_CONST System::Word GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV = System::Word(0x8f27);
static _DELPHI_CONST System::Word GL_FOG_COORD_ARRAY_ADDRESS_NV = System::Word(0x8f28);
static _DELPHI_CONST System::Word GL_ELEMENT_ARRAY_ADDRESS_NV = System::Word(0x8f29);
static _DELPHI_CONST System::Word GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV = System::Word(0x8f2a);
static _DELPHI_CONST System::Word GL_VERTEX_ARRAY_LENGTH_NV = System::Word(0x8f2b);
static _DELPHI_CONST System::Word GL_NORMAL_ARRAY_LENGTH_NV = System::Word(0x8f2c);
static _DELPHI_CONST System::Word GL_COLOR_ARRAY_LENGTH_NV = System::Word(0x8f2d);
static _DELPHI_CONST System::Word GL_INDEX_ARRAY_LENGTH_NV = System::Word(0x8f2e);
static _DELPHI_CONST System::Word GL_TEXTURE_COORD_ARRAY_LENGTH_NV = System::Word(0x8f2f);
static _DELPHI_CONST System::Word GL_EDGE_FLAG_ARRAY_LENGTH_NV = System::Word(0x8f30);
static _DELPHI_CONST System::Word GL_SECONDARY_COLOR_ARRAY_LENGTH_NV = System::Word(0x8f31);
static _DELPHI_CONST System::Word GL_FOG_COORD_ARRAY_LENGTH_NV = System::Word(0x8f32);
static _DELPHI_CONST System::Word GL_ELEMENT_ARRAY_LENGTH_NV = System::Word(0x8f33);
static _DELPHI_CONST System::Word GL_DRAW_INDIRECT_UNIFIED_NV = System::Word(0x8f40);
static _DELPHI_CONST System::Word GL_DRAW_INDIRECT_ADDRESS_NV = System::Word(0x8f41);
static _DELPHI_CONST System::Word GL_DRAW_INDIRECT_LENGTH_NV = System::Word(0x8f42);
static _DELPHI_CONST System::Word GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV = System::Word(0x8e5a);
static _DELPHI_CONST System::Word GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV = System::Word(0x8e5b);
static _DELPHI_CONST System::Word GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV = System::Word(0x8e5c);
static _DELPHI_CONST System::Word GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV = System::Word(0x8e5d);
static _DELPHI_CONST System::Word GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV = System::Word(0x8e5e);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV = System::Word(0x8e5f);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV = System::Word(0x8f44);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_SUBROUTINE_NUM_NV = System::Word(0x8f45);
static _DELPHI_CONST System::Word GL_INT64_NV = System::Word(0x140e);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT64_NV = System::Word(0x140f);
static _DELPHI_CONST System::Word GL_INT8_NV = System::Word(0x8fe0);
static _DELPHI_CONST System::Word GL_INT8_VEC2_NV = System::Word(0x8fe1);
static _DELPHI_CONST System::Word GL_INT8_VEC3_NV = System::Word(0x8fe2);
static _DELPHI_CONST System::Word GL_INT8_VEC4_NV = System::Word(0x8fe3);
static _DELPHI_CONST System::Word GL_INT16_NV = System::Word(0x8fe4);
static _DELPHI_CONST System::Word GL_INT16_VEC2_NV = System::Word(0x8fe5);
static _DELPHI_CONST System::Word GL_INT16_VEC3_NV = System::Word(0x8fe6);
static _DELPHI_CONST System::Word GL_INT16_VEC4_NV = System::Word(0x8fe7);
static _DELPHI_CONST System::Word GL_INT64_VEC2_NV = System::Word(0x8fe9);
static _DELPHI_CONST System::Word GL_INT64_VEC3_NV = System::Word(0x8fea);
static _DELPHI_CONST System::Word GL_INT64_VEC4_NV = System::Word(0x8feb);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT8_NV = System::Word(0x8fec);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT8_VEC2_NV = System::Word(0x8fed);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT8_VEC3_NV = System::Word(0x8fee);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT8_VEC4_NV = System::Word(0x8fef);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT16_NV = System::Word(0x8ff0);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT16_VEC2_NV = System::Word(0x8ff1);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT16_VEC3_NV = System::Word(0x8ff2);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT16_VEC4_NV = System::Word(0x8ff3);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT64_VEC2_NV = System::Word(0x8ff5);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT64_VEC3_NV = System::Word(0x8ff6);
static _DELPHI_CONST System::Word GL_UNSIGNED_INT64_VEC4_NV = System::Word(0x8ff7);
static _DELPHI_CONST System::Word GL_FLOAT16_NV = System::Word(0x8ff8);
static _DELPHI_CONST System::Word GL_FLOAT16_VEC2_NV = System::Word(0x8ff9);
static _DELPHI_CONST System::Word GL_FLOAT16_VEC3_NV = System::Word(0x8ffa);
static _DELPHI_CONST System::Word GL_FLOAT16_VEC4_NV = System::Word(0x8ffb);
static _DELPHI_CONST System::Int8 GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV = System::Int8(0x10);
static _DELPHI_CONST System::Word GL_MAX_PROGRAM_PATCH_ATTRIBS_NV = System::Word(0x86d8);
static _DELPHI_CONST System::Word GL_TESS_CONTROL_PROGRAM_NV = System::Word(0x891e);
static _DELPHI_CONST System::Word GL_TESS_EVALUATION_PROGRAM_NV = System::Word(0x891f);
static _DELPHI_CONST System::Word GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV = System::Word(0x8c74);
static _DELPHI_CONST System::Word GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV = System::Word(0x8c75);
static _DELPHI_CONST System::Word GL_COVERAGE_SAMPLES_NV = System::Word(0x80a9);
static _DELPHI_CONST System::Word GL_COLOR_SAMPLES_NV = System::Word(0x8e20);
static _DELPHI_CONST System::Word GL_SURFACE_STATE_NV = System::Word(0x86eb);
static _DELPHI_CONST System::Word GL_SURFACE_REGISTERED_NV = System::Word(0x86fd);
static _DELPHI_CONST System::Word GL_SURFACE_MAPPED_NV = System::Word(0x8700);
static _DELPHI_CONST System::Word GL_WRITE_DISCARD_NV = System::Word(0x88be);
static _DELPHI_CONST System::Word GL_INTERLACE_OML = System::Word(0x8980);
static _DELPHI_CONST System::Word GL_INTERLACE_READ_OML = System::Word(0x8981);
static _DELPHI_CONST System::Word GL_PACK_RESAMPLE_OML = System::Word(0x8984);
static _DELPHI_CONST System::Word GL_UNPACK_RESAMPLE_OML = System::Word(0x8985);
static _DELPHI_CONST System::Word GL_RESAMPLE_REPLICATE_OML = System::Word(0x8986);
static _DELPHI_CONST System::Word GL_RESAMPLE_ZERO_FILL_OML = System::Word(0x8987);
static _DELPHI_CONST System::Word GL_RESAMPLE_AVERAGE_OML = System::Word(0x8988);
static _DELPHI_CONST System::Word GL_RESAMPLE_DECIMATE_OML = System::Word(0x8989);
static _DELPHI_CONST System::Word GL_FORMAT_SUBSAMPLE_24_24_OML = System::Word(0x8982);
static _DELPHI_CONST System::Word GL_FORMAT_SUBSAMPLE_244_244_OML = System::Word(0x8983);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR = System::Word(0x9630);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR = System::Word(0x9632);
static _DELPHI_CONST System::Word GL_MAX_VIEWS_OVR = System::Word(0x9631);
static _DELPHI_CONST System::Word GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR = System::Word(0x9633);
static _DELPHI_CONST int GL_PREFER_DOUBLEBUFFER_HINT_PGI = int(0x1a1f8);
static _DELPHI_CONST int GL_CONSERVE_MEMORY_HINT_PGI = int(0x1a1fd);
static _DELPHI_CONST int GL_RECLAIM_MEMORY_HINT_PGI = int(0x1a1fe);
static _DELPHI_CONST int GL_NATIVE_GRAPHICS_HANDLE_PGI = int(0x1a202);
static _DELPHI_CONST int GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI = int(0x1a203);
static _DELPHI_CONST int GL_NATIVE_GRAPHICS_END_HINT_PGI = int(0x1a204);
static _DELPHI_CONST int GL_ALWAYS_FAST_HINT_PGI = int(0x1a20c);
static _DELPHI_CONST int GL_ALWAYS_SOFT_HINT_PGI = int(0x1a20d);
static _DELPHI_CONST int GL_ALLOW_DRAW_OBJ_HINT_PGI = int(0x1a20e);
static _DELPHI_CONST int GL_ALLOW_DRAW_WIN_HINT_PGI = int(0x1a20f);
static _DELPHI_CONST int GL_ALLOW_DRAW_FRG_HINT_PGI = int(0x1a210);
static _DELPHI_CONST int GL_ALLOW_DRAW_MEM_HINT_PGI = int(0x1a211);
static _DELPHI_CONST int GL_STRICT_DEPTHFUNC_HINT_PGI = int(0x1a216);
static _DELPHI_CONST int GL_STRICT_LIGHTING_HINT_PGI = int(0x1a217);
static _DELPHI_CONST int GL_STRICT_SCISSOR_HINT_PGI = int(0x1a218);
static _DELPHI_CONST int GL_FULL_STIPPLE_HINT_PGI = int(0x1a219);
static _DELPHI_CONST int GL_CLIP_NEAR_HINT_PGI = int(0x1a220);
static _DELPHI_CONST int GL_CLIP_FAR_HINT_PGI = int(0x1a221);
static _DELPHI_CONST int GL_WIDE_LINE_HINT_PGI = int(0x1a222);
static _DELPHI_CONST int GL_BACK_NORMALS_HINT_PGI = int(0x1a223);
static _DELPHI_CONST int GL_VERTEX_DATA_HINT_PGI = int(0x1a22a);
static _DELPHI_CONST int GL_VERTEX_CONSISTENT_HINT_PGI = int(0x1a22b);
static _DELPHI_CONST int GL_MATERIAL_SIDE_HINT_PGI = int(0x1a22c);
static _DELPHI_CONST int GL_MAX_VERTEX_HINT_PGI = int(0x1a22d);
static _DELPHI_CONST int GL_COLOR3_BIT_PGI = int(0x10000);
static _DELPHI_CONST int GL_COLOR4_BIT_PGI = int(0x20000);
static _DELPHI_CONST int GL_EDGEFLAG_BIT_PGI = int(0x40000);
static _DELPHI_CONST int GL_INDEX_BIT_PGI = int(0x80000);
static _DELPHI_CONST int GL_MAT_AMBIENT_BIT_PGI = int(0x100000);
static _DELPHI_CONST int GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI = int(0x200000);
static _DELPHI_CONST int GL_MAT_DIFFUSE_BIT_PGI = int(0x400000);
static _DELPHI_CONST int GL_MAT_EMISSION_BIT_PGI = int(0x800000);
static _DELPHI_CONST int GL_MAT_COLOR_INDEXES_BIT_PGI = int(0x1000000);
static _DELPHI_CONST int GL_MAT_SHININESS_BIT_PGI = int(0x2000000);
static _DELPHI_CONST int GL_MAT_SPECULAR_BIT_PGI = int(0x4000000);
static _DELPHI_CONST int GL_NORMAL_BIT_PGI = int(0x8000000);
static _DELPHI_CONST int GL_TEXCOORD1_BIT_PGI = int(0x10000000);
static _DELPHI_CONST int GL_TEXCOORD2_BIT_PGI = int(0x20000000);
static _DELPHI_CONST int GL_TEXCOORD3_BIT_PGI = int(0x40000000);
static _DELPHI_CONST unsigned GL_TEXCOORD4_BIT_PGI = unsigned(0x80000000);
static _DELPHI_CONST System::Int8 GL_VERTEX23_BIT_PGI = System::Int8(0x4);
static _DELPHI_CONST System::Int8 GL_VERTEX4_BIT_PGI = System::Int8(0x8);
static _DELPHI_CONST System::Word GL_SCREEN_COORDINATES_REND = System::Word(0x8490);
static _DELPHI_CONST System::Word GL_INVERTED_SCREEN_W_REND = System::Word(0x8491);
static _DELPHI_CONST System::Word GL_RGB_S3TC = System::Word(0x83a0);
static _DELPHI_CONST System::Word GL_RGB4_S3TC = System::Word(0x83a1);
static _DELPHI_CONST System::Word GL_RGBA_S3TC = System::Word(0x83a2);
static _DELPHI_CONST System::Word GL_RGBA4_S3TC = System::Word(0x83a3);
static _DELPHI_CONST System::Word GL_DETAIL_TEXTURE_2D_SGIS = System::Word(0x8095);
static _DELPHI_CONST System::Word GL_DETAIL_TEXTURE_2D_BINDING_SGIS = System::Word(0x8096);
static _DELPHI_CONST System::Word GL_LINEAR_DETAIL_SGIS = System::Word(0x8097);
static _DELPHI_CONST System::Word GL_LINEAR_DETAIL_ALPHA_SGIS = System::Word(0x8098);
static _DELPHI_CONST System::Word GL_LINEAR_DETAIL_COLOR_SGIS = System::Word(0x8099);
static _DELPHI_CONST System::Word GL_DETAIL_TEXTURE_LEVEL_SGIS = System::Word(0x809a);
static _DELPHI_CONST System::Word GL_DETAIL_TEXTURE_MODE_SGIS = System::Word(0x809b);
static _DELPHI_CONST System::Word GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS = System::Word(0x809c);
static _DELPHI_CONST System::Word GL_FOG_FUNC_SGIS = System::Word(0x812a);
static _DELPHI_CONST System::Word GL_FOG_FUNC_POINTS_SGIS = System::Word(0x812b);
static _DELPHI_CONST System::Word GL_MAX_FOG_FUNC_POINTS_SGIS = System::Word(0x812c);
static _DELPHI_CONST System::Word GL_GENERATE_MIPMAP_SGIS = System::Word(0x8191);
static _DELPHI_CONST System::Word GL_GENERATE_MIPMAP_HINT_SGIS = System::Word(0x8192);
static _DELPHI_CONST System::Word GL_MULTISAMPLE_SGIS = System::Word(0x809d);
static _DELPHI_CONST System::Word GL_SAMPLE_ALPHA_TO_MASK_SGIS = System::Word(0x809e);
static _DELPHI_CONST System::Word GL_SAMPLE_ALPHA_TO_ONE_SGIS = System::Word(0x809f);
static _DELPHI_CONST System::Word GL_SAMPLE_MASK_SGIS = System::Word(0x80a0);
static _DELPHI_CONST System::Word GL_1PASS_SGIS = System::Word(0x80a1);
static _DELPHI_CONST System::Word GL_2PASS_0_SGIS = System::Word(0x80a2);
static _DELPHI_CONST System::Word GL_2PASS_1_SGIS = System::Word(0x80a3);
static _DELPHI_CONST System::Word GL_4PASS_0_SGIS = System::Word(0x80a4);
static _DELPHI_CONST System::Word GL_4PASS_1_SGIS = System::Word(0x80a5);
static _DELPHI_CONST System::Word GL_4PASS_2_SGIS = System::Word(0x80a6);
static _DELPHI_CONST System::Word GL_4PASS_3_SGIS = System::Word(0x80a7);
static _DELPHI_CONST System::Word GL_SAMPLE_BUFFERS_SGIS = System::Word(0x80a8);
static _DELPHI_CONST System::Word GL_SAMPLES_SGIS = System::Word(0x80a9);
static _DELPHI_CONST System::Word GL_SAMPLE_MASK_VALUE_SGIS = System::Word(0x80aa);
static _DELPHI_CONST System::Word GL_SAMPLE_MASK_INVERT_SGIS = System::Word(0x80ab);
static _DELPHI_CONST System::Word GL_SAMPLE_PATTERN_SGIS = System::Word(0x80ac);
static _DELPHI_CONST System::Word GL_PIXEL_TEXTURE_SGIS = System::Word(0x8353);
static _DELPHI_CONST System::Word GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS = System::Word(0x8354);
static _DELPHI_CONST System::Word GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS = System::Word(0x8355);
static _DELPHI_CONST System::Word GL_PIXEL_GROUP_COLOR_SGIS = System::Word(0x8356);
static _DELPHI_CONST System::Word GL_EYE_DISTANCE_TO_POINT_SGIS = System::Word(0x81f0);
static _DELPHI_CONST System::Word GL_OBJECT_DISTANCE_TO_POINT_SGIS = System::Word(0x81f1);
static _DELPHI_CONST System::Word GL_EYE_DISTANCE_TO_LINE_SGIS = System::Word(0x81f2);
static _DELPHI_CONST System::Word GL_OBJECT_DISTANCE_TO_LINE_SGIS = System::Word(0x81f3);
static _DELPHI_CONST System::Word GL_EYE_POINT_SGIS = System::Word(0x81f4);
static _DELPHI_CONST System::Word GL_OBJECT_POINT_SGIS = System::Word(0x81f5);
static _DELPHI_CONST System::Word GL_EYE_LINE_SGIS = System::Word(0x81f6);
static _DELPHI_CONST System::Word GL_OBJECT_LINE_SGIS = System::Word(0x81f7);
static _DELPHI_CONST System::Word GL_POINT_SIZE_MIN_SGIS = System::Word(0x8126);
static _DELPHI_CONST System::Word GL_POINT_SIZE_MAX_SGIS = System::Word(0x8127);
static _DELPHI_CONST System::Word GL_POINT_FADE_THRESHOLD_SIZE_SGIS = System::Word(0x8128);
static _DELPHI_CONST System::Word GL_DISTANCE_ATTENUATION_SGIS = System::Word(0x8129);
static _DELPHI_CONST System::Word GL_LINEAR_SHARPEN_SGIS = System::Word(0x80ad);
static _DELPHI_CONST System::Word GL_LINEAR_SHARPEN_ALPHA_SGIS = System::Word(0x80ae);
static _DELPHI_CONST System::Word GL_LINEAR_SHARPEN_COLOR_SGIS = System::Word(0x80af);
static _DELPHI_CONST System::Word GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS = System::Word(0x80b0);
static _DELPHI_CONST System::Word GL_PACK_SKIP_VOLUMES_SGIS = System::Word(0x8130);
static _DELPHI_CONST System::Word GL_PACK_IMAGE_DEPTH_SGIS = System::Word(0x8131);
static _DELPHI_CONST System::Word GL_UNPACK_SKIP_VOLUMES_SGIS = System::Word(0x8132);
static _DELPHI_CONST System::Word GL_UNPACK_IMAGE_DEPTH_SGIS = System::Word(0x8133);
static _DELPHI_CONST System::Word GL_TEXTURE_4D_SGIS = System::Word(0x8134);
static _DELPHI_CONST System::Word GL_PROXY_TEXTURE_4D_SGIS = System::Word(0x8135);
static _DELPHI_CONST System::Word GL_TEXTURE_4DSIZE_SGIS = System::Word(0x8136);
static _DELPHI_CONST System::Word GL_TEXTURE_WRAP_Q_SGIS = System::Word(0x8137);
static _DELPHI_CONST System::Word GL_MAX_4D_TEXTURE_SIZE_SGIS = System::Word(0x8138);
static _DELPHI_CONST System::Word GL_TEXTURE_4D_BINDING_SGIS = System::Word(0x814f);
static _DELPHI_CONST System::Word GL_TEXTURE_COLOR_WRITEMASK_SGIS = System::Word(0x81ef);
static _DELPHI_CONST System::Word GL_CLAMP_TO_EDGE_SGIS = System::Word(0x812f);
static _DELPHI_CONST System::Word GL_FILTER4_SGIS = System::Word(0x8146);
static _DELPHI_CONST System::Word GL_TEXTURE_FILTER4_SIZE_SGIS = System::Word(0x8147);
static _DELPHI_CONST System::Word GL_TEXTURE_MIN_LOD_SGIS = System::Word(0x813a);
static _DELPHI_CONST System::Word GL_TEXTURE_MAX_LOD_SGIS = System::Word(0x813b);
static _DELPHI_CONST System::Word GL_TEXTURE_BASE_LEVEL_SGIS = System::Word(0x813c);
static _DELPHI_CONST System::Word GL_TEXTURE_MAX_LEVEL_SGIS = System::Word(0x813d);
static _DELPHI_CONST System::Word GL_DUAL_ALPHA4_SGIS = System::Word(0x8110);
static _DELPHI_CONST System::Word GL_DUAL_ALPHA8_SGIS = System::Word(0x8111);
static _DELPHI_CONST System::Word GL_DUAL_ALPHA12_SGIS = System::Word(0x8112);
static _DELPHI_CONST System::Word GL_DUAL_ALPHA16_SGIS = System::Word(0x8113);
static _DELPHI_CONST System::Word GL_DUAL_LUMINANCE4_SGIS = System::Word(0x8114);
static _DELPHI_CONST System::Word GL_DUAL_LUMINANCE8_SGIS = System::Word(0x8115);
static _DELPHI_CONST System::Word GL_DUAL_LUMINANCE12_SGIS = System::Word(0x8116);
static _DELPHI_CONST System::Word GL_DUAL_LUMINANCE16_SGIS = System::Word(0x8117);
static _DELPHI_CONST System::Word GL_DUAL_INTENSITY4_SGIS = System::Word(0x8118);
static _DELPHI_CONST System::Word GL_DUAL_INTENSITY8_SGIS = System::Word(0x8119);
static _DELPHI_CONST System::Word GL_DUAL_INTENSITY12_SGIS = System::Word(0x811a);
static _DELPHI_CONST System::Word GL_DUAL_INTENSITY16_SGIS = System::Word(0x811b);
static _DELPHI_CONST System::Word GL_DUAL_LUMINANCE_ALPHA4_SGIS = System::Word(0x811c);
static _DELPHI_CONST System::Word GL_DUAL_LUMINANCE_ALPHA8_SGIS = System::Word(0x811d);
static _DELPHI_CONST System::Word GL_QUAD_ALPHA4_SGIS = System::Word(0x811e);
static _DELPHI_CONST System::Word GL_QUAD_ALPHA8_SGIS = System::Word(0x811f);
static _DELPHI_CONST System::Word GL_QUAD_LUMINANCE4_SGIS = System::Word(0x8120);
static _DELPHI_CONST System::Word GL_QUAD_LUMINANCE8_SGIS = System::Word(0x8121);
static _DELPHI_CONST System::Word GL_QUAD_INTENSITY4_SGIS = System::Word(0x8122);
static _DELPHI_CONST System::Word GL_QUAD_INTENSITY8_SGIS = System::Word(0x8123);
static _DELPHI_CONST System::Word GL_DUAL_TEXTURE_SELECT_SGIS = System::Word(0x8124);
static _DELPHI_CONST System::Word GL_QUAD_TEXTURE_SELECT_SGIS = System::Word(0x8125);
static _DELPHI_CONST System::Word GL_ASYNC_MARKER_SGIX = System::Word(0x8329);
static _DELPHI_CONST System::Word GL_ASYNC_HISTOGRAM_SGIX = System::Word(0x832c);
static _DELPHI_CONST System::Word GL_MAX_ASYNC_HISTOGRAM_SGIX = System::Word(0x832d);
static _DELPHI_CONST System::Word GL_ASYNC_TEX_IMAGE_SGIX = System::Word(0x835c);
static _DELPHI_CONST System::Word GL_ASYNC_DRAW_PIXELS_SGIX = System::Word(0x835d);
static _DELPHI_CONST System::Word GL_ASYNC_READ_PIXELS_SGIX = System::Word(0x835e);
static _DELPHI_CONST System::Word GL_MAX_ASYNC_TEX_IMAGE_SGIX = System::Word(0x835f);
static _DELPHI_CONST System::Word GL_MAX_ASYNC_DRAW_PIXELS_SGIX = System::Word(0x8360);
static _DELPHI_CONST System::Word GL_MAX_ASYNC_READ_PIXELS_SGIX = System::Word(0x8361);
static _DELPHI_CONST System::Word GL_ALPHA_MIN_SGIX = System::Word(0x8320);
static _DELPHI_CONST System::Word GL_ALPHA_MAX_SGIX = System::Word(0x8321);
static _DELPHI_CONST System::Word GL_CALLIGRAPHIC_FRAGMENT_SGIX = System::Word(0x8183);
static _DELPHI_CONST System::Word GL_LINEAR_CLIPMAP_LINEAR_SGIX = System::Word(0x8170);
static _DELPHI_CONST System::Word GL_TEXTURE_CLIPMAP_CENTER_SGIX = System::Word(0x8171);
static _DELPHI_CONST System::Word GL_TEXTURE_CLIPMAP_FRAME_SGIX = System::Word(0x8172);
static _DELPHI_CONST System::Word GL_TEXTURE_CLIPMAP_OFFSET_SGIX = System::Word(0x8173);
static _DELPHI_CONST System::Word GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX = System::Word(0x8174);
static _DELPHI_CONST System::Word GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX = System::Word(0x8175);
static _DELPHI_CONST System::Word GL_TEXTURE_CLIPMAP_DEPTH_SGIX = System::Word(0x8176);
static _DELPHI_CONST System::Word GL_MAX_CLIPMAP_DEPTH_SGIX = System::Word(0x8177);
static _DELPHI_CONST System::Word GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX = System::Word(0x8178);
static _DELPHI_CONST System::Word GL_NEAREST_CLIPMAP_NEAREST_SGIX = System::Word(0x844d);
static _DELPHI_CONST System::Word GL_NEAREST_CLIPMAP_LINEAR_SGIX = System::Word(0x844e);
static _DELPHI_CONST System::Word GL_LINEAR_CLIPMAP_NEAREST_SGIX = System::Word(0x844f);
static _DELPHI_CONST System::Word GL_CONVOLUTION_HINT_SGIX = System::Word(0x8316);
static _DELPHI_CONST System::Word GL_DEPTH_COMPONENT16_SGIX = System::Word(0x81a5);
static _DELPHI_CONST System::Word GL_DEPTH_COMPONENT24_SGIX = System::Word(0x81a6);
static _DELPHI_CONST System::Word GL_DEPTH_COMPONENT32_SGIX = System::Word(0x81a7);
static _DELPHI_CONST System::Word GL_FOG_OFFSET_SGIX = System::Word(0x8198);
static _DELPHI_CONST System::Word GL_FOG_OFFSET_VALUE_SGIX = System::Word(0x8199);
static _DELPHI_CONST System::Word GL_FOG_SCALE_SGIX = System::Word(0x81fc);
static _DELPHI_CONST System::Word GL_FOG_SCALE_VALUE_SGIX = System::Word(0x81fd);
static _DELPHI_CONST System::Word GL_FRAGMENT_LIGHTING_SGIX = System::Word(0x8400);
static _DELPHI_CONST System::Word GL_FRAGMENT_COLOR_MATERIAL_SGIX = System::Word(0x8401);
static _DELPHI_CONST System::Word GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX = System::Word(0x8402);
static _DELPHI_CONST System::Word GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX = System::Word(0x8403);
static _DELPHI_CONST System::Word GL_MAX_FRAGMENT_LIGHTS_SGIX = System::Word(0x8404);
static _DELPHI_CONST System::Word GL_MAX_ACTIVE_LIGHTS_SGIX = System::Word(0x8405);
static _DELPHI_CONST System::Word GL_CURRENT_RASTER_NORMAL_SGIX = System::Word(0x8406);
static _DELPHI_CONST System::Word GL_LIGHT_ENV_MODE_SGIX = System::Word(0x8407);
static _DELPHI_CONST System::Word GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX = System::Word(0x8408);
static _DELPHI_CONST System::Word GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX = System::Word(0x8409);
static _DELPHI_CONST System::Word GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX = System::Word(0x840a);
static _DELPHI_CONST System::Word GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX = System::Word(0x840b);
static _DELPHI_CONST System::Word GL_FRAGMENT_LIGHT0_SGIX = System::Word(0x840c);
static _DELPHI_CONST System::Word GL_FRAGMENT_LIGHT1_SGIX = System::Word(0x840d);
static _DELPHI_CONST System::Word GL_FRAGMENT_LIGHT2_SGIX = System::Word(0x840e);
static _DELPHI_CONST System::Word GL_FRAGMENT_LIGHT3_SGIX = System::Word(0x840f);
static _DELPHI_CONST System::Word GL_FRAGMENT_LIGHT4_SGIX = System::Word(0x8410);
static _DELPHI_CONST System::Word GL_FRAGMENT_LIGHT5_SGIX = System::Word(0x8411);
static _DELPHI_CONST System::Word GL_FRAGMENT_LIGHT6_SGIX = System::Word(0x8412);
static _DELPHI_CONST System::Word GL_FRAGMENT_LIGHT7_SGIX = System::Word(0x8413);
static _DELPHI_CONST System::Word GL_FRAMEZOOM_SGIX = System::Word(0x818b);
static _DELPHI_CONST System::Word GL_FRAMEZOOM_FACTOR_SGIX = System::Word(0x818c);
static _DELPHI_CONST System::Word GL_MAX_FRAMEZOOM_FACTOR_SGIX = System::Word(0x818d);
static _DELPHI_CONST System::Word GL_PIXEL_TEX_GEN_Q_CEILING_SGIX = System::Word(0x8184);
static _DELPHI_CONST System::Word GL_PIXEL_TEX_GEN_Q_ROUND_SGIX = System::Word(0x8185);
static _DELPHI_CONST System::Word GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX = System::Word(0x8186);
static _DELPHI_CONST System::Word GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX = System::Word(0x8187);
static _DELPHI_CONST System::Word GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX = System::Word(0x8188);
static _DELPHI_CONST System::Word GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX = System::Word(0x8189);
static _DELPHI_CONST System::Word GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX = System::Word(0x818a);
static _DELPHI_CONST System::Word GL_INSTRUMENT_BUFFER_POINTER_SGIX = System::Word(0x8180);
static _DELPHI_CONST System::Word GL_INSTRUMENT_MEASUREMENTS_SGIX = System::Word(0x8181);
static _DELPHI_CONST System::Word GL_INTERLACE_SGIX = System::Word(0x8094);
static _DELPHI_CONST System::Word GL_IR_INSTRUMENT1_SGIX = System::Word(0x817f);
static _DELPHI_CONST System::Word GL_LIST_PRIORITY_SGIX = System::Word(0x8182);
static _DELPHI_CONST System::Word GL_PIXEL_TEX_GEN_SGIX = System::Word(0x8139);
static _DELPHI_CONST System::Word GL_PIXEL_TEX_GEN_MODE_SGIX = System::Word(0x832b);
static _DELPHI_CONST System::Word GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX = System::Word(0x813e);
static _DELPHI_CONST System::Word GL_PIXEL_TILE_CACHE_INCREMENT_SGIX = System::Word(0x813f);
static _DELPHI_CONST System::Word GL_PIXEL_TILE_WIDTH_SGIX = System::Word(0x8140);
static _DELPHI_CONST System::Word GL_PIXEL_TILE_HEIGHT_SGIX = System::Word(0x8141);
static _DELPHI_CONST System::Word GL_PIXEL_TILE_GRID_WIDTH_SGIX = System::Word(0x8142);
static _DELPHI_CONST System::Word GL_PIXEL_TILE_GRID_HEIGHT_SGIX = System::Word(0x8143);
static _DELPHI_CONST System::Word GL_PIXEL_TILE_GRID_DEPTH_SGIX = System::Word(0x8144);
static _DELPHI_CONST System::Word GL_PIXEL_TILE_CACHE_SIZE_SGIX = System::Word(0x8145);
static _DELPHI_CONST System::Word GL_GEOMETRY_DEFORMATION_SGIX = System::Word(0x8194);
static _DELPHI_CONST System::Word GL_TEXTURE_DEFORMATION_SGIX = System::Word(0x8195);
static _DELPHI_CONST System::Word GL_DEFORMATIONS_MASK_SGIX = System::Word(0x8196);
static _DELPHI_CONST System::Word GL_MAX_DEFORMATION_ORDER_SGIX = System::Word(0x8197);
static _DELPHI_CONST System::Word GL_REFERENCE_PLANE_SGIX = System::Word(0x817d);
static _DELPHI_CONST System::Word GL_REFERENCE_PLANE_EQUATION_SGIX = System::Word(0x817e);
static _DELPHI_CONST System::Word GL_PACK_RESAMPLE_SGIX = System::Word(0x842c);
static _DELPHI_CONST System::Word GL_UNPACK_RESAMPLE_SGIX = System::Word(0x842d);
static _DELPHI_CONST System::Word GL_RESAMPLE_REPLICATE_SGIX = System::Word(0x842e);
static _DELPHI_CONST System::Word GL_RESAMPLE_ZERO_FILL_SGIX = System::Word(0x842f);
static _DELPHI_CONST System::Word GL_RESAMPLE_DECIMATE_SGIX = System::Word(0x8430);
static _DELPHI_CONST System::Word GL_SCALEBIAS_HINT_SGIX = System::Word(0x8322);
static _DELPHI_CONST System::Word GL_TEXTURE_COMPARE_SGIX = System::Word(0x819a);
static _DELPHI_CONST System::Word GL_TEXTURE_COMPARE_OPERATOR_SGIX = System::Word(0x819b);
static _DELPHI_CONST System::Word GL_TEXTURE_LEQUAL_R_SGIX = System::Word(0x819c);
static _DELPHI_CONST System::Word GL_TEXTURE_GEQUAL_R_SGIX = System::Word(0x819d);
static _DELPHI_CONST System::Word GL_SHADOW_AMBIENT_SGIX = System::Word(0x80bf);
static _DELPHI_CONST System::Word GL_SPRITE_SGIX = System::Word(0x8148);
static _DELPHI_CONST System::Word GL_SPRITE_MODE_SGIX = System::Word(0x8149);
static _DELPHI_CONST System::Word GL_SPRITE_AXIS_SGIX = System::Word(0x814a);
static _DELPHI_CONST System::Word GL_SPRITE_TRANSLATION_SGIX = System::Word(0x814b);
static _DELPHI_CONST System::Word GL_SPRITE_AXIAL_SGIX = System::Word(0x814c);
static _DELPHI_CONST System::Word GL_SPRITE_OBJECT_ALIGNED_SGIX = System::Word(0x814d);
static _DELPHI_CONST System::Word GL_SPRITE_EYE_ALIGNED_SGIX = System::Word(0x814e);
static _DELPHI_CONST System::Word GL_PACK_SUBSAMPLE_RATE_SGIX = System::Word(0x85a0);
static _DELPHI_CONST System::Word GL_UNPACK_SUBSAMPLE_RATE_SGIX = System::Word(0x85a1);
static _DELPHI_CONST System::Word GL_PIXEL_SUBSAMPLE_4444_SGIX = System::Word(0x85a2);
static _DELPHI_CONST System::Word GL_PIXEL_SUBSAMPLE_2424_SGIX = System::Word(0x85a3);
static _DELPHI_CONST System::Word GL_PIXEL_SUBSAMPLE_4242_SGIX = System::Word(0x85a4);
static _DELPHI_CONST System::Word GL_TEXTURE_ENV_BIAS_SGIX = System::Word(0x80be);
static _DELPHI_CONST System::Word GL_TEXTURE_MAX_CLAMP_S_SGIX = System::Word(0x8369);
static _DELPHI_CONST System::Word GL_TEXTURE_MAX_CLAMP_T_SGIX = System::Word(0x836a);
static _DELPHI_CONST System::Word GL_TEXTURE_MAX_CLAMP_R_SGIX = System::Word(0x836b);
static _DELPHI_CONST System::Word GL_TEXTURE_LOD_BIAS_S_SGIX = System::Word(0x818e);
static _DELPHI_CONST System::Word GL_TEXTURE_LOD_BIAS_T_SGIX = System::Word(0x818f);
static _DELPHI_CONST System::Word GL_TEXTURE_LOD_BIAS_R_SGIX = System::Word(0x8190);
static _DELPHI_CONST System::Word GL_TEXTURE_MULTI_BUFFER_HINT_SGIX = System::Word(0x812e);
static _DELPHI_CONST System::Word GL_POST_TEXTURE_FILTER_BIAS_SGIX = System::Word(0x8179);
static _DELPHI_CONST System::Word GL_POST_TEXTURE_FILTER_SCALE_SGIX = System::Word(0x817a);
static _DELPHI_CONST System::Word GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX = System::Word(0x817b);
static _DELPHI_CONST System::Word GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX = System::Word(0x817c);
static _DELPHI_CONST System::Word GL_VERTEX_PRECLIP_SGIX = System::Word(0x83ee);
static _DELPHI_CONST System::Word GL_VERTEX_PRECLIP_HINT_SGIX = System::Word(0x83ef);
static _DELPHI_CONST System::Word GL_YCRCB_422_SGIX = System::Word(0x81bb);
static _DELPHI_CONST System::Word GL_YCRCB_444_SGIX = System::Word(0x81bc);
static _DELPHI_CONST System::Word GL_YCRCB_SGIX = System::Word(0x8318);
static _DELPHI_CONST System::Word GL_YCRCBA_SGIX = System::Word(0x8319);
static _DELPHI_CONST System::Word GL_COLOR_MATRIX_SGI = System::Word(0x80b1);
static _DELPHI_CONST System::Word GL_COLOR_MATRIX_STACK_DEPTH_SGI = System::Word(0x80b2);
static _DELPHI_CONST System::Word GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI = System::Word(0x80b3);
static _DELPHI_CONST System::Word GL_POST_COLOR_MATRIX_RED_SCALE_SGI = System::Word(0x80b4);
static _DELPHI_CONST System::Word GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI = System::Word(0x80b5);
static _DELPHI_CONST System::Word GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI = System::Word(0x80b6);
static _DELPHI_CONST System::Word GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI = System::Word(0x80b7);
static _DELPHI_CONST System::Word GL_POST_COLOR_MATRIX_RED_BIAS_SGI = System::Word(0x80b8);
static _DELPHI_CONST System::Word GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI = System::Word(0x80b9);
static _DELPHI_CONST System::Word GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI = System::Word(0x80ba);
static _DELPHI_CONST System::Word GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI = System::Word(0x80bb);
static _DELPHI_CONST System::Word GL_COLOR_TABLE_SGI = System::Word(0x80d0);
static _DELPHI_CONST System::Word GL_POST_CONVOLUTION_COLOR_TABLE_SGI = System::Word(0x80d1);
static _DELPHI_CONST System::Word GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI = System::Word(0x80d2);
static _DELPHI_CONST System::Word GL_PROXY_COLOR_TABLE_SGI = System::Word(0x80d3);
static _DELPHI_CONST System::Word GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI = System::Word(0x80d4);
static _DELPHI_CONST System::Word GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI = System::Word(0x80d5);
static _DELPHI_CONST System::Word GL_COLOR_TABLE_SCALE_SGI = System::Word(0x80d6);
static _DELPHI_CONST System::Word GL_COLOR_TABLE_BIAS_SGI = System::Word(0x80d7);
static _DELPHI_CONST System::Word GL_COLOR_TABLE_FORMAT_SGI = System::Word(0x80d8);
static _DELPHI_CONST System::Word GL_COLOR_TABLE_WIDTH_SGI = System::Word(0x80d9);
static _DELPHI_CONST System::Word GL_COLOR_TABLE_RED_SIZE_SGI = System::Word(0x80da);
static _DELPHI_CONST System::Word GL_COLOR_TABLE_GREEN_SIZE_SGI = System::Word(0x80db);
static _DELPHI_CONST System::Word GL_COLOR_TABLE_BLUE_SIZE_SGI = System::Word(0x80dc);
static _DELPHI_CONST System::Word GL_COLOR_TABLE_ALPHA_SIZE_SGI = System::Word(0x80dd);
static _DELPHI_CONST System::Word GL_COLOR_TABLE_LUMINANCE_SIZE_SGI = System::Word(0x80de);
static _DELPHI_CONST System::Word GL_COLOR_TABLE_INTENSITY_SIZE_SGI = System::Word(0x80df);
static _DELPHI_CONST System::Word GL_DEPTH_PASS_INSTRUMENT_SGIX = System::Word(0x8310);
static _DELPHI_CONST System::Word GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX = System::Word(0x8311);
static _DELPHI_CONST System::Word GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX = System::Word(0x8312);
static _DELPHI_CONST System::Word GL_TEXTURE_COLOR_TABLE_SGI = System::Word(0x80bc);
static _DELPHI_CONST System::Word GL_PROXY_TEXTURE_COLOR_TABLE_SGI = System::Word(0x80bd);
static _DELPHI_CONST System::Word GL_UNPACK_CONSTANT_DATA_SUNX = System::Word(0x81d5);
static _DELPHI_CONST System::Word GL_TEXTURE_CONSTANT_DATA_SUNX = System::Word(0x81d6);
static _DELPHI_CONST System::Word GL_WRAP_BORDER_SUN = System::Word(0x81d4);
static _DELPHI_CONST System::Word GL_GLOBAL_ALPHA_SUN = System::Word(0x81d9);
static _DELPHI_CONST System::Word GL_GLOBAL_ALPHA_FACTOR_SUN = System::Word(0x81da);
static _DELPHI_CONST System::Word GL_QUAD_MESH_SUN = System::Word(0x8614);
static _DELPHI_CONST System::Word GL_TRIANGLE_MESH_SUN = System::Word(0x8615);
static _DELPHI_CONST System::Word GL_SLICE_ACCUM_SUN = System::Word(0x85cc);
static _DELPHI_CONST System::Int8 GL_RESTART_SUN = System::Int8(0x1);
static _DELPHI_CONST System::Int8 GL_REPLACE_MIDDLE_SUN = System::Int8(0x2);
static _DELPHI_CONST System::Int8 GL_REPLACE_OLDEST_SUN = System::Int8(0x3);
static _DELPHI_CONST System::Word GL_TRIANGLE_LIST_SUN = System::Word(0x81d7);
static _DELPHI_CONST System::Word GL_REPLACEMENT_CODE_SUN = System::Word(0x81d8);
static _DELPHI_CONST System::Word GL_REPLACEMENT_CODE_ARRAY_SUN = System::Word(0x85c0);
static _DELPHI_CONST System::Word GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN = System::Word(0x85c1);
static _DELPHI_CONST System::Word GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN = System::Word(0x85c2);
static _DELPHI_CONST System::Word GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN = System::Word(0x85c3);
static _DELPHI_CONST System::Word GL_R1UI_V3F_SUN = System::Word(0x85c4);
static _DELPHI_CONST System::Word GL_R1UI_C4UB_V3F_SUN = System::Word(0x85c5);
static _DELPHI_CONST System::Word GL_R1UI_C3F_V3F_SUN = System::Word(0x85c6);
static _DELPHI_CONST System::Word GL_R1UI_N3F_V3F_SUN = System::Word(0x85c7);
static _DELPHI_CONST System::Word GL_R1UI_C4F_N3F_V3F_SUN = System::Word(0x85c8);
static _DELPHI_CONST System::Word GL_R1UI_T2F_V3F_SUN = System::Word(0x85c9);
static _DELPHI_CONST System::Word GL_R1UI_T2F_N3F_V3F_SUN = System::Word(0x85ca);
static _DELPHI_CONST System::Word GL_R1UI_T2F_C4F_N3F_V3F_SUN = System::Word(0x85cb);
static _DELPHI_CONST System::Word GL_PHONG_WIN = System::Word(0x80ea);
static _DELPHI_CONST System::Word GL_PHONG_HINT_WIN = System::Word(0x80eb);
static _DELPHI_CONST System::Word GL_FOG_SPECULAR_TEXTURE_WIN = System::Word(0x80ec);
static _DELPHI_CONST System::Word GL_VERTEX_SHADER_ARB = System::Word(0x8b31);
static _DELPHI_CONST System::Word GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB = System::Word(0x8b4a);
static _DELPHI_CONST System::Word GL_MAX_VARYING_FLOATS_ARB = System::Word(0x8b4b);
static _DELPHI_CONST System::Word GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB = System::Word(0x8b4c);
static _DELPHI_CONST System::Word GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB = System::Word(0x8b4d);
static _DELPHI_CONST System::Word GL_OBJECT_ACTIVE_ATTRIBUTES_ARB = System::Word(0x8b89);
static _DELPHI_CONST System::Word GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB = System::Word(0x8b8a);
static _DELPHI_CONST System::Word GL_MULTIPLY_KHR = System::Word(0x9294);
static _DELPHI_CONST System::Word GL_SCREEN_KHR = System::Word(0x9295);
static _DELPHI_CONST System::Word GL_OVERLAY_KHR = System::Word(0x9296);
static _DELPHI_CONST System::Word GL_DARKEN_KHR = System::Word(0x9297);
static _DELPHI_CONST System::Word GL_LIGHTEN_KHR = System::Word(0x9298);
static _DELPHI_CONST System::Word GL_COLORDODGE_KHR = System::Word(0x9299);
static _DELPHI_CONST System::Word GL_COLORBURN_KHR = System::Word(0x929a);
static _DELPHI_CONST System::Word GL_HARDLIGHT_KHR = System::Word(0x929b);
static _DELPHI_CONST System::Word GL_SOFTLIGHT_KHR = System::Word(0x929c);
static _DELPHI_CONST System::Word GL_DIFFERENCE_KHR = System::Word(0x929e);
static _DELPHI_CONST System::Word GL_EXCLUSION_KHR = System::Word(0x92a0);
static _DELPHI_CONST System::Word GL_HSL_HUE_KHR = System::Word(0x92ad);
static _DELPHI_CONST System::Word GL_HSL_SATURATION_KHR = System::Word(0x92ae);
static _DELPHI_CONST System::Word GL_HSL_COLOR_KHR = System::Word(0x92af);
static _DELPHI_CONST System::Word GL_HSL_LUMINOSITY_KHR = System::Word(0x92b0);
static _DELPHI_CONST System::Word GL_BLEND_ADVANCED_COHERENT_KHR = System::Word(0x9285);
static _DELPHI_CONST System::Word GL_CONTEXT_ROBUST_ACCESS = System::Word(0x90f3);
static _DELPHI_CONST System::Int8 GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR = System::Int8(0x8);
static _DELPHI_CONST System::Word GL_FRAGMENT_SHADER_ARB = System::Word(0x8b30);
static _DELPHI_CONST System::Word GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB = System::Word(0x8b49);
static _DELPHI_CONST System::Word GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB = System::Word(0x8b8b);
static _DELPHI_CONST System::Word GL_SAMPLES_PASSED_ARB = System::Word(0x8914);
static _DELPHI_CONST System::Word GL_QUERY_COUNTER_BITS_ARB = System::Word(0x8864);
static _DELPHI_CONST System::Word GL_CURRENT_QUERY_ARB = System::Word(0x8865);
static _DELPHI_CONST System::Word GL_QUERY_RESULT_ARB = System::Word(0x8866);
static _DELPHI_CONST System::Word GL_QUERY_RESULT_AVAILABLE_ARB = System::Word(0x8867);
static _DELPHI_CONST System::Word GL_VERTICES_SUBMITTED_ARB = System::Word(0x82ee);
static _DELPHI_CONST System::Word GL_PRIMITIVES_SUBMITTED_ARB = System::Word(0x82ef);
static _DELPHI_CONST System::Word GL_VERTEX_SHADER_INVOCATIONS_ARB = System::Word(0x82f0);
static _DELPHI_CONST System::Word GL_TESS_CONTROL_SHADER_PATCHES_ARB = System::Word(0x82f1);
static _DELPHI_CONST System::Word GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB = System::Word(0x82f2);
static _DELPHI_CONST System::Word GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB = System::Word(0x82f3);
static _DELPHI_CONST System::Word GL_FRAGMENT_SHADER_INVOCATIONS_ARB = System::Word(0x82f4);
static _DELPHI_CONST System::Word GL_COMPUTE_SHADER_INVOCATIONS_ARB = System::Word(0x82f5);
static _DELPHI_CONST System::Word GL_CLIPPING_INPUT_PRIMITIVES_ARB = System::Word(0x82f6);
static _DELPHI_CONST System::Word GL_CLIPPING_OUTPUT_PRIMITIVES_ARB = System::Word(0x82f7);
static _DELPHI_CONST System::Word GL_POINT_SPRITE_ARB = System::Word(0x8861);
static _DELPHI_CONST System::Word GL_COORD_REPLACE_ARB = System::Word(0x8862);
static _DELPHI_CONST System::Word GL_SHADING_LANGUAGE_VERSION_ARB = System::Word(0x8b8c);
static _DELPHI_CONST System::Word GL_PROGRAM_OBJECT_ARB = System::Word(0x8b40);
static _DELPHI_CONST System::Word GL_OBJECT_TYPE_ARB = System::Word(0x8b4e);
static _DELPHI_CONST System::Word GL_OBJECT_SUBTYPE_ARB = System::Word(0x8b4f);
static _DELPHI_CONST System::Word GL_OBJECT_DELETE_STATUS_ARB = System::Word(0x8b80);
static _DELPHI_CONST System::Word GL_OBJECT_COMPILE_STATUS_ARB = System::Word(0x8b81);
static _DELPHI_CONST System::Word GL_OBJECT_LINK_STATUS_ARB = System::Word(0x8b82);
static _DELPHI_CONST System::Word GL_OBJECT_VALIDATE_STATUS_ARB = System::Word(0x8b83);
static _DELPHI_CONST System::Word GL_OBJECT_INFO_LOG_LENGTH_ARB = System::Word(0x8b84);
static _DELPHI_CONST System::Word GL_OBJECT_ATTACHED_OBJECTS_ARB = System::Word(0x8b85);
static _DELPHI_CONST System::Word GL_OBJECT_ACTIVE_UNIFORMS_ARB = System::Word(0x8b86);
static _DELPHI_CONST System::Word GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB = System::Word(0x8b87);
static _DELPHI_CONST System::Word GL_OBJECT_SHADER_SOURCE_LENGTH_ARB = System::Word(0x8b88);
static _DELPHI_CONST System::Word GL_SHADER_OBJECT_ARB = System::Word(0x8b48);
static _DELPHI_CONST System::Word GL_FLOAT_VEC2_ARB = System::Word(0x8b50);
static _DELPHI_CONST System::Word GL_FLOAT_VEC3_ARB = System::Word(0x8b51);
static _DELPHI_CONST System::Word GL_FLOAT_VEC4_ARB = System::Word(0x8b52);
static _DELPHI_CONST System::Word GL_INT_VEC2_ARB = System::Word(0x8b53);
static _DELPHI_CONST System::Word GL_INT_VEC3_ARB = System::Word(0x8b54);
static _DELPHI_CONST System::Word GL_INT_VEC4_ARB = System::Word(0x8b55);
static _DELPHI_CONST System::Word GL_BOOL_ARB = System::Word(0x8b56);
static _DELPHI_CONST System::Word GL_BOOL_VEC2_ARB = System::Word(0x8b57);
static _DELPHI_CONST System::Word GL_BOOL_VEC3_ARB = System::Word(0x8b58);
static _DELPHI_CONST System::Word GL_BOOL_VEC4_ARB = System::Word(0x8b59);
static _DELPHI_CONST System::Word GL_FLOAT_MAT2_ARB = System::Word(0x8b5a);
static _DELPHI_CONST System::Word GL_FLOAT_MAT3_ARB = System::Word(0x8b5b);
static _DELPHI_CONST System::Word GL_FLOAT_MAT4_ARB = System::Word(0x8b5c);
static _DELPHI_CONST System::Word GL_SAMPLER_1D_ARB = System::Word(0x8b5d);
static _DELPHI_CONST System::Word GL_SAMPLER_2D_ARB = System::Word(0x8b5e);
static _DELPHI_CONST System::Word GL_SAMPLER_3D_ARB = System::Word(0x8b5f);
static _DELPHI_CONST System::Word GL_SAMPLER_CUBE_ARB = System::Word(0x8b60);
static _DELPHI_CONST System::Word GL_SAMPLER_1D_SHADOW_ARB = System::Word(0x8b61);
static _DELPHI_CONST System::Word GL_SAMPLER_2D_SHADOW_ARB = System::Word(0x8b62);
static _DELPHI_CONST System::Word GL_SAMPLER_2D_RECT_ARB = System::Word(0x8b63);
static _DELPHI_CONST System::Word GL_SAMPLER_2D_RECT_SHADOW_ARB = System::Word(0x8b64);
static _DELPHI_CONST System::Word WGL_SAMPLE_BUFFERS_3DFX = System::Word(0x2060);
static _DELPHI_CONST System::Word WGL_SAMPLES_3DFX = System::Word(0x2061);
static _DELPHI_CONST System::Int8 WGL_FRONT_COLOR_BUFFER_BIT_ARB = System::Int8(0x1);
static _DELPHI_CONST System::Int8 WGL_BACK_COLOR_BUFFER_BIT_ARB = System::Int8(0x2);
static _DELPHI_CONST System::Int8 WGL_DEPTH_BUFFER_BIT_ARB = System::Int8(0x4);
static _DELPHI_CONST System::Int8 WGL_STENCIL_BUFFER_BIT_ARB = System::Int8(0x8);
static _DELPHI_CONST System::Word WGL_CONTEXT_RELEASE_BEHAVIOR_ARB = System::Word(0x2097);
static _DELPHI_CONST System::Int8 WGL_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB = System::Int8(0x0);
static _DELPHI_CONST System::Word WGL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB = System::Word(0x2098);
static _DELPHI_CONST System::Word ERROR_INVALID_PIXEL_TYPE_ARB = System::Word(0x2043);
static _DELPHI_CONST System::Word ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB = System::Word(0x2054);
static _DELPHI_CONST System::Word WGL_SAMPLE_BUFFERS_ARB = System::Word(0x2041);
static _DELPHI_CONST System::Word WGL_SAMPLES_ARB = System::Word(0x2042);
static _DELPHI_CONST System::Word WGL_DRAW_TO_PBUFFER_ARB = System::Word(0x202d);
static _DELPHI_CONST System::Word WGL_MAX_PBUFFER_PIXELS_ARB = System::Word(0x202e);
static _DELPHI_CONST System::Word WGL_MAX_PBUFFER_WIDTH_ARB = System::Word(0x202f);
static _DELPHI_CONST System::Word WGL_MAX_PBUFFER_HEIGHT_ARB = System::Word(0x2030);
static _DELPHI_CONST System::Word WGL_PBUFFER_LARGEST_ARB = System::Word(0x2033);
static _DELPHI_CONST System::Word WGL_PBUFFER_WIDTH_ARB = System::Word(0x2034);
static _DELPHI_CONST System::Word WGL_PBUFFER_HEIGHT_ARB = System::Word(0x2035);
static _DELPHI_CONST System::Word WGL_PBUFFER_LOST_ARB = System::Word(0x2036);
static _DELPHI_CONST System::Word WGL_NUMBER_PIXEL_FORMATS_ARB = System::Word(0x2000);
static _DELPHI_CONST System::Word WGL_DRAW_TO_WINDOW_ARB = System::Word(0x2001);
static _DELPHI_CONST System::Word WGL_DRAW_TO_BITMAP_ARB = System::Word(0x2002);
static _DELPHI_CONST System::Word WGL_ACCELERATION_ARB = System::Word(0x2003);
static _DELPHI_CONST System::Word WGL_NEED_PALETTE_ARB = System::Word(0x2004);
static _DELPHI_CONST System::Word WGL_NEED_SYSTEM_PALETTE_ARB = System::Word(0x2005);
static _DELPHI_CONST System::Word WGL_SWAP_LAYER_BUFFERS_ARB = System::Word(0x2006);
static _DELPHI_CONST System::Word WGL_SWAP_METHOD_ARB = System::Word(0x2007);
static _DELPHI_CONST System::Word WGL_NUMBER_OVERLAYS_ARB = System::Word(0x2008);
static _DELPHI_CONST System::Word WGL_NUMBER_UNDERLAYS_ARB = System::Word(0x2009);
static _DELPHI_CONST System::Word WGL_TRANSPARENT_ARB = System::Word(0x200a);
static _DELPHI_CONST System::Word WGL_TRANSPARENT_RED_VALUE_ARB = System::Word(0x2037);
static _DELPHI_CONST System::Word WGL_TRANSPARENT_GREEN_VALUE_ARB = System::Word(0x2038);
static _DELPHI_CONST System::Word WGL_TRANSPARENT_BLUE_VALUE_ARB = System::Word(0x2039);
static _DELPHI_CONST System::Word WGL_TRANSPARENT_ALPHA_VALUE_ARB = System::Word(0x203a);
static _DELPHI_CONST System::Word WGL_TRANSPARENT_INDEX_VALUE_ARB = System::Word(0x203b);
static _DELPHI_CONST System::Word WGL_SHARE_DEPTH_ARB = System::Word(0x200c);
static _DELPHI_CONST System::Word WGL_SHARE_STENCIL_ARB = System::Word(0x200d);
static _DELPHI_CONST System::Word WGL_SHARE_ACCUM_ARB = System::Word(0x200e);
static _DELPHI_CONST System::Word WGL_SUPPORT_GDI_ARB = System::Word(0x200f);
static _DELPHI_CONST System::Word WGL_SUPPORT_OPENGL_ARB = System::Word(0x2010);
static _DELPHI_CONST System::Word WGL_DOUBLE_BUFFER_ARB = System::Word(0x2011);
static _DELPHI_CONST System::Word WGL_STEREO_ARB = System::Word(0x2012);
static _DELPHI_CONST System::Word WGL_PIXEL_TYPE_ARB = System::Word(0x2013);
static _DELPHI_CONST System::Word WGL_COLOR_BITS_ARB = System::Word(0x2014);
static _DELPHI_CONST System::Word WGL_RED_BITS_ARB = System::Word(0x2015);
static _DELPHI_CONST System::Word WGL_RED_SHIFT_ARB = System::Word(0x2016);
static _DELPHI_CONST System::Word WGL_GREEN_BITS_ARB = System::Word(0x2017);
static _DELPHI_CONST System::Word WGL_GREEN_SHIFT_ARB = System::Word(0x2018);
static _DELPHI_CONST System::Word WGL_BLUE_BITS_ARB = System::Word(0x2019);
static _DELPHI_CONST System::Word WGL_BLUE_SHIFT_ARB = System::Word(0x201a);
static _DELPHI_CONST System::Word WGL_ALPHA_BITS_ARB = System::Word(0x201b);
static _DELPHI_CONST System::Word WGL_ALPHA_SHIFT_ARB = System::Word(0x201c);
static _DELPHI_CONST System::Word WGL_ACCUM_BITS_ARB = System::Word(0x201d);
static _DELPHI_CONST System::Word WGL_ACCUM_RED_BITS_ARB = System::Word(0x201e);
static _DELPHI_CONST System::Word WGL_ACCUM_GREEN_BITS_ARB = System::Word(0x201f);
static _DELPHI_CONST System::Word WGL_ACCUM_BLUE_BITS_ARB = System::Word(0x2020);
static _DELPHI_CONST System::Word WGL_ACCUM_ALPHA_BITS_ARB = System::Word(0x2021);
static _DELPHI_CONST System::Word WGL_DEPTH_BITS_ARB = System::Word(0x2022);
static _DELPHI_CONST System::Word WGL_STENCIL_BITS_ARB = System::Word(0x2023);
static _DELPHI_CONST System::Word WGL_AUX_BUFFERS_ARB = System::Word(0x2024);
static _DELPHI_CONST System::Word WGL_NO_ACCELERATION_ARB = System::Word(0x2025);
static _DELPHI_CONST System::Word WGL_GENERIC_ACCELERATION_ARB = System::Word(0x2026);
static _DELPHI_CONST System::Word WGL_FULL_ACCELERATION_ARB = System::Word(0x2027);
static _DELPHI_CONST System::Word WGL_SWAP_EXCHANGE_ARB = System::Word(0x2028);
static _DELPHI_CONST System::Word WGL_SWAP_COPY_ARB = System::Word(0x2029);
static _DELPHI_CONST System::Word WGL_SWAP_UNDEFINED_ARB = System::Word(0x202a);
static _DELPHI_CONST System::Word WGL_TYPE_RGBA_ARB = System::Word(0x202b);
static _DELPHI_CONST System::Word WGL_TYPE_COLORINDEX_ARB = System::Word(0x202c);
static _DELPHI_CONST System::Word WGL_RGBA_FLOAT_MODE_ARB = System::Word(0x8820);
static _DELPHI_CONST System::Word WGL_CLAMP_VERTEX_COLOR_ARB = System::Word(0x891a);
static _DELPHI_CONST System::Word WGL_CLAMP_FRAGMENT_COLOR_ARB = System::Word(0x891b);
static _DELPHI_CONST System::Word WGL_CLAMP_READ_COLOR_ARB = System::Word(0x891c);
static _DELPHI_CONST System::Word WGL_FIXED_ONLY_ARB = System::Word(0x891d);
static _DELPHI_CONST System::Word WGL_BIND_TO_TEXTURE_RGB_ARB = System::Word(0x2070);
static _DELPHI_CONST System::Word WGL_BIND_TO_TEXTURE_RGBA_ARB = System::Word(0x2071);
static _DELPHI_CONST System::Word WGL_TEXTURE_FORMAT_ARB = System::Word(0x2072);
static _DELPHI_CONST System::Word WGL_TEXTURE_TARGET_ARB = System::Word(0x2073);
static _DELPHI_CONST System::Word WGL_MIPMAP_TEXTURE_ARB = System::Word(0x2074);
static _DELPHI_CONST System::Word WGL_TEXTURE_RGB_ARB = System::Word(0x2075);
static _DELPHI_CONST System::Word WGL_TEXTURE_RGBA_ARB = System::Word(0x2076);
static _DELPHI_CONST System::Word WGL_NO_TEXTURE_ARB = System::Word(0x2077);
static _DELPHI_CONST System::Word WGL_TEXTURE_CUBE_MAP_ARB = System::Word(0x2078);
static _DELPHI_CONST System::Word WGL_TEXTURE_1D_ARB = System::Word(0x2079);
static _DELPHI_CONST System::Word WGL_TEXTURE_2D_ARB = System::Word(0x207a);
static _DELPHI_CONST System::Word WGL_MIPMAP_LEVEL_ARB = System::Word(0x207b);
static _DELPHI_CONST System::Word WGL_CUBE_MAP_FACE_ARB = System::Word(0x207c);
static _DELPHI_CONST System::Word WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB = System::Word(0x207d);
static _DELPHI_CONST System::Word WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB = System::Word(0x207e);
static _DELPHI_CONST System::Word WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB = System::Word(0x207f);
static _DELPHI_CONST System::Word WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB = System::Word(0x2080);
static _DELPHI_CONST System::Word WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB = System::Word(0x2081);
static _DELPHI_CONST System::Word WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB = System::Word(0x2082);
static _DELPHI_CONST System::Word WGL_FRONT_LEFT_ARB = System::Word(0x2083);
static _DELPHI_CONST System::Word WGL_FRONT_RIGHT_ARB = System::Word(0x2084);
static _DELPHI_CONST System::Word WGL_BACK_LEFT_ARB = System::Word(0x2085);
static _DELPHI_CONST System::Word WGL_BACK_RIGHT_ARB = System::Word(0x2086);
static _DELPHI_CONST System::Word WGL_AUX0_ARB = System::Word(0x2087);
static _DELPHI_CONST System::Word WGL_AUX1_ARB = System::Word(0x2088);
static _DELPHI_CONST System::Word WGL_AUX2_ARB = System::Word(0x2089);
static _DELPHI_CONST System::Word WGL_AUX3_ARB = System::Word(0x208a);
static _DELPHI_CONST System::Word WGL_AUX4_ARB = System::Word(0x208b);
static _DELPHI_CONST System::Word WGL_AUX5_ARB = System::Word(0x208c);
static _DELPHI_CONST System::Word WGL_AUX6_ARB = System::Word(0x208d);
static _DELPHI_CONST System::Word WGL_AUX7_ARB = System::Word(0x208e);
static _DELPHI_CONST System::Word WGL_AUX8_ARB = System::Word(0x208f);
static _DELPHI_CONST System::Word WGL_AUX9_ARB = System::Word(0x2090);
static _DELPHI_CONST System::Int8 WGL_CONTEXT_RESET_ISOLATION_BIT_ARB = System::Int8(0x8);
static _DELPHI_CONST System::Int8 WGL_CONTEXT_DEBUG_BIT_ARB = System::Int8(0x1);
static _DELPHI_CONST System::Int8 WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB = System::Int8(0x2);
static _DELPHI_CONST System::Word WGL_CONTEXT_MAJOR_VERSION_ARB = System::Word(0x2091);
static _DELPHI_CONST System::Word WGL_CONTEXT_MINOR_VERSION_ARB = System::Word(0x2092);
static _DELPHI_CONST System::Word WGL_CONTEXT_LAYER_PLANE_ARB = System::Word(0x2093);
static _DELPHI_CONST System::Word WGL_CONTEXT_FLAGS_ARB = System::Word(0x2094);
static _DELPHI_CONST System::Word ERROR_INVALID_VERSION_ARB = System::Word(0x2095);
static _DELPHI_CONST System::Word WGL_CONTEXT_PROFILE_MASK_ARB = System::Word(0x9126);
static _DELPHI_CONST System::Int8 WGL_CONTEXT_CORE_PROFILE_BIT_ARB = System::Int8(0x1);
static _DELPHI_CONST System::Int8 WGL_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB = System::Int8(0x2);
static _DELPHI_CONST System::Word ERROR_INVALID_PROFILE_ARB = System::Word(0x2096);
static _DELPHI_CONST System::Word WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB = System::Word(0x20a9);
static _DELPHI_CONST System::Int8 WGL_CONTEXT_ROBUST_ACCESS_BIT_ARB = System::Int8(0x4);
static _DELPHI_CONST System::Word WGL_LOSE_CONTEXT_ON_RESET_ARB = System::Word(0x8252);
static _DELPHI_CONST System::Word WGL_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB = System::Word(0x8256);
static _DELPHI_CONST System::Word WGL_NO_RESET_NOTIFICATION_ARB = System::Word(0x8261);
static _DELPHI_CONST System::Word WGL_TYPE_RGBA_FLOAT_ATI = System::Word(0x21a0);
static _DELPHI_CONST System::Word GL_TYPE_RGBA_FLOAT_ATI = System::Word(0x8820);
static _DELPHI_CONST System::Word GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI = System::Word(0x8835);
static _DELPHI_CONST System::Word WGL_GPU_VENDOR_AMD = System::Word(0x1f00);
static _DELPHI_CONST System::Word WGL_GPU_RENDERER_STRING_AMD = System::Word(0x1f01);
static _DELPHI_CONST System::Word WGL_GPU_OPENGL_VERSION_STRING_AMD = System::Word(0x1f02);
static _DELPHI_CONST System::Word WGL_GPU_FASTEST_TARGET_GPUS_AMD = System::Word(0x21a2);
static _DELPHI_CONST System::Word WGL_GPU_RAM_AMD = System::Word(0x21a3);
static _DELPHI_CONST System::Word WGL_GPU_CLOCK_AMD = System::Word(0x21a4);
static _DELPHI_CONST System::Word WGL_GPU_NUM_PIPES_AMD = System::Word(0x21a5);
static _DELPHI_CONST System::Word WGL_GPU_NUM_SIMD_AMD = System::Word(0x21a6);
static _DELPHI_CONST System::Word WGL_GPU_NUM_RB_AMD = System::Word(0x21a7);
static _DELPHI_CONST System::Word WGL_GPU_NUM_SPI_AMD = System::Word(0x21a8);
static _DELPHI_CONST System::Word WGL_DEPTH_FLOAT_EXT = System::Word(0x2040);
static _DELPHI_CONST System::Word ERROR_INVALID_PIXEL_TYPE_EXT = System::Word(0x2043);
static _DELPHI_CONST System::Word WGL_SAMPLE_BUFFERS_EXT = System::Word(0x2041);
static _DELPHI_CONST System::Word WGL_SAMPLES_EXT = System::Word(0x2042);
static _DELPHI_CONST System::Word WGL_DRAW_TO_PBUFFER_EXT = System::Word(0x202d);
static _DELPHI_CONST System::Word WGL_MAX_PBUFFER_PIXELS_EXT = System::Word(0x202e);
static _DELPHI_CONST System::Word WGL_MAX_PBUFFER_WIDTH_EXT = System::Word(0x202f);
static _DELPHI_CONST System::Word WGL_MAX_PBUFFER_HEIGHT_EXT = System::Word(0x2030);
static _DELPHI_CONST System::Word WGL_OPTIMAL_PBUFFER_WIDTH_EXT = System::Word(0x2031);
static _DELPHI_CONST System::Word WGL_OPTIMAL_PBUFFER_HEIGHT_EXT = System::Word(0x2032);
static _DELPHI_CONST System::Word WGL_PBUFFER_LARGEST_EXT = System::Word(0x2033);
static _DELPHI_CONST System::Word WGL_PBUFFER_WIDTH_EXT = System::Word(0x2034);
static _DELPHI_CONST System::Word WGL_PBUFFER_HEIGHT_EXT = System::Word(0x2035);
static _DELPHI_CONST System::Word WGL_NUMBER_PIXEL_FORMATS_EXT = System::Word(0x2000);
static _DELPHI_CONST System::Word WGL_DRAW_TO_WINDOW_EXT = System::Word(0x2001);
static _DELPHI_CONST System::Word WGL_DRAW_TO_BITMAP_EXT = System::Word(0x2002);
static _DELPHI_CONST System::Word WGL_ACCELERATION_EXT = System::Word(0x2003);
static _DELPHI_CONST System::Word WGL_NEED_PALETTE_EXT = System::Word(0x2004);
static _DELPHI_CONST System::Word WGL_NEED_SYSTEM_PALETTE_EXT = System::Word(0x2005);
static _DELPHI_CONST System::Word WGL_SWAP_LAYER_BUFFERS_EXT = System::Word(0x2006);
static _DELPHI_CONST System::Word WGL_SWAP_METHOD_EXT = System::Word(0x2007);
static _DELPHI_CONST System::Word WGL_NUMBER_OVERLAYS_EXT = System::Word(0x2008);
static _DELPHI_CONST System::Word WGL_NUMBER_UNDERLAYS_EXT = System::Word(0x2009);
static _DELPHI_CONST System::Word WGL_TRANSPARENT_EXT = System::Word(0x200a);
static _DELPHI_CONST System::Word WGL_TRANSPARENT_VALUE_EXT = System::Word(0x200b);
static _DELPHI_CONST System::Word WGL_SHARE_DEPTH_EXT = System::Word(0x200c);
static _DELPHI_CONST System::Word WGL_SHARE_STENCIL_EXT = System::Word(0x200d);
static _DELPHI_CONST System::Word WGL_SHARE_ACCUM_EXT = System::Word(0x200e);
static _DELPHI_CONST System::Word WGL_SUPPORT_GDI_EXT = System::Word(0x200f);
static _DELPHI_CONST System::Word WGL_SUPPORT_OPENGL_EXT = System::Word(0x2010);
static _DELPHI_CONST System::Word WGL_DOUBLE_BUFFER_EXT = System::Word(0x2011);
static _DELPHI_CONST System::Word WGL_STEREO_EXT = System::Word(0x2012);
static _DELPHI_CONST System::Word WGL_PIXEL_TYPE_EXT = System::Word(0x2013);
static _DELPHI_CONST System::Word WGL_COLOR_BITS_EXT = System::Word(0x2014);
static _DELPHI_CONST System::Word WGL_RED_BITS_EXT = System::Word(0x2015);
static _DELPHI_CONST System::Word WGL_RED_SHIFT_EXT = System::Word(0x2016);
static _DELPHI_CONST System::Word WGL_GREEN_BITS_EXT = System::Word(0x2017);
static _DELPHI_CONST System::Word WGL_GREEN_SHIFT_EXT = System::Word(0x2018);
static _DELPHI_CONST System::Word WGL_BLUE_BITS_EXT = System::Word(0x2019);
static _DELPHI_CONST System::Word WGL_BLUE_SHIFT_EXT = System::Word(0x201a);
static _DELPHI_CONST System::Word WGL_ALPHA_BITS_EXT = System::Word(0x201b);
static _DELPHI_CONST System::Word WGL_ALPHA_SHIFT_EXT = System::Word(0x201c);
static _DELPHI_CONST System::Word WGL_ACCUM_BITS_EXT = System::Word(0x201d);
static _DELPHI_CONST System::Word WGL_ACCUM_RED_BITS_EXT = System::Word(0x201e);
static _DELPHI_CONST System::Word WGL_ACCUM_GREEN_BITS_EXT = System::Word(0x201f);
static _DELPHI_CONST System::Word WGL_ACCUM_BLUE_BITS_EXT = System::Word(0x2020);
static _DELPHI_CONST System::Word WGL_ACCUM_ALPHA_BITS_EXT = System::Word(0x2021);
static _DELPHI_CONST System::Word WGL_DEPTH_BITS_EXT = System::Word(0x2022);
static _DELPHI_CONST System::Word WGL_STENCIL_BITS_EXT = System::Word(0x2023);
static _DELPHI_CONST System::Word WGL_AUX_BUFFERS_EXT = System::Word(0x2024);
static _DELPHI_CONST System::Word WGL_NO_ACCELERATION_EXT = System::Word(0x2025);
static _DELPHI_CONST System::Word WGL_GENERIC_ACCELERATION_EXT = System::Word(0x2026);
static _DELPHI_CONST System::Word WGL_FULL_ACCELERATION_EXT = System::Word(0x2027);
static _DELPHI_CONST System::Word WGL_SWAP_EXCHANGE_EXT = System::Word(0x2028);
static _DELPHI_CONST System::Word WGL_SWAP_COPY_EXT = System::Word(0x2029);
static _DELPHI_CONST System::Word WGL_SWAP_UNDEFINED_EXT = System::Word(0x202a);
static _DELPHI_CONST System::Word WGL_TYPE_RGBA_EXT = System::Word(0x202b);
static _DELPHI_CONST System::Word WGL_TYPE_COLORINDEX_EXT = System::Word(0x202c);
static _DELPHI_CONST System::Word WGL_DIGITAL_VIDEO_CURSOR_ALPHA_FRAMEBUFFER_I3D = System::Word(0x2050);
static _DELPHI_CONST System::Word WGL_DIGITAL_VIDEO_CURSOR_ALPHA_VALUE_I3D = System::Word(0x2051);
static _DELPHI_CONST System::Word WGL_DIGITAL_VIDEO_CURSOR_INCLUDED_I3D = System::Word(0x2052);
static _DELPHI_CONST System::Word WGL_DIGITAL_VIDEO_GAMMA_CORRECTED_I3D = System::Word(0x2053);
static _DELPHI_CONST System::Word WGL_GAMMA_TABLE_SIZE_I3D = System::Word(0x204e);
static _DELPHI_CONST System::Word WGL_GAMMA_EXCLUDE_DESKTOP_I3D = System::Word(0x204f);
static _DELPHI_CONST System::Word WGL_GENLOCK_SOURCE_MULTIVIEW_I3D = System::Word(0x2044);
static _DELPHI_CONST System::Word WGL_GENLOCK_SOURCE_EXTENAL_SYNC_I3D = System::Word(0x2045);
static _DELPHI_CONST System::Word WGL_GENLOCK_SOURCE_EXTENAL_FIELD_I3D = System::Word(0x2046);
static _DELPHI_CONST System::Word WGL_GENLOCK_SOURCE_EXTENAL_TTL_I3D = System::Word(0x2047);
static _DELPHI_CONST System::Word WGL_GENLOCK_SOURCE_DIGITAL_SYNC_I3D = System::Word(0x2048);
static _DELPHI_CONST System::Word WGL_GENLOCK_SOURCE_DIGITAL_FIELD_I3D = System::Word(0x2049);
static _DELPHI_CONST System::Word WGL_GENLOCK_SOURCE_EDGE_FALLING_I3D = System::Word(0x204a);
static _DELPHI_CONST System::Word WGL_GENLOCK_SOURCE_EDGE_RISING_I3D = System::Word(0x204b);
static _DELPHI_CONST System::Word WGL_GENLOCK_SOURCE_EDGE_BOTH_I3D = System::Word(0x204c);
static _DELPHI_CONST System::Int8 WGL_IMAGE_BUFFER_MIN_ACCESS_I3D = System::Int8(0x1);
static _DELPHI_CONST System::Int8 WGL_IMAGE_BUFFER_LOCK_I3D = System::Int8(0x2);
static _DELPHI_CONST System::Word WGL_FLOAT_COMPONENTS_NV = System::Word(0x20b0);
static _DELPHI_CONST System::Word WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_R_NV = System::Word(0x20b1);
static _DELPHI_CONST System::Word WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RG_NV = System::Word(0x20b2);
static _DELPHI_CONST System::Word WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGB_NV = System::Word(0x20b3);
static _DELPHI_CONST System::Word WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGBA_NV = System::Word(0x20b4);
static _DELPHI_CONST System::Word WGL_TEXTURE_FLOAT_R_NV = System::Word(0x20b5);
static _DELPHI_CONST System::Word WGL_TEXTURE_FLOAT_RG_NV = System::Word(0x20b6);
static _DELPHI_CONST System::Word WGL_TEXTURE_FLOAT_RGB_NV = System::Word(0x20b7);
static _DELPHI_CONST System::Word WGL_TEXTURE_FLOAT_RGBA_NV = System::Word(0x20b8);
static _DELPHI_CONST System::Word WGL_BIND_TO_TEXTURE_DEPTH_NV = System::Word(0x20a3);
static _DELPHI_CONST System::Word WGL_BIND_TO_TEXTURE_RECTANGLE_DEPTH_NV = System::Word(0x20a4);
static _DELPHI_CONST System::Word WGL_DEPTH_TEXTURE_FORMAT_NV = System::Word(0x20a5);
static _DELPHI_CONST System::Word WGL_TEXTURE_DEPTH_COMPONENT_NV = System::Word(0x20a6);
static _DELPHI_CONST System::Word WGL_DEPTH_COMPONENT_NV = System::Word(0x20a7);
static _DELPHI_CONST System::Word WGL_BIND_TO_TEXTURE_RECTANGLE_RGB_NV = System::Word(0x20a0);
static _DELPHI_CONST System::Word WGL_BIND_TO_TEXTURE_RECTANGLE_RGBA_NV = System::Word(0x20a1);
static _DELPHI_CONST System::Word WGL_TEXTURE_RECTANGLE_NV = System::Word(0x20a2);
static _DELPHI_CONST System::Word WGL_NUM_VIDEO_SLOTS_NV = System::Word(0x20f0);
static _DELPHI_CONST System::Word WGL_BIND_TO_VIDEO_RGB_NV = System::Word(0x20c0);
static _DELPHI_CONST System::Word WGL_BIND_TO_VIDEO_RGBA_NV = System::Word(0x20c1);
static _DELPHI_CONST System::Word WGL_BIND_TO_VIDEO_RGB_AND_DEPTH_NV = System::Word(0x20c2);
static _DELPHI_CONST System::Word WGL_VIDEO_OUT_COLOR_NV = System::Word(0x20c3);
static _DELPHI_CONST System::Word WGL_VIDEO_OUT_ALPHA_NV = System::Word(0x20c4);
static _DELPHI_CONST System::Word WGL_VIDEO_OUT_DEPTH_NV = System::Word(0x20c5);
static _DELPHI_CONST System::Word WGL_VIDEO_OUT_COLOR_AND_ALPHA_NV = System::Word(0x20c6);
static _DELPHI_CONST System::Word WGL_VIDEO_OUT_COLOR_AND_DEPTH_NV = System::Word(0x20c7);
static _DELPHI_CONST System::Word WGL_VIDEO_OUT_FRAME = System::Word(0x20c8);
static _DELPHI_CONST System::Word WGL_VIDEO_OUT_FIELD_1 = System::Word(0x20c9);
static _DELPHI_CONST System::Word WGL_VIDEO_OUT_FIELD_2 = System::Word(0x20ca);
static _DELPHI_CONST System::Word WGL_VIDEO_OUT_STACKED_FIELDS_1_2 = System::Word(0x20cb);
static _DELPHI_CONST System::Word WGL_VIDEO_OUT_STACKED_FIELDS_2_1 = System::Word(0x20cc);
static _DELPHI_CONST System::Word WGL_ERROR_INCOMPATIBLE_AFFINITY_MASKS_NV = System::Word(0x20d0);
static _DELPHI_CONST System::Word WGL_ERROR_MISSING_AFFINITY_MASK_NV = System::Word(0x20d1);
static _DELPHI_CONST System::Word WGL_UNIQUE_ID_NV = System::Word(0x20ce);
static _DELPHI_CONST System::Word WGL_NUM_VIDEO_CAPTURE_SLOTS_NV = System::Word(0x20cf);
static _DELPHI_CONST System::Word WGL_COVERAGE_SAMPLES_NV = System::Word(0x2042);
static _DELPHI_CONST System::Word WGL_COLOR_SAMPLES_NV = System::Word(0x20b9);
static _DELPHI_CONST System::Int8 WGL_CONTEXT_ES2_PROFILE_BIT_EXT = System::Int8(0x4);
static _DELPHI_CONST System::Int8 WGL_ACCESS_READ_ONLY_NV = System::Int8(0x0);
static _DELPHI_CONST System::Int8 WGL_ACCESS_READ_WRITE_NV = System::Int8(0x1);
static _DELPHI_CONST System::Int8 WGL_ACCESS_WRITE_DISCARD_NV = System::Int8(0x2);
static _DELPHI_CONST System::Word GL_MAX_ELEMENTS_VERTICES_WIN = System::Word(0x80e8);
static _DELPHI_CONST System::Word GL_MAX_ELEMENTS_INDICES_WIN = System::Word(0x80e9);
static _DELPHI_CONST System::Int8 GLX_VENDOR = System::Int8(0x1);
static _DELPHI_CONST System::Int8 GLX_VERSION = System::Int8(0x2);
static _DELPHI_CONST System::Int8 GLX_EXTENSIONS = System::Int8(0x3);
static _DELPHI_CONST System::Int8 GLX_USE_GL = System::Int8(0x1);
static _DELPHI_CONST System::Int8 GLX_BUFFER_SIZE = System::Int8(0x2);
static _DELPHI_CONST System::Int8 GLX_LEVEL = System::Int8(0x3);
static _DELPHI_CONST System::Int8 GLX_RGBA = System::Int8(0x4);
static _DELPHI_CONST System::Int8 GLX_DOUBLEBUFFER = System::Int8(0x5);
static _DELPHI_CONST System::Int8 GLX_STEREO = System::Int8(0x6);
static _DELPHI_CONST System::Int8 GLX_AUX_BUFFERS = System::Int8(0x7);
static _DELPHI_CONST System::Int8 GLX_RED_SIZE = System::Int8(0x8);
static _DELPHI_CONST System::Int8 GLX_GREEN_SIZE = System::Int8(0x9);
static _DELPHI_CONST System::Int8 GLX_BLUE_SIZE = System::Int8(0xa);
static _DELPHI_CONST System::Int8 GLX_ALPHA_SIZE = System::Int8(0xb);
static _DELPHI_CONST System::Int8 GLX_DEPTH_SIZE = System::Int8(0xc);
static _DELPHI_CONST System::Int8 GLX_STENCIL_SIZE = System::Int8(0xd);
static _DELPHI_CONST System::Int8 GLX_ACCUM_RED_SIZE = System::Int8(0xe);
static _DELPHI_CONST System::Int8 GLX_ACCUM_GREEN_SIZE = System::Int8(0xf);
static _DELPHI_CONST System::Int8 GLX_ACCUM_BLUE_SIZE = System::Int8(0x10);
static _DELPHI_CONST System::Int8 GLX_ACCUM_ALPHA_SIZE = System::Int8(0x11);
static _DELPHI_CONST System::Int8 GLX_WINDOW_BIT = System::Int8(0x1);
static _DELPHI_CONST System::Int8 GLX_PIXMAP_BIT = System::Int8(0x2);
static _DELPHI_CONST System::Int8 GLX_PBUFFER_BIT = System::Int8(0x4);
static _DELPHI_CONST System::Int8 GLX_RGBA_BIT = System::Int8(0x1);
static _DELPHI_CONST System::Int8 GLX_COLOR_INDEX_BIT = System::Int8(0x2);
static _DELPHI_CONST int GLX_PBUFFER_CLOBBER_MASK = int(0x8000000);
static _DELPHI_CONST System::Int8 GLX_FRONT_LEFT_BUFFER_BIT = System::Int8(0x1);
static _DELPHI_CONST System::Int8 GLX_FRONT_RIGHT_BUFFER_BIT = System::Int8(0x2);
static _DELPHI_CONST System::Int8 GLX_BACK_LEFT_BUFFER_BIT = System::Int8(0x4);
static _DELPHI_CONST System::Int8 GLX_BACK_RIGHT_BUFFER_BIT = System::Int8(0x8);
static _DELPHI_CONST System::Int8 GLX_AUX_BUFFERS_BIT = System::Int8(0x10);
static _DELPHI_CONST System::Int8 GLX_DEPTH_BUFFER_BIT = System::Int8(0x20);
static _DELPHI_CONST System::Int8 GLX_STENCIL_BUFFER_BIT = System::Int8(0x40);
static _DELPHI_CONST System::Byte GLX_ACCUM_BUFFER_BIT = System::Byte(0x80);
static _DELPHI_CONST System::Int8 GLX_CONFIG_CAVEAT = System::Int8(0x20);
static _DELPHI_CONST System::Int8 GLX_X_VISUAL_TYPE = System::Int8(0x22);
static _DELPHI_CONST System::Int8 GLX_TRANSPARENT_TYPE = System::Int8(0x23);
static _DELPHI_CONST System::Int8 GLX_TRANSPARENT_INDEX_VALUE = System::Int8(0x24);
static _DELPHI_CONST System::Int8 GLX_TRANSPARENT_RED_VALUE = System::Int8(0x25);
static _DELPHI_CONST System::Int8 GLX_TRANSPARENT_GREEN_VALUE = System::Int8(0x26);
static _DELPHI_CONST System::Int8 GLX_TRANSPARENT_BLUE_VALUE = System::Int8(0x27);
static _DELPHI_CONST System::Int8 GLX_TRANSPARENT_ALPHA_VALUE = System::Int8(0x28);
static _DELPHI_CONST unsigned GLX_DONT_CARE = unsigned(0xffffffff);
static _DELPHI_CONST System::Word GLX_NONE = System::Word(0x8000);
static _DELPHI_CONST System::Word GLX_SLOW_CONFIG = System::Word(0x8001);
static _DELPHI_CONST System::Word GLX_TRUE_COLOR = System::Word(0x8002);
static _DELPHI_CONST System::Word GLX_DIRECT_COLOR = System::Word(0x8003);
static _DELPHI_CONST System::Word GLX_PSEUDO_COLOR = System::Word(0x8004);
static _DELPHI_CONST System::Word GLX_STATIC_COLOR = System::Word(0x8005);
static _DELPHI_CONST System::Word GLX_GRAY_SCALE = System::Word(0x8006);
static _DELPHI_CONST System::Word GLX_STATIC_GRAY = System::Word(0x8007);
static _DELPHI_CONST System::Word GLX_TRANSPARENT_RGB = System::Word(0x8008);
static _DELPHI_CONST System::Word GLX_TRANSPARENT_INDEX = System::Word(0x8009);
static _DELPHI_CONST System::Word GLX_VISUAL_ID = System::Word(0x800b);
static _DELPHI_CONST System::Word GLX_SCREEN = System::Word(0x800c);
static _DELPHI_CONST System::Word GLX_NON_CONFORMANT_CONFIG = System::Word(0x800d);
static _DELPHI_CONST System::Word GLX_DRAWABLE_TYPE = System::Word(0x8010);
static _DELPHI_CONST System::Word GLX_RENDER_TYPE = System::Word(0x8011);
static _DELPHI_CONST System::Word GLX_X_RENDERABLE = System::Word(0x8012);
static _DELPHI_CONST System::Word GLX_FBCONFIG_ID = System::Word(0x8013);
static _DELPHI_CONST System::Word GLX_RGBA_TYPE = System::Word(0x8014);
static _DELPHI_CONST System::Word GLX_COLOR_INDEX_TYPE = System::Word(0x8015);
static _DELPHI_CONST System::Word GLX_MAX_PBUFFER_WIDTH = System::Word(0x8016);
static _DELPHI_CONST System::Word GLX_MAX_PBUFFER_HEIGHT = System::Word(0x8017);
static _DELPHI_CONST System::Word GLX_MAX_PBUFFER_PIXELS = System::Word(0x8018);
static _DELPHI_CONST System::Word GLX_PRESERVED_CONTENTS = System::Word(0x801b);
static _DELPHI_CONST System::Word GLX_LARGEST_PBUFFER = System::Word(0x801c);
static _DELPHI_CONST System::Word GLX_WIDTH = System::Word(0x801d);
static _DELPHI_CONST System::Word GLX_HEIGHT = System::Word(0x801e);
static _DELPHI_CONST System::Word GLX_EVENT_MASK = System::Word(0x801f);
static _DELPHI_CONST System::Word GLX_DAMAGED = System::Word(0x8020);
static _DELPHI_CONST System::Word GLX_SAVED = System::Word(0x8021);
static _DELPHI_CONST System::Word GLX_WINDOW = System::Word(0x8022);
static _DELPHI_CONST System::Word GLX_PBUFFER = System::Word(0x8023);
static _DELPHI_CONST System::Word GLX_PBUFFER_HEIGHT = System::Word(0x8040);
static _DELPHI_CONST System::Word GLX_PBUFFER_WIDTH = System::Word(0x8041);
static _DELPHI_CONST int GLX_SAMPLE_BUFFERS = int(0x186a0);
static _DELPHI_CONST int GLX_SAMPLES = int(0x186a1);
static _DELPHI_CONST int GLX_SAMPLE_BUFFERS_ARB = int(0x186a0);
static _DELPHI_CONST int GLX_SAMPLES_ARB = int(0x186a1);
static _DELPHI_CONST System::Int8 GLX_CONTEXT_RESET_ISOLATION_BIT_ARB = System::Int8(0x8);
static _DELPHI_CONST System::Word GLX_RGBA_FLOAT_TYPE_ARB = System::Word(0x20b9);
static _DELPHI_CONST System::Int8 GLX_RGBA_FLOAT_BIT_ARB = System::Int8(0x4);
static _DELPHI_CONST System::Word GLX_CONTEXT_RELEASE_BEHAVIOR_ARB = System::Word(0x2097);
static _DELPHI_CONST System::Int8 GLX_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB = System::Int8(0x0);
static _DELPHI_CONST System::Word GLX_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB = System::Word(0x2098);
static _DELPHI_CONST System::Int8 GLX_CONTEXT_DEBUG_BIT_ARB = System::Int8(0x1);
static _DELPHI_CONST System::Int8 GLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB = System::Int8(0x2);
static _DELPHI_CONST System::Word GLX_CONTEXT_MAJOR_VERSION_ARB = System::Word(0x2091);
static _DELPHI_CONST System::Word GLX_CONTEXT_MINOR_VERSION_ARB = System::Word(0x2092);
static _DELPHI_CONST System::Word GLX_CONTEXT_FLAGS_ARB = System::Word(0x2094);
static _DELPHI_CONST System::Int8 GLX_CONTEXT_CORE_PROFILE_BIT_ARB = System::Int8(0x1);
static _DELPHI_CONST System::Int8 GLX_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB = System::Int8(0x2);
static _DELPHI_CONST System::Word GLX_CONTEXT_PROFILE_MASK_ARB = System::Word(0x9126);
static _DELPHI_CONST System::Word GLX_CONTEXT_ALLOW_BUFFER_BYTE_ORDER_MISMATCH_ARB = System::Word(0x2095);
static _DELPHI_CONST System::Word GLX_FRAMEBUFFER_SRGB_CAPABLE_ARB = System::Word(0x20b2);
static _DELPHI_CONST System::Int8 GLX_CONTEXT_ROBUST_ACCESS_BIT_ARB = System::Int8(0x4);
static _DELPHI_CONST System::Word GLX_LOSE_CONTEXT_ON_RESET_ARB = System::Word(0x8252);
static _DELPHI_CONST System::Word GLX_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB = System::Word(0x8256);
static _DELPHI_CONST System::Word GLX_NO_RESET_NOTIFICATION_ARB = System::Word(0x8261);
static _DELPHI_CONST System::Int8 GLX_X_VISUAL_TYPE_EXT = System::Int8(0x22);
static _DELPHI_CONST System::Int8 GLX_TRANSPARENT_TYPE_EXT = System::Int8(0x23);
static _DELPHI_CONST System::Int8 GLX_TRANSPARENT_INDEX_VALUE_EXT = System::Int8(0x24);
static _DELPHI_CONST System::Int8 GLX_TRANSPARENT_RED_VALUE_EXT = System::Int8(0x25);
static _DELPHI_CONST System::Int8 GLX_TRANSPARENT_GREEN_VALUE_EXT = System::Int8(0x26);
static _DELPHI_CONST System::Int8 GLX_TRANSPARENT_BLUE_VALUE_EXT = System::Int8(0x27);
static _DELPHI_CONST System::Int8 GLX_TRANSPARENT_ALPHA_VALUE_EXT = System::Int8(0x28);
static _DELPHI_CONST System::Word GLX_NONE_EXT = System::Word(0x8000);
static _DELPHI_CONST System::Word GLX_TRUE_COLOR_EXT = System::Word(0x8002);
static _DELPHI_CONST System::Word GLX_DIRECT_COLOR_EXT = System::Word(0x8003);
static _DELPHI_CONST System::Word GLX_PSEUDO_COLOR_EXT = System::Word(0x8004);
static _DELPHI_CONST System::Word GLX_STATIC_COLOR_EXT = System::Word(0x8005);
static _DELPHI_CONST System::Word GLX_GRAY_SCALE_EXT = System::Word(0x8006);
static _DELPHI_CONST System::Word GLX_STATIC_GRAY_EXT = System::Word(0x8007);
static _DELPHI_CONST System::Word GLX_TRANSPARENT_RGB_EXT = System::Word(0x8008);
static _DELPHI_CONST System::Word GLX_TRANSPARENT_INDEX_EXT = System::Word(0x8009);
static _DELPHI_CONST System::Int8 GLX_VISUAL_CAVEAT_EXT = System::Int8(0x20);
static _DELPHI_CONST System::Word GLX_SLOW_VISUAL_EXT = System::Word(0x8001);
static _DELPHI_CONST System::Word GLX_NON_CONFORMANT_VISUAL_EXT = System::Word(0x800d);
static _DELPHI_CONST System::Word GLX_SHARE_CONTEXT_EXT = System::Word(0x800a);
static _DELPHI_CONST System::Word GLX_VISUAL_ID_EXT = System::Word(0x800b);
static _DELPHI_CONST System::Word GLX_SCREEN_EXT = System::Word(0x800c);
static _DELPHI_CONST System::Int8 GLX_TEXTURE_1D_BIT_EXT = System::Int8(0x1);
static _DELPHI_CONST System::Int8 GLX_TEXTURE_2D_BIT_EXT = System::Int8(0x2);
static _DELPHI_CONST System::Int8 GLX_TEXTURE_RECTANGLE_BIT_EXT = System::Int8(0x4);
static _DELPHI_CONST System::Word GLX_BIND_TO_TEXTURE_RGB_EXT = System::Word(0x20d0);
static _DELPHI_CONST System::Word GLX_BIND_TO_TEXTURE_RGBA_EXT = System::Word(0x20d1);
static _DELPHI_CONST System::Word GLX_BIND_TO_MIPMAP_TEXTURE_EXT = System::Word(0x20d2);
static _DELPHI_CONST System::Word GLX_BIND_TO_TEXTURE_TARGETS_EXT = System::Word(0x20d3);
static _DELPHI_CONST System::Word GLX_Y_INVERTED_EXT = System::Word(0x20d4);
static _DELPHI_CONST System::Word GLX_TEXTURE_FORMAT_EXT = System::Word(0x20d5);
static _DELPHI_CONST System::Word GLX_TEXTURE_TARGET_EXT = System::Word(0x20d6);
static _DELPHI_CONST System::Word GLX_MIPMAP_TEXTURE_EXT = System::Word(0x20d7);
static _DELPHI_CONST System::Word GLX_TEXTURE_FORMAT_NONE_EXT = System::Word(0x20d8);
static _DELPHI_CONST System::Word GLX_TEXTURE_FORMAT_RGB_EXT = System::Word(0x20d9);
static _DELPHI_CONST System::Word GLX_TEXTURE_FORMAT_RGBA_EXT = System::Word(0x20da);
static _DELPHI_CONST System::Word GLX_TEXTURE_1D_EXT = System::Word(0x20db);
static _DELPHI_CONST System::Word GLX_TEXTURE_2D_EXT = System::Word(0x20dc);
static _DELPHI_CONST System::Word GLX_TEXTURE_RECTANGLE_EXT = System::Word(0x20dd);
static _DELPHI_CONST System::Word GLX_FRONT_LEFT_EXT = System::Word(0x20de);
static _DELPHI_CONST System::Word GLX_FRONT_RIGHT_EXT = System::Word(0x20df);
static _DELPHI_CONST System::Word GLX_BACK_LEFT_EXT = System::Word(0x20e0);
static _DELPHI_CONST System::Word GLX_BACK_RIGHT_EXT = System::Word(0x20e1);
static _DELPHI_CONST System::Word GLX_FRONT_EXT = System::Word(0x20de);
static _DELPHI_CONST System::Word GLX_BACK_EXT = System::Word(0x20e0);
static _DELPHI_CONST System::Word GLX_AUX0_EXT = System::Word(0x20e2);
static _DELPHI_CONST System::Word GLX_AUX1_EXT = System::Word(0x20e3);
static _DELPHI_CONST System::Word GLX_AUX2_EXT = System::Word(0x20e4);
static _DELPHI_CONST System::Word GLX_AUX3_EXT = System::Word(0x20e5);
static _DELPHI_CONST System::Word GLX_AUX4_EXT = System::Word(0x20e6);
static _DELPHI_CONST System::Word GLX_AUX5_EXT = System::Word(0x20e7);
static _DELPHI_CONST System::Word GLX_AUX6_EXT = System::Word(0x20e8);
static _DELPHI_CONST System::Word GLX_AUX7_EXT = System::Word(0x20e9);
static _DELPHI_CONST System::Word GLX_AUX8_EXT = System::Word(0x20ea);
static _DELPHI_CONST System::Word GLX_AUX9_EXT = System::Word(0x20eb);
static _DELPHI_CONST System::Word GLX_SWAP_INTERVAL_EXT = System::Word(0x20f1);
static _DELPHI_CONST System::Word GLX_MAX_SWAP_INTERVAL_EXT = System::Word(0x20f2);
static _DELPHI_CONST System::Int8 GLX_CONTEXT_ES2_PROFILE_BIT_EXT = System::Int8(0x4);
static _DELPHI_CONST System::Word GLX_LATE_SWAPS_TEAR_EXT = System::Word(0x20f3);
static _DELPHI_CONST int GLU_INVALID_ENUM = int(0x18a24);
static _DELPHI_CONST int GLU_INVALID_VALUE = int(0x18a25);
static _DELPHI_CONST int GLU_OUT_OF_MEMORY = int(0x18a26);
static _DELPHI_CONST int GLU_INCOMPATIBLE_GL_VERSION = int(0x18a27);
static _DELPHI_CONST int GLU_VERSION = int(0x189c0);
static _DELPHI_CONST int GLU_EXTENSIONS = int(0x189c1);
static _DELPHI_CONST System::Int8 GLU_TRUE = System::Int8(0x1);
static _DELPHI_CONST System::Int8 GLU_FALSE = System::Int8(0x0);
static _DELPHI_CONST int GLU_SMOOTH = int(0x186a0);
static _DELPHI_CONST int GLU_FLAT = int(0x186a1);
static _DELPHI_CONST int GLU_NONE = int(0x186a2);
static _DELPHI_CONST int GLU_POINT = int(0x186aa);
static _DELPHI_CONST int GLU_LINE = int(0x186ab);
static _DELPHI_CONST int GLU_FILL = int(0x186ac);
static _DELPHI_CONST int GLU_SILHOUETTE = int(0x186ad);
static _DELPHI_CONST int GLU_OUTSIDE = int(0x186b4);
static _DELPHI_CONST int GLU_INSIDE = int(0x186b5);
static const double GLU_TESS_MAX_COORD = 1.000000E+150;
static _DELPHI_CONST int GLU_TESS_WINDING_RULE = int(0x1872c);
static _DELPHI_CONST int GLU_TESS_BOUNDARY_ONLY = int(0x1872d);
static _DELPHI_CONST int GLU_TESS_TOLERANCE = int(0x1872e);
static _DELPHI_CONST int GLU_TESS_WINDING_ODD = int(0x18722);
static _DELPHI_CONST int GLU_TESS_WINDING_NONZERO = int(0x18723);
static _DELPHI_CONST int GLU_TESS_WINDING_POSITIVE = int(0x18724);
static _DELPHI_CONST int GLU_TESS_WINDING_NEGATIVE = int(0x18725);
static _DELPHI_CONST int GLU_TESS_WINDING_ABS_GEQ_TWO = int(0x18726);
static _DELPHI_CONST int GLU_TESS_BEGIN = int(0x18704);
static _DELPHI_CONST int GLU_TESS_VERTEX = int(0x18705);
static _DELPHI_CONST int GLU_TESS_END = int(0x18706);
static _DELPHI_CONST int GLU_TESS_ERROR = int(0x18707);
static _DELPHI_CONST int GLU_TESS_EDGE_FLAG = int(0x18708);
static _DELPHI_CONST int GLU_TESS_COMBINE = int(0x18709);
static _DELPHI_CONST int GLU_TESS_BEGIN_DATA = int(0x1870a);
static _DELPHI_CONST int GLU_TESS_VERTEX_DATA = int(0x1870b);
static _DELPHI_CONST int GLU_TESS_END_DATA = int(0x1870c);
static _DELPHI_CONST int GLU_TESS_ERROR_DATA = int(0x1870d);
static _DELPHI_CONST int GLU_TESS_EDGE_FLAG_DATA = int(0x1870e);
static _DELPHI_CONST int GLU_TESS_COMBINE_DATA = int(0x1870f);
static _DELPHI_CONST int GLU_TESS_ERROR1 = int(0x18737);
static _DELPHI_CONST int GLU_TESS_ERROR2 = int(0x18738);
static _DELPHI_CONST int GLU_TESS_ERROR3 = int(0x18739);
static _DELPHI_CONST int GLU_TESS_ERROR4 = int(0x1873a);
static _DELPHI_CONST int GLU_TESS_ERROR5 = int(0x1873b);
static _DELPHI_CONST int GLU_TESS_ERROR6 = int(0x1873c);
static _DELPHI_CONST int GLU_TESS_ERROR7 = int(0x1873d);
static _DELPHI_CONST int GLU_TESS_ERROR8 = int(0x1873e);
static _DELPHI_CONST int GLU_TESS_MISSING_BEGIN_POLYGON = int(0x18737);
static _DELPHI_CONST int GLU_TESS_MISSING_BEGIN_CONTOUR = int(0x18738);
static _DELPHI_CONST int GLU_TESS_MISSING_END_POLYGON = int(0x18739);
static _DELPHI_CONST int GLU_TESS_MISSING_END_CONTOUR = int(0x1873a);
static _DELPHI_CONST int GLU_TESS_COORD_TOO_LARGE = int(0x1873b);
static _DELPHI_CONST int GLU_TESS_NEED_COMBINE_CALLBACK = int(0x1873c);
static _DELPHI_CONST int GLU_AUTO_LOAD_MATRIX = int(0x18768);
static _DELPHI_CONST int GLU_CULLING = int(0x18769);
static _DELPHI_CONST int GLU_SAMPLING_TOLERANCE = int(0x1876b);
static _DELPHI_CONST int GLU_DISPLAY_MODE = int(0x1876c);
static _DELPHI_CONST int GLU_PARAMETRIC_TOLERANCE = int(0x1876a);
static _DELPHI_CONST int GLU_SAMPLING_METHOD = int(0x1876d);
static _DELPHI_CONST int GLU_U_STEP = int(0x1876e);
static _DELPHI_CONST int GLU_V_STEP = int(0x1876f);
static _DELPHI_CONST int GLU_PATH_LENGTH = int(0x18777);
static _DELPHI_CONST int GLU_PARAMETRIC_ERROR = int(0x18778);
static _DELPHI_CONST int GLU_DOMAIN_DISTANCE = int(0x18779);
static _DELPHI_CONST int GLU_MAP1_TRIM_2 = int(0x18772);
static _DELPHI_CONST int GLU_MAP1_TRIM_3 = int(0x18773);
static _DELPHI_CONST int GLU_OUTLINE_POLYGON = int(0x18790);
static _DELPHI_CONST int GLU_OUTLINE_PATCH = int(0x18791);
static _DELPHI_CONST int GLU_NURBS_ERROR1 = int(0x1879b);
static _DELPHI_CONST int GLU_NURBS_ERROR2 = int(0x1879c);
static _DELPHI_CONST int GLU_NURBS_ERROR3 = int(0x1879d);
static _DELPHI_CONST int GLU_NURBS_ERROR4 = int(0x1879e);
static _DELPHI_CONST int GLU_NURBS_ERROR5 = int(0x1879f);
static _DELPHI_CONST int GLU_NURBS_ERROR6 = int(0x187a0);
static _DELPHI_CONST int GLU_NURBS_ERROR7 = int(0x187a1);
static _DELPHI_CONST int GLU_NURBS_ERROR8 = int(0x187a2);
static _DELPHI_CONST int GLU_NURBS_ERROR9 = int(0x187a3);
static _DELPHI_CONST int GLU_NURBS_ERROR10 = int(0x187a4);
static _DELPHI_CONST int GLU_NURBS_ERROR11 = int(0x187a5);
static _DELPHI_CONST int GLU_NURBS_ERROR12 = int(0x187a6);
static _DELPHI_CONST int GLU_NURBS_ERROR13 = int(0x187a7);
static _DELPHI_CONST int GLU_NURBS_ERROR14 = int(0x187a8);
static _DELPHI_CONST int GLU_NURBS_ERROR15 = int(0x187a9);
static _DELPHI_CONST int GLU_NURBS_ERROR16 = int(0x187aa);
static _DELPHI_CONST int GLU_NURBS_ERROR17 = int(0x187ab);
static _DELPHI_CONST int GLU_NURBS_ERROR18 = int(0x187ac);
static _DELPHI_CONST int GLU_NURBS_ERROR19 = int(0x187ad);
static _DELPHI_CONST int GLU_NURBS_ERROR20 = int(0x187ae);
static _DELPHI_CONST int GLU_NURBS_ERROR21 = int(0x187af);
static _DELPHI_CONST int GLU_NURBS_ERROR22 = int(0x187b0);
static _DELPHI_CONST int GLU_NURBS_ERROR23 = int(0x187b1);
static _DELPHI_CONST int GLU_NURBS_ERROR24 = int(0x187b2);
static _DELPHI_CONST int GLU_NURBS_ERROR25 = int(0x187b3);
static _DELPHI_CONST int GLU_NURBS_ERROR26 = int(0x187b4);
static _DELPHI_CONST int GLU_NURBS_ERROR27 = int(0x187b5);
static _DELPHI_CONST int GLU_NURBS_ERROR28 = int(0x187b6);
static _DELPHI_CONST int GLU_NURBS_ERROR29 = int(0x187b7);
static _DELPHI_CONST int GLU_NURBS_ERROR30 = int(0x187b8);
static _DELPHI_CONST int GLU_NURBS_ERROR31 = int(0x187b9);
static _DELPHI_CONST int GLU_NURBS_ERROR32 = int(0x187ba);
static _DELPHI_CONST int GLU_NURBS_ERROR33 = int(0x187bb);
static _DELPHI_CONST int GLU_NURBS_ERROR34 = int(0x187bc);
static _DELPHI_CONST int GLU_NURBS_ERROR35 = int(0x187bd);
static _DELPHI_CONST int GLU_NURBS_ERROR36 = int(0x187be);
static _DELPHI_CONST int GLU_NURBS_ERROR37 = int(0x187bf);
static _DELPHI_CONST int GLU_CW = int(0x18718);
static _DELPHI_CONST int GLU_CCW = int(0x18719);
static _DELPHI_CONST int GLU_INTERIOR = int(0x1871a);
static _DELPHI_CONST int GLU_EXTERIOR = int(0x1871b);
static _DELPHI_CONST int GLU_UNKNOWN = int(0x1871c);
static _DELPHI_CONST int GLU_BEGIN = int(0x18704);
static _DELPHI_CONST int GLU_VERTEX = int(0x18705);
static _DELPHI_CONST int GLU_END = int(0x18706);
static _DELPHI_CONST int GLU_ERROR = int(0x18707);
static _DELPHI_CONST int GLU_EDGE_FLAG = int(0x18708);
extern "C" void __stdcall glAccum(TGLuint op, float value);
extern "C" void __stdcall glAlphaFunc(unsigned func, TGLclampf ref);
extern "C" TGLboolean __stdcall glAreTexturesResident(TGLsizei n, PGLuint Textures, PGLboolean residences);
extern "C" void __stdcall glArrayElement(TGLint i);
extern "C" void __stdcall glBegin(unsigned mode);
extern "C" void __stdcall glBindTexture(unsigned target, TGLuint texture);
extern "C" void __stdcall glBitmap(TGLsizei width, TGLsizei height, float xorig, float yorig, float xmove, float ymove, void * bitmap);
extern "C" void __stdcall glBlendFunc(unsigned sfactor, unsigned dfactor);
extern "C" void __stdcall glCallList(TGLuint list);
extern "C" void __stdcall glCallLists(TGLsizei n, unsigned atype, void * lists);
extern "C" void __stdcall glClear(TGLbitfield mask);
extern "C" void __stdcall glClearAccum(float red, float green, float blue, float alpha);
extern "C" void __stdcall glClearColor(TGLclampf red, TGLclampf green, TGLclampf blue, TGLclampf alpha);
extern "C" void __stdcall glClearDepth(TGLclampd depth);
extern "C" void __stdcall glClearIndex(float c);
extern "C" void __stdcall glClearStencil(TGLint s);
extern "C" void __stdcall glClipPlane(unsigned plane, PGLdouble equation);
extern "C" void __stdcall glColor3b(TGLbyte red, TGLbyte green, TGLbyte blue);
extern "C" void __stdcall glColor3bv(PGLbyte v);
extern "C" void __stdcall glColor3d(TGLdouble red, TGLdouble green, TGLdouble blue);
extern "C" void __stdcall glColor3dv(PGLdouble v);
extern "C" void __stdcall glColor3f(float red, float green, float blue);
extern "C" void __stdcall glColor3fv(PGLfloat v);
extern "C" void __stdcall glColor3i(TGLint red, TGLint green, TGLint blue);
extern "C" void __stdcall glColor3iv(PGLint v);
extern "C" void __stdcall glColor3s(TGLshort red, TGLshort green, TGLshort blue);
extern "C" void __stdcall glColor3sv(PGLshort v);
extern "C" void __stdcall glColor3ub(TGLubyte red, TGLubyte green, TGLubyte blue);
extern "C" void __stdcall glColor3ubv(PGLubyte v);
extern "C" void __stdcall glColor3ui(TGLuint red, TGLuint green, TGLuint blue);
extern "C" void __stdcall glColor3uiv(PGLuint v);
extern "C" void __stdcall glColor3us(TGLushort red, TGLushort green, TGLushort blue);
extern "C" void __stdcall glColor3usv(PGLushort v);
extern "C" void __stdcall glColor4b(TGLbyte red, TGLbyte green, TGLbyte blue, TGLbyte alpha);
extern "C" void __stdcall glColor4bv(PGLbyte v);
extern "C" void __stdcall glColor4d(TGLdouble red, TGLdouble green, TGLdouble blue, TGLdouble alpha);
extern "C" void __stdcall glColor4dv(PGLdouble v);
extern "C" void __stdcall glColor4f(float red, float green, float blue, float alpha);
extern "C" void __stdcall glColor4fv(PGLfloat v);
extern "C" void __stdcall glColor4i(TGLint red, TGLint green, TGLint blue, TGLint alpha);
extern "C" void __stdcall glColor4iv(PGLint v);
extern "C" void __stdcall glColor4s(TGLshort red, TGLshort green, TGLshort blue, TGLshort alpha);
extern "C" void __stdcall glColor4sv(TGLshort v);
extern "C" void __stdcall glColor4ub(TGLubyte red, TGLubyte green, TGLubyte blue, TGLubyte alpha);
extern "C" void __stdcall glColor4ubv(PGLubyte v);
extern "C" void __stdcall glColor4ui(TGLuint red, TGLuint green, TGLuint blue, TGLuint alpha);
extern "C" void __stdcall glColor4uiv(PGLuint v);
extern "C" void __stdcall glColor4us(TGLushort red, TGLushort green, TGLushort blue, TGLushort alpha);
extern "C" void __stdcall glColor4usv(PGLushort v);
extern "C" void __stdcall glColorMask(TGLboolean red, TGLboolean green, TGLboolean blue, TGLboolean alpha);
extern "C" void __stdcall glColorMaterial(unsigned face, unsigned mode);
extern "C" void __stdcall glColorPointer(TGLint size, unsigned atype, TGLsizei stride, void * data);
extern "C" void __stdcall glCopyPixels(TGLint x, TGLint y, TGLsizei width, TGLsizei height, unsigned atype);
extern "C" void __stdcall glCopyTexImage1D(unsigned target, TGLint level, unsigned internalFormat, TGLint x, TGLint y, TGLsizei width, TGLint border);
extern "C" void __stdcall glCopyTexImage2D(unsigned target, TGLint level, unsigned internalFormat, TGLint x, TGLint y, TGLsizei width, TGLsizei height, TGLint border);
extern "C" void __stdcall glCopyTexSubImage1D(unsigned target, TGLint level, TGLint xoffset, TGLint x, TGLint y, TGLsizei width);
extern "C" void __stdcall glCopyTexSubImage2D(unsigned target, TGLint level, TGLint xoffset, TGLint yoffset, TGLint x, TGLint y, TGLsizei width, TGLsizei height);
extern "C" void __stdcall glCullFace(unsigned mode);
extern "C" void __stdcall glDeleteLists(TGLuint list, TGLsizei range);
extern "C" void __stdcall glDeleteTextures(TGLsizei n, PGLuint textures);
extern "C" void __stdcall glDepthFunc(unsigned func);
extern "C" void __stdcall glDepthMask(TGLboolean flag);
extern "C" void __stdcall glDepthRange(TGLclampd zNear, TGLclampd zFar);
extern "C" void __stdcall glDisable(unsigned cap);
extern "C" void __stdcall glDisableClientState(unsigned aarray);
extern "C" void __stdcall glDrawArrays(unsigned mode, TGLint first, TGLsizei count);
extern "C" void __stdcall glDrawBuffer(unsigned mode);
extern "C" void __stdcall glDrawElements(unsigned mode, TGLsizei count, unsigned atype, void * indices);
extern "C" void __stdcall glDrawPixels(TGLsizei width, TGLsizei height, unsigned format, unsigned atype, void * pixels);
extern "C" void __stdcall glEdgeFlag(TGLboolean flag);
extern "C" void __stdcall glEdgeFlagPointer(TGLsizei stride, void * data);
extern "C" void __stdcall glEdgeFlagv(PGLboolean flag);
extern "C" void __stdcall glEnable(unsigned cap);
extern "C" void __stdcall glEnableClientState(unsigned aarray);
extern "C" void __stdcall glEnd(void);
extern "C" void __stdcall glEndList(void);
extern "C" void __stdcall glEvalCoord1d(TGLdouble u);
extern "C" void __stdcall glEvalCoord1dv(PGLdouble u);
extern "C" void __stdcall glEvalCoord1f(float u);
extern "C" void __stdcall glEvalCoord1fv(PGLfloat u);
extern "C" void __stdcall glEvalCoord2d(TGLdouble u, TGLdouble v);
extern "C" void __stdcall glEvalCoord2dv(PGLdouble u);
extern "C" void __stdcall glEvalCoord2f(float u, float v);
extern "C" void __stdcall glEvalCoord2fv(PGLfloat u);
extern "C" void __stdcall glEvalMesh1(unsigned mode, TGLint i1, TGLint i2);
extern "C" void __stdcall glEvalMesh2(unsigned mode, TGLint i1, TGLint i2, TGLint j1, TGLint j2);
extern "C" void __stdcall glEvalPoint1(TGLint i);
extern "C" void __stdcall glEvalPoint2(TGLint i, TGLint j);
extern "C" void __stdcall glFeedbackBuffer(TGLsizei size, unsigned atype, PGLfloat buffer);
extern "C" void __stdcall glFinish(void);
extern "C" void __stdcall glFlush(void);
extern "C" void __stdcall glFogf(unsigned pname, float param);
extern "C" void __stdcall glFogfv(unsigned pname, PGLfloat params);
extern "C" void __stdcall glFogi(unsigned pname, TGLint param);
extern "C" void __stdcall glFogiv(unsigned pname, PGLint params);
extern "C" void __stdcall glFrontFace(unsigned mode);
extern "C" void __stdcall glFrustum(TGLdouble left, TGLdouble right, TGLdouble bottom, TGLdouble top, TGLdouble zNear, TGLdouble zFar);
extern "C" TGLuint __stdcall glGenLists(TGLsizei range);
extern "C" void __stdcall glGenTextures(TGLsizei n, PGLuint textures);
extern "C" void __stdcall glGetBooleanv(unsigned pname, PGLboolean params);
extern "C" void __stdcall glGetClipPlane(unsigned plane, PGLdouble equation);
extern "C" void __stdcall glGetDoublev(unsigned pname, PGLdouble params);
extern "C" TGLuint __stdcall glGetError(void);
extern "C" void __stdcall glGetFloatv(unsigned pname, PGLfloat params);
extern "C" void __stdcall glGetIntegerv(unsigned pname, PGLint params);
extern "C" void __stdcall glGetLightfv(unsigned light, unsigned pname, PGLfloat params);
extern "C" void __stdcall glGetLightiv(unsigned light, unsigned pname, PGLint params);
extern "C" void __stdcall glGetMapdv(unsigned target, unsigned query, PGLdouble v);
extern "C" void __stdcall glGetMapfv(unsigned target, unsigned query, PGLfloat v);
extern "C" void __stdcall glGetMapiv(unsigned target, unsigned query, PGLint v);
extern "C" void __stdcall glGetMaterialfv(unsigned face, unsigned pname, PGLfloat params);
extern "C" void __stdcall glGetMaterialiv(unsigned face, unsigned pname, PGLint params);
extern "C" void __stdcall glGetPixelMapfv(unsigned map, PGLfloat values);
extern "C" void __stdcall glGetPixelMapuiv(unsigned map, PGLuint values);
extern "C" void __stdcall glGetPixelMapusv(unsigned map, PGLushort values);
extern "C" void __stdcall glGetPointerv(unsigned pname, void *params);
extern "C" void __stdcall glGetPolygonStipple(PGLubyte mask);
extern "C" System::WideChar * __stdcall glGetString(unsigned name);
extern "C" void __stdcall glGetTexEnvfv(unsigned target, unsigned pname, PGLfloat params);
extern "C" void __stdcall glGetTexEnviv(unsigned target, unsigned pname, PGLint params);
extern "C" void __stdcall glGetTexGendv(unsigned coord, unsigned pname, PGLdouble params);
extern "C" void __stdcall glGetTexGenfv(unsigned coord, unsigned pname, PGLfloat params);
extern "C" void __stdcall glGetTexGeniv(unsigned coord, unsigned pname, PGLint params);
extern "C" void __stdcall glGetTexImage(unsigned target, TGLint level, unsigned format, unsigned atype, void * pixels);
extern "C" void __stdcall glGetTexLevelParameterfv(unsigned target, TGLint level, unsigned pname, PGLfloat params);
extern "C" void __stdcall glGetTexLevelParameteriv(unsigned target, TGLint level, unsigned pname, PGLint params);
extern "C" void __stdcall glGetTexParameterfv(unsigned target, unsigned pname, PGLfloat params);
extern "C" void __stdcall glGetTexParameteriv(unsigned target, unsigned pname, PGLint params);
extern "C" void __stdcall glHint(unsigned target, unsigned mode);
extern "C" void __stdcall glIndexMask(TGLuint mask);
extern "C" void __stdcall glIndexPointer(unsigned atype, TGLsizei stride, void * data);
extern "C" void __stdcall glIndexd(TGLdouble c);
extern "C" void __stdcall glIndexdv(PGLdouble c);
extern "C" void __stdcall glIndexf(float c);
extern "C" void __stdcall glIndexfv(PGLfloat c);
extern "C" void __stdcall glIndexi(TGLint c);
extern "C" void __stdcall glIndexiv(PGLint c);
extern "C" void __stdcall glIndexs(TGLshort c);
extern "C" void __stdcall glIndexsv(PGLshort c);
extern "C" void __stdcall glIndexub(TGLubyte c);
extern "C" void __stdcall glIndexubv(PGLubyte c);
extern "C" void __stdcall glInitNames(void);
extern "C" void __stdcall glInterleavedArrays(unsigned format, TGLsizei stride, void * data);
extern "C" TGLboolean __stdcall glIsEnabled(unsigned cap);
extern "C" TGLboolean __stdcall glIsList(TGLuint list);
extern "C" TGLboolean __stdcall glIsTexture(TGLuint texture);
extern "C" void __stdcall glLightModelf(unsigned pname, float param);
extern "C" void __stdcall glLightModelfv(unsigned pname, PGLfloat params);
extern "C" void __stdcall glLightModeli(unsigned pname, TGLint param);
extern "C" void __stdcall glLightModeliv(unsigned pname, PGLint params);
extern "C" void __stdcall glLightf(unsigned light, unsigned pname, float param);
extern "C" void __stdcall glLightfv(unsigned light, unsigned pname, PGLfloat params);
extern "C" void __stdcall glLighti(unsigned light, unsigned pname, TGLint param);
extern "C" void __stdcall glLightiv(unsigned light, unsigned pname, PGLint params);
extern "C" void __stdcall glLineStipple(TGLint factor, TGLushort pattern);
extern "C" void __stdcall glLineWidth(float width);
extern "C" void __stdcall glListBase(TGLuint base);
extern "C" void __stdcall glLoadIdentity(void);
extern "C" void __stdcall glLoadMatrixd(PGLdouble m);
extern "C" void __stdcall glLoadMatrixf(PGLfloat m);
extern "C" void __stdcall glLoadName(TGLuint name);
extern "C" void __stdcall glLogicOp(unsigned opcode);
extern "C" void __stdcall glMap1d(unsigned target, TGLdouble u1, TGLdouble u2, TGLint stride, TGLint order, PGLdouble points);
extern "C" void __stdcall glMap1f(unsigned target, float u1, float u2, TGLint stride, TGLint order, PGLfloat points);
extern "C" void __stdcall glMap2d(unsigned target, TGLdouble u1, TGLdouble u2, TGLint ustride, TGLint uorder, TGLdouble v1, TGLdouble v2, TGLint vstride, TGLint vorder, PGLdouble points);
extern "C" void __stdcall glMap2f(unsigned target, float u1, float u2, TGLint ustride, TGLint uorder, float v1, float v2, TGLint vstride, TGLint vorder, PGLfloat points);
extern "C" void __stdcall glMapGrid1d(TGLint un, TGLdouble u1, TGLdouble u2);
extern "C" void __stdcall glMapGrid1f(TGLint un, float u1, float u2);
extern "C" void __stdcall glMapGrid2d(TGLint un, TGLdouble u1, TGLdouble u2, TGLint vn, TGLdouble v1, TGLdouble v2);
extern "C" void __stdcall glMapGrid2f(TGLint un, float u1, float u2, TGLint vn, float v1, float v2);
extern "C" void __stdcall glMaterialf(unsigned face, unsigned pname, float param);
extern "C" void __stdcall glMaterialfv(unsigned face, unsigned pname, PGLfloat params);
extern "C" void __stdcall glMateriali(unsigned face, unsigned pname, TGLint param);
extern "C" void __stdcall glMaterialiv(unsigned face, unsigned pname, PGLint params);
extern "C" void __stdcall glMatrixMode(unsigned mode);
extern "C" void __stdcall glMultMatrixd(PGLdouble m);
extern "C" void __stdcall glMultMatrixf(PGLfloat m);
extern "C" void __stdcall glNewList(TGLuint list, unsigned mode);
extern "C" void __stdcall glNormal3b(TGLbyte nx, TGLbyte ny, TGLbyte nz);
extern "C" void __stdcall glNormal3bv(PGLbyte v);
extern "C" void __stdcall glNormal3d(TGLdouble nx, TGLdouble ny, TGLdouble nz);
extern "C" void __stdcall glNormal3dv(PGLdouble v);
extern "C" void __stdcall glNormal3f(float nx, float ny, float nz);
extern "C" void __stdcall glNormal3fv(PGLfloat v);
extern "C" void __stdcall glNormal3i(TGLint nx, TGLint ny, TGLint nz);
extern "C" void __stdcall glNormal3iv(PGLint v);
extern "C" void __stdcall glNormal3s(TGLshort nx, TGLshort ny, TGLshort nz);
extern "C" void __stdcall glNormal3sv(PGLshort v);
extern "C" void __stdcall glNormalPointer(unsigned atype, TGLsizei stride, void * data);
extern "C" void __stdcall glOrtho(TGLdouble left, TGLdouble right, TGLdouble bottom, TGLdouble top, TGLdouble zNear, TGLdouble zFar);
extern "C" void __stdcall glPassThrough(float token);
extern "C" void __stdcall glPixelMapfv(unsigned map, TGLsizei mapsize, PGLfloat values);
extern "C" void __stdcall glPixelMapuiv(unsigned map, TGLsizei mapsize, PGLuint values);
extern "C" void __stdcall glPixelMapusv(unsigned map, TGLsizei mapsize, PGLushort values);
extern "C" void __stdcall glPixelStoref(unsigned pname, float param);
extern "C" void __stdcall glPixelStorei(unsigned pname, TGLint param);
extern "C" void __stdcall glPixelTransferf(unsigned pname, float param);
extern "C" void __stdcall glPixelTransferi(unsigned pname, TGLint param);
extern "C" void __stdcall glPixelZoom(float xfactor, float yfactor);
extern "C" void __stdcall glPointSize(float size);
extern "C" void __stdcall glPolygonMode(unsigned face, unsigned mode);
extern "C" void __stdcall glPolygonOffset(float factor, float units);
extern "C" void __stdcall glPolygonStipple(PGLubyte mask);
extern "C" void __stdcall glPopAttrib(void);
extern "C" void __stdcall glPopClientAttrib(void);
extern "C" void __stdcall glPopMatrix(void);
extern "C" void __stdcall glPopName(void);
extern "C" void __stdcall glPrioritizeTextures(TGLsizei n, PGLuint textures, PGLclampf priorities);
extern "C" void __stdcall glPushAttrib(TGLbitfield mask);
extern "C" void __stdcall glPushClientAttrib(TGLbitfield mask);
extern "C" void __stdcall glPushMatrix(void);
extern "C" void __stdcall glPushName(TGLuint name);
extern "C" void __stdcall glRasterPos2d(TGLdouble x, TGLdouble y);
extern "C" void __stdcall glRasterPos2dv(PGLdouble v);
extern "C" void __stdcall glRasterPos2f(float x, float y);
extern "C" void __stdcall glRasterPos2fv(PGLfloat v);
extern "C" void __stdcall glRasterPos2i(TGLint x, TGLint y);
extern "C" void __stdcall glRasterPos2iv(PGLint v);
extern "C" void __stdcall glRasterPos2s(PGLshort x, PGLshort y);
extern "C" void __stdcall glRasterPos2sv(PGLshort v);
extern "C" void __stdcall glRasterPos3d(TGLdouble x, TGLdouble y, TGLdouble z);
extern "C" void __stdcall glRasterPos3dv(PGLdouble v);
extern "C" void __stdcall glRasterPos3f(float x, float y, float z);
extern "C" void __stdcall glRasterPos3fv(PGLfloat v);
extern "C" void __stdcall glRasterPos3i(TGLint x, TGLint y, TGLint z);
extern "C" void __stdcall glRasterPos3iv(PGLint v);
extern "C" void __stdcall glRasterPos3s(TGLshort x, TGLshort y, TGLshort z);
extern "C" void __stdcall glRasterPos3sv(PGLshort v);
extern "C" void __stdcall glRasterPos4d(TGLdouble x, TGLdouble y, TGLdouble z, TGLdouble w);
extern "C" void __stdcall glRasterPos4dv(PGLdouble v);
extern "C" void __stdcall glRasterPos4f(float x, float y, float z, float w);
extern "C" void __stdcall glRasterPos4fv(PGLfloat v);
extern "C" void __stdcall glRasterPos4i(TGLint x, TGLint y, TGLint z, TGLint w);
extern "C" void __stdcall glRasterPos4iv(PGLint v);
extern "C" void __stdcall glRasterPos4s(TGLshort x, TGLshort y, TGLshort z, TGLshort w);
extern "C" void __stdcall glRasterPos4sv(PGLshort v);
extern "C" void __stdcall glReadBuffer(unsigned mode);
extern "C" void __stdcall glReadPixels(TGLint x, TGLint y, TGLsizei width, TGLsizei height, unsigned format, unsigned atype, void * pixels);
extern "C" void __stdcall glRectd(TGLdouble x1, TGLdouble y1, TGLdouble x2, TGLdouble y2);
extern "C" void __stdcall glRectdv(PGLdouble v1, PGLdouble v2);
extern "C" void __stdcall glRectf(float x1, float y1, float x2, float y2);
extern "C" void __stdcall glRectfv(PGLfloat v1, PGLfloat v2);
extern "C" void __stdcall glRecti(TGLint x1, TGLint y1, TGLint x2, TGLint y2);
extern "C" void __stdcall glRectiv(PGLint v1, PGLint v2);
extern "C" void __stdcall glRects(TGLshort x1, TGLshort y1, TGLshort x2, TGLshort y2);
extern "C" void __stdcall glRectsv(PGLshort v1, PGLshort v2);
extern "C" TGLint __stdcall glRenderMode(unsigned mode);
extern "C" void __stdcall glRotated(TGLdouble angle, TGLdouble x, TGLdouble y, TGLdouble z);
extern "C" void __stdcall glRotatef(float angle, float x, float y, float z);
extern "C" void __stdcall glScaled(TGLdouble x, TGLdouble y, TGLdouble z);
extern "C" void __stdcall glScalef(float x, float y, float z);
extern "C" void __stdcall glScissor(TGLint x, TGLint y, TGLsizei width, TGLsizei height);
extern "C" void __stdcall glSelectBuffer(TGLsizei size, PGLuint buffer);
extern "C" void __stdcall glShadeModel(unsigned mode);
extern "C" void __stdcall glStencilFunc(unsigned func, TGLint ref, TGLuint mask);
extern "C" void __stdcall glStencilMask(TGLuint mask);
extern "C" void __stdcall glStencilOp(unsigned fail, unsigned zfail, unsigned zpass);
extern "C" void __stdcall glTexCoord1d(TGLdouble s);
extern "C" void __stdcall glTexCoord1dv(PGLdouble v);
extern "C" void __stdcall glTexCoord1f(float s);
extern "C" void __stdcall glTexCoord1fv(PGLfloat v);
extern "C" void __stdcall glTexCoord1i(TGLint s);
extern "C" void __stdcall glTexCoord1iv(PGLint v);
extern "C" void __stdcall glTexCoord1s(TGLshort s);
extern "C" void __stdcall glTexCoord1sv(PGLshort v);
extern "C" void __stdcall glTexCoord2d(TGLdouble s, TGLdouble t);
extern "C" void __stdcall glTexCoord2dv(PGLdouble v);
extern "C" void __stdcall glTexCoord2f(float s, float t);
extern "C" void __stdcall glTexCoord2fv(PGLfloat v);
extern "C" void __stdcall glTexCoord2i(TGLint s, TGLint t);
extern "C" void __stdcall glTexCoord2iv(PGLint v);
extern "C" void __stdcall glTexCoord2s(TGLshort s, TGLshort t);
extern "C" void __stdcall glTexCoord2sv(PGLshort v);
extern "C" void __stdcall glTexCoord3d(TGLdouble s, TGLdouble t, TGLdouble r);
extern "C" void __stdcall glTexCoord3dv(PGLdouble v);
extern "C" void __stdcall glTexCoord3f(float s, float t, float r);
extern "C" void __stdcall glTexCoord3fv(PGLfloat v);
extern "C" void __stdcall glTexCoord3i(TGLint s, TGLint t, TGLint r);
extern "C" void __stdcall glTexCoord3iv(PGLint v);
extern "C" void __stdcall glTexCoord3s(TGLshort s, TGLshort t, TGLshort r);
extern "C" void __stdcall glTexCoord3sv(PGLshort v);
extern "C" void __stdcall glTexCoord4d(TGLdouble s, TGLdouble t, TGLdouble r, TGLdouble q);
extern "C" void __stdcall glTexCoord4dv(PGLdouble v);
extern "C" void __stdcall glTexCoord4f(float s, float t, float r, float q);
extern "C" void __stdcall glTexCoord4fv(PGLfloat v);
extern "C" void __stdcall glTexCoord4i(TGLint s, TGLint t, TGLint r, TGLint q);
extern "C" void __stdcall glTexCoord4iv(PGLint v);
extern "C" void __stdcall glTexCoord4s(TGLshort s, TGLshort t, TGLshort r, TGLshort q);
extern "C" void __stdcall glTexCoord4sv(PGLshort v);
extern "C" void __stdcall glTexCoordPointer(TGLint size, unsigned atype, TGLsizei stride, void * data);
extern "C" void __stdcall glTexEnvf(unsigned target, unsigned pname, float param);
extern "C" void __stdcall glTexEnvfv(unsigned target, unsigned pname, PGLfloat params);
extern "C" void __stdcall glTexEnvi(unsigned target, unsigned pname, TGLint param);
extern "C" void __stdcall glTexEnviv(unsigned target, unsigned pname, PGLint params);
extern "C" void __stdcall glTexGend(unsigned coord, unsigned pname, TGLdouble param);
extern "C" void __stdcall glTexGendv(unsigned coord, unsigned pname, PGLdouble params);
extern "C" void __stdcall glTexGenf(unsigned coord, unsigned pname, float param);
extern "C" void __stdcall glTexGenfv(unsigned coord, unsigned pname, PGLfloat params);
extern "C" void __stdcall glTexGeni(unsigned coord, unsigned pname, TGLint param);
extern "C" void __stdcall glTexGeniv(unsigned coord, unsigned pname, PGLint params);
extern "C" void __stdcall glTexImage1D(unsigned target, TGLint level, TGLint internalformat, TGLsizei width, TGLint border, unsigned format, unsigned atype, void * pixels);
extern "C" void __stdcall glTexImage2D(unsigned target, TGLint level, TGLint internalformat, TGLsizei width, TGLsizei height, TGLint border, unsigned format, unsigned atype, void * Pixels);
extern "C" void __stdcall glTexParameterf(unsigned target, unsigned pname, float param);
extern "C" void __stdcall glTexParameterfv(unsigned target, unsigned pname, PGLfloat params);
extern "C" void __stdcall glTexParameteri(unsigned target, unsigned pname, TGLint param);
extern "C" void __stdcall glTexParameteriv(unsigned target, unsigned pname, PGLint params);
extern "C" void __stdcall glTexSubImage1D(unsigned target, TGLint level, TGLint xoffset, TGLsizei width, unsigned format, unsigned atype, void * pixels);
extern "C" void __stdcall glTexSubImage2D(unsigned target, TGLint level, TGLint xoffset, TGLint yoffset, TGLsizei width, TGLsizei height, unsigned format, unsigned atype, void * pixels);
extern "C" void __stdcall glTranslated(TGLdouble x, TGLdouble y, TGLdouble z);
extern "C" void __stdcall glTranslatef(float x, float y, float z);
extern "C" void __stdcall glVertex2d(TGLdouble x, TGLdouble y);
extern "C" void __stdcall glVertex2dv(PGLdouble v);
extern "C" void __stdcall glVertex2f(float x, float y);
extern "C" void __stdcall glVertex2fv(PGLfloat v);
extern "C" void __stdcall glVertex2i(TGLint x, TGLint y);
extern "C" void __stdcall glVertex2iv(PGLint v);
extern "C" void __stdcall glVertex2s(TGLshort x, TGLshort y);
extern "C" void __stdcall glVertex2sv(PGLshort v);
extern "C" void __stdcall glVertex3d(TGLdouble x, TGLdouble y, TGLdouble z);
extern "C" void __stdcall glVertex3dv(PGLdouble v);
extern "C" void __stdcall glVertex3f(float x, float y, float z);
extern "C" void __stdcall glVertex3fv(PGLfloat v);
extern "C" void __stdcall glVertex3i(TGLint x, TGLint y, TGLint z);
extern "C" void __stdcall glVertex3iv(PGLint v);
extern "C" void __stdcall glVertex3s(TGLshort x, TGLshort y, TGLshort z);
extern "C" void __stdcall glVertex3sv(PGLshort v);
extern "C" void __stdcall glVertex4d(TGLdouble x, TGLdouble y, TGLdouble z, TGLdouble w);
extern "C" void __stdcall glVertex4dv(PGLdouble v);
extern "C" void __stdcall glVertex4f(float x, float y, float z, float w);
extern "C" void __stdcall glVertex4fv(PGLfloat v);
extern "C" void __stdcall glVertex4i(TGLint x, TGLint y, TGLint z, TGLint w);
extern "C" void __stdcall glVertex4iv(PGLint v);
extern "C" void __stdcall glVertex4s(TGLshort x, TGLshort y, TGLshort z, TGLshort w);
extern "C" void __stdcall glVertex4sv(PGLshort v);
extern "C" void __stdcall glVertexPointer(TGLint size, unsigned atype, TGLsizei stride, void * data);
extern "C" void __stdcall glViewport(TGLint x, TGLint y, TGLsizei width, TGLsizei height);
extern "C" PGLChar __stdcall gluErrorString(unsigned errCode);
extern "C" PGLChar __stdcall gluGetString(unsigned name);
extern "C" void __stdcall gluBeginCurve(PGLUNurbs nobj);
extern "C" void __stdcall gluBeginPolygon(PGLUTesselator tess);
extern "C" void __stdcall gluBeginSurface(PGLUNurbs nobj);
extern "C" TGLint __stdcall gluProject(TGLdouble objx, TGLdouble objy, TGLdouble objz, const Stage::Vectortypes::TMatrix4d &modelMatrix, const Stage::Vectortypes::TMatrix4d &projMatrix, const Stage::Vectortypes::TVector4i &viewport, PGLdouble winx, PGLdouble winy, PGLdouble winz);
extern "C" TGLint __stdcall gluUnProject(TGLdouble winx, TGLdouble winy, TGLdouble winz, const Stage::Vectortypes::TMatrix4d &modelMatrix, const Stage::Vectortypes::TMatrix4d &projMatrix, const Stage::Vectortypes::TVector4i &viewport, PGLdouble objx, PGLdouble objy, PGLdouble objz);
extern "C" TGLint __stdcall gluScaleImage(unsigned format, TGLint widthin, TGLint heightin, unsigned typein, void * datain, TGLint widthout, TGLint heightout, unsigned typeout, void * dataout);
extern "C" TGLint __stdcall gluBuild1DMipmaps(unsigned target, TGLint components, TGLint width, unsigned format, unsigned atype, void * data);
extern "C" TGLint __stdcall gluBuild2DMipmaps(unsigned target, TGLint components, TGLint width, TGLint height, unsigned format, unsigned atype, void * data);
extern "C" PGLUQuadric __stdcall gluNewQuadric(void);
extern "C" PGLUNurbs __stdcall gluNewNurbsRenderer(void);
extern "C" PGLUTesselator __stdcall gluNewTess(void);
extern "C" void __stdcall gluBeginTrim(PGLUNurbs nobj);
extern "C" void __stdcall gluCylinder(PGLUQuadric quadObject, TGLdouble baseRadius, TGLdouble topRadius, TGLdouble height, TGLint slices, TGLint stacks);
extern "C" void __stdcall gluDeleteNurbsRenderer(PGLUNurbs nobj);
extern "C" void __stdcall gluDeleteQuadric(PGLUQuadric state);
extern "C" void __stdcall gluDeleteTess(PGLUTesselator tess);
extern "C" void __stdcall gluDisk(PGLUQuadric quadObject, TGLdouble innerRadius, TGLdouble outerRadius, TGLint slices, TGLint loops);
extern "C" void __stdcall gluEndCurve(PGLUNurbs nobj);
extern "C" void __stdcall gluEndPolygon(PGLUTesselator tess);
extern "C" void __stdcall gluEndSurface(PGLUNurbs nobj);
extern "C" void __stdcall gluEndTrim(PGLUNurbs nobj);
extern "C" void __stdcall gluGetNurbsProperty(PGLUNurbs nobj, unsigned aproperty, PGLfloat value);
extern "C" void __stdcall gluGetTessProperty(PGLUTesselator tess, unsigned which, PGLdouble value);
extern "C" void __stdcall gluLoadSamplingMatrices(PGLUNurbs nobj, const Stage::Vectortypes::TMatrix4f &modelMatrix, const Stage::Vectortypes::TMatrix4f &projMatrix, const Stage::Vectortypes::TVector4i &viewport);
extern "C" void __stdcall gluLookAt(TGLdouble eyex, TGLdouble eyey, TGLdouble eyez, TGLdouble centerx, TGLdouble centery, TGLdouble centerz, TGLdouble upx, TGLdouble upy, TGLdouble upz);
extern "C" void __stdcall gluNextContour(PGLUTesselator tess, unsigned atype);
extern "C" void __stdcall gluNurbsCallback(PGLUNurbs nobj, unsigned which, TGLUNurbsErrorProc fn);
extern "C" void __stdcall gluNurbsCurve(PGLUNurbs nobj, TGLint nknots, PGLfloat knot, TGLint stride, PGLfloat ctlarray, TGLint order, unsigned atype);
extern "C" void __stdcall gluNurbsProperty(PGLUNurbs nobj, unsigned aproperty, float value);
extern "C" void __stdcall gluNurbsSurface(PGLUNurbs nobj, TGLint sknot_count, PGLfloat sknot, TGLint tknot_count, PGLfloat tknot, TGLint s_stride, TGLint t_stride, PGLfloat ctlarray, TGLint sorder, TGLint torder, unsigned atype);
extern "C" void __stdcall gluOrtho2D(TGLdouble left, TGLdouble right, TGLdouble bottom, TGLdouble top);
extern "C" void __stdcall gluPartialDisk(PGLUQuadric quadObject, TGLdouble innerRadius, TGLdouble outerRadius, TGLint slices, TGLint loops, TGLdouble startAngle, TGLdouble sweepAngle);
extern "C" void __stdcall gluPerspective(TGLdouble fovy, TGLdouble aspect, TGLdouble zNear, TGLdouble zFar);
extern "C" void __stdcall gluPickMatrix(TGLdouble x, TGLdouble y, TGLdouble width, TGLdouble height, const Stage::Vectortypes::TVector4i &viewport);
extern "C" void __stdcall gluPwlCurve(PGLUNurbs nobj, TGLint count, PGLfloat points, TGLint stride, unsigned atype);
extern "C" void __stdcall gluQuadricCallback(PGLUQuadric quadObject, unsigned which, TGLUQuadricErrorProc fn);
extern "C" void __stdcall gluQuadricDrawStyle(PGLUQuadric quadObject, unsigned drawStyle);
extern "C" void __stdcall gluQuadricNormals(PGLUQuadric quadObject, unsigned normals);
extern "C" void __stdcall gluQuadricOrientation(PGLUQuadric quadObject, unsigned orientation);
extern "C" void __stdcall gluQuadricTexture(PGLUQuadric quadObject, TGLboolean textureCoords);
extern "C" void __stdcall gluSphere(PGLUQuadric quadObject, TGLdouble radius, TGLint slices, TGLint stacks);
extern "C" void __stdcall gluTessBeginContour(PGLUTesselator tess);
extern "C" void __stdcall gluTessBeginPolygon(PGLUTesselator tess, void * polygon_data);
extern "C" void __stdcall gluTessCallback(PGLUTesselator tess, unsigned which, void * fn);
extern "C" void __stdcall gluTessEndContour(PGLUTesselator tess);
extern "C" void __stdcall gluTessEndPolygon(PGLUTesselator tess);
extern "C" void __stdcall gluTessNormal(PGLUTesselator tess, TGLdouble x, TGLdouble y, TGLdouble z);
extern "C" void __stdcall gluTessProperty(PGLUTesselator tess, unsigned which, TGLdouble value);
extern "C" void __stdcall gluTessVertex(PGLUTesselator tess, const Stage::Vectortypes::TVector3d &coords, void * data);
extern "C" System::LongBool __stdcall wglCopyContext(HGLRC p1, HGLRC p2, unsigned p3);
extern "C" HGLRC __stdcall wglCreateContext(HDC DC);
extern "C" HGLRC __stdcall wglCreateLayerContext(HDC p1, int p2);
extern "C" System::LongBool __stdcall wglDeleteContext(HGLRC p1);
extern "C" System::LongBool __stdcall wglDescribeLayerPlane(HDC p1, int p2, int p3, unsigned p4, Winapi::Windows::TLayerPlaneDescriptor &p5);
extern "C" HGLRC __stdcall wglGetCurrentContext(void);
extern "C" HDC __stdcall wglGetCurrentDC(void);
extern "C" int __stdcall wglGetLayerPaletteEntries(HDC p1, int p2, int p3, int p4, void *pcr);
extern "C" void * __stdcall wglGetProcAddress(PGLChar ProcName);
extern "C" System::LongBool __stdcall wglMakeCurrent(HDC DC, HGLRC p2);
extern "C" System::LongBool __stdcall wglRealizeLayerPalette(HDC p1, int p2, System::LongBool p3);
extern "C" int __stdcall wglSetLayerPaletteEntries(HDC p1, int p2, int p3, int p4, void *pcr);
extern "C" System::LongBool __stdcall wglShareLists(HGLRC p1, HGLRC p2);
extern "C" System::LongBool __stdcall wglSwapLayerBuffers(HDC p1, unsigned p2);
extern "C" unsigned __stdcall wglSwapMultipleBuffers(unsigned p1, const PWGLSwap p2);
extern "C" System::LongBool __stdcall wglUseFontBitmapsA(HDC DC, unsigned p2, unsigned p3, unsigned p4);
extern "C" System::LongBool __stdcall wglUseFontOutlinesA(HDC p1, unsigned p2, unsigned p3, unsigned p4, float p5, float p6, int p7, Winapi::Windows::PGlyphMetricsFloat p8);
extern "C" System::LongBool __stdcall wglUseFontBitmapsW(HDC DC, unsigned p2, unsigned p3, unsigned p4);
extern "C" System::LongBool __stdcall wglUseFontOutlinesW(HDC p1, unsigned p2, unsigned p3, unsigned p4, float p5, float p6, int p7, Winapi::Windows::PGlyphMetricsFloat p8);
extern "C" System::LongBool __stdcall wglUseFontBitmaps(HDC DC, unsigned p2, unsigned p3, unsigned p4);
extern "C" System::LongBool __stdcall wglUseFontOutlines(HDC p1, unsigned p2, unsigned p3, unsigned p4, float p5, float p6, int p7, Winapi::Windows::PGlyphMetricsFloat p8);
extern DELPHI_PACKAGE void __stdcall (*glBlendColor)(TGLclampf red, TGLclampf green, TGLclampf blue, TGLclampf alpha);
extern DELPHI_PACKAGE void __stdcall (*glBlendEquation)(unsigned mode);
extern DELPHI_PACKAGE void __stdcall (*glDrawRangeElements)(unsigned mode, TGLuint Astart, TGLuint Aend, TGLsizei count, unsigned Atype, void * indices);
extern DELPHI_PACKAGE void __stdcall (*glTexImage3D)(unsigned target, TGLint level, unsigned internalformat, TGLsizei width, TGLsizei height, TGLsizei depth, TGLint border, unsigned format, unsigned Atype, void * pixels);
extern DELPHI_PACKAGE void __stdcall (*glTexSubImage3D)(unsigned target, TGLint level, TGLint xoffset, TGLint yoffset, TGLint zoffset, TGLsizei width, TGLsizei height, TGLsizei depth, unsigned format, unsigned Atype, void * pixels);
extern DELPHI_PACKAGE void __stdcall (*glCopyTexSubImage3D)(unsigned target, TGLint level, TGLint xoffset, TGLint yoffset, TGLint zoffset, TGLint x, TGLint y, TGLsizei width, TGLsizei height);
extern DELPHI_PACKAGE void __stdcall (*glColorTable)(unsigned target, unsigned internalformat, TGLsizei width, unsigned format, unsigned Atype, void * table);
extern DELPHI_PACKAGE void __stdcall (*glColorTableParameterfv)(unsigned target, unsigned pname, PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glColorTableParameteriv)(unsigned target, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glCopyColorTable)(unsigned target, unsigned internalformat, TGLint x, TGLint y, TGLsizei width);
extern DELPHI_PACKAGE void __stdcall (*glGetColorTable)(unsigned target, unsigned format, unsigned Atype, void * table);
extern DELPHI_PACKAGE void __stdcall (*glGetColorTableParameterfv)(unsigned target, unsigned pname, PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetColorTableParameteriv)(unsigned target, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glColorSubTable)(unsigned target, TGLsizei start, TGLsizei count, unsigned format, unsigned Atype, void * data);
extern DELPHI_PACKAGE void __stdcall (*glCopyColorSubTable)(unsigned target, TGLsizei start, TGLint x, TGLint y, TGLsizei width);
extern DELPHI_PACKAGE void __stdcall (*glConvolutionFilter1D)(unsigned target, unsigned internalformat, TGLsizei width, unsigned format, unsigned Atype, void * image);
extern DELPHI_PACKAGE void __stdcall (*glConvolutionFilter2D)(unsigned target, unsigned internalformat, TGLsizei width, TGLsizei height, unsigned format, unsigned Atype, void * image);
extern DELPHI_PACKAGE void __stdcall (*glConvolutionParameterf)(unsigned target, unsigned pname, float param);
extern DELPHI_PACKAGE void __stdcall (*glConvolutionParameterfv)(unsigned target, unsigned pname, PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glConvolutionParameteri)(unsigned target, unsigned pname, TGLint param);
extern DELPHI_PACKAGE void __stdcall (*glConvolutionParameteriv)(unsigned target, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glCopyConvolutionFilter1D)(unsigned target, unsigned internalformat, TGLint x, TGLint y, TGLsizei width);
extern DELPHI_PACKAGE void __stdcall (*glCopyConvolutionFilter2D)(unsigned target, unsigned internalformat, TGLint x, TGLint y, TGLsizei width, TGLsizei height);
extern DELPHI_PACKAGE void __stdcall (*glGetConvolutionFilter)(unsigned target, unsigned internalformat, unsigned Atype, void * image);
extern DELPHI_PACKAGE void __stdcall (*glGetConvolutionParameterfv)(unsigned target, unsigned pname, PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetConvolutionParameteriv)(unsigned target, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glGetSeparableFilter)(unsigned target, unsigned format, unsigned Atype, void * row, void * column, void * span);
extern DELPHI_PACKAGE void __stdcall (*glSeparableFilter2D)(unsigned target, unsigned internalformat, TGLsizei width, TGLsizei height, unsigned format, unsigned Atype, void * row, void * column);
extern DELPHI_PACKAGE void __stdcall (*glGetHistogram)(unsigned target, TGLboolean reset, unsigned format, unsigned Atype, void * values);
extern DELPHI_PACKAGE void __stdcall (*glGetHistogramParameterfv)(unsigned target, unsigned pname, PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetHistogramParameteriv)(unsigned target, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glGetMinmax)(unsigned target, TGLboolean reset, unsigned format, unsigned Atype, void * values);
extern DELPHI_PACKAGE void __stdcall (*glGetMinmaxParameterfv)(unsigned target, unsigned pname, PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetMinmaxParameteriv)(unsigned target, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glHistogram)(unsigned target, TGLsizei width, unsigned internalformat, TGLboolean sink);
extern DELPHI_PACKAGE void __stdcall (*glMinmax)(unsigned target, unsigned internalformat, TGLboolean sink);
extern DELPHI_PACKAGE void __stdcall (*glResetHistogram)(unsigned target);
extern DELPHI_PACKAGE void __stdcall (*glResetMinmax)(unsigned target);
extern DELPHI_PACKAGE void __stdcall (*glActiveTexture)(unsigned texture);
extern DELPHI_PACKAGE void __stdcall (*glSampleCoverage)(TGLclampf Value, TGLboolean invert);
extern DELPHI_PACKAGE void __stdcall (*glCompressedTexImage3D)(unsigned target, TGLint level, unsigned internalformat, TGLsizei Width, TGLsizei Height, TGLsizei depth, TGLint border, TGLsizei imageSize, void * data);
extern DELPHI_PACKAGE void __stdcall (*glCompressedTexImage2D)(unsigned target, TGLint level, unsigned internalformat, TGLsizei Width, TGLsizei Height, TGLint border, TGLsizei imageSize, void * data);
extern DELPHI_PACKAGE void __stdcall (*glCompressedTexImage1D)(unsigned target, TGLint level, unsigned internalformat, TGLsizei Width, TGLint border, TGLsizei imageSize, void * data);
extern DELPHI_PACKAGE void __stdcall (*glCompressedTexSubImage3D)(unsigned target, TGLint level, TGLint xoffset, TGLint yoffset, TGLint zoffset, TGLsizei width, TGLsizei height, TGLsizei depth, unsigned Format, TGLsizei imageSize, void * data);
extern DELPHI_PACKAGE void __stdcall (*glCompressedTexSubImage2D)(unsigned target, TGLint level, TGLint xoffset, TGLint yoffset, TGLsizei width, TGLsizei height, unsigned Format, TGLsizei imageSize, void * data);
extern DELPHI_PACKAGE void __stdcall (*glCompressedTexSubImage1D)(unsigned target, TGLint level, TGLint xoffset, TGLsizei width, unsigned Format, TGLsizei imageSize, void * data);
extern DELPHI_PACKAGE void __stdcall (*glGetCompressedTexImage)(unsigned target, TGLint level, void * img);
extern DELPHI_PACKAGE void __stdcall (*glClientActiveTexture)(unsigned texture);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord1d)(unsigned target, TGLdouble s);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord1dV)(unsigned target, PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord1f)(unsigned target, float s);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord1fV)(unsigned target, float v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord1i)(unsigned target, TGLint s);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord1iV)(unsigned target, PGLint v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord1s)(unsigned target, TGLshort s);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord1sV)(unsigned target, PGLshort v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord2d)(unsigned target, TGLdouble s, TGLdouble t);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord2dv)(unsigned target, PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord2f)(unsigned target, float s, float t);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord2fv)(unsigned target, PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord2i)(unsigned target, TGLint s, TGLint t);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord2iv)(unsigned target, PGLint v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord2s)(unsigned target, TGLshort s, TGLshort t);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord2sv)(unsigned target, PGLshort v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord3d)(unsigned target, TGLdouble s, TGLdouble t, TGLdouble r);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord3dv)(unsigned target, PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord3f)(unsigned target, float s, float t, float r);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord3fv)(unsigned target, PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord3i)(unsigned target, TGLint s, TGLint t, TGLint r);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord3iv)(unsigned target, PGLint v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord3s)(unsigned target, TGLshort s, TGLshort t, TGLshort r);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord3sv)(unsigned target, PGLshort v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord4d)(unsigned target, TGLdouble s, TGLdouble t, TGLdouble r, TGLdouble q);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord4dv)(unsigned target, PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord4f)(unsigned target, float s, float t, float r, float q);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord4fv)(unsigned target, PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord4i)(unsigned target, TGLint s, TGLint t, TGLint r, TGLint q);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord4iv)(unsigned target, PGLint v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord4s)(unsigned target, TGLshort s, TGLshort t, TGLshort r, TGLshort q);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord4sv)(unsigned target, PGLshort v);
extern DELPHI_PACKAGE void __stdcall (*glLoadTransposeMatrixf)(PGLfloat m);
extern DELPHI_PACKAGE void __stdcall (*glLoadTransposeMatrixd)(PGLdouble m);
extern DELPHI_PACKAGE void __stdcall (*glMultTransposeMatrixf)(PGLfloat m);
extern DELPHI_PACKAGE void __stdcall (*glMultTransposeMatrixd)(PGLdouble m);
extern DELPHI_PACKAGE void __stdcall (*glBlendFuncSeparate)(unsigned sfactorRGB, unsigned dfactorRGB, unsigned sfactorAlpha, unsigned dfactorAlpha);
extern DELPHI_PACKAGE void __stdcall (*glMultiDrawArrays)(unsigned mode, PGLint First, PGLsizei Count, TGLsizei primcount);
extern DELPHI_PACKAGE void __stdcall (*glMultiDrawElements)(unsigned mode, PGLsizei Count, unsigned AType, void *indices, TGLsizei primcount);
extern DELPHI_PACKAGE void __stdcall (*glPointParameterf)(unsigned pname, float param);
extern DELPHI_PACKAGE void __stdcall (*glPointParameterfv)(unsigned pname, PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glPointParameteri)(unsigned pname, TGLint param);
extern DELPHI_PACKAGE void __stdcall (*glPointParameteriv)(unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glFogCoordf)(float coord);
extern DELPHI_PACKAGE void __stdcall (*glFogCoordfv)(PGLfloat coord);
extern DELPHI_PACKAGE void __stdcall (*glFogCoordd)(TGLdouble coord);
extern DELPHI_PACKAGE void __stdcall (*glFogCoorddv)(PGLdouble coord);
extern DELPHI_PACKAGE void __stdcall (*glFogCoordPointer)(unsigned AType, TGLsizei stride, void * p);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3b)(TGLbyte red, TGLbyte green, TGLbyte blue);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3bv)(PGLbyte v);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3d)(TGLdouble red, TGLdouble green, TGLdouble blue);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3dv)(PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3f)(float red, float green, float blue);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3fv)(PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3i)(TGLint red, TGLint green, TGLint blue);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3iv)(PGLint v);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3s)(TGLshort red, TGLshort green, TGLshort blue);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3sv)(PGLshort v);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3ub)(TGLubyte red, TGLubyte green, TGLubyte blue);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3ubv)(PGLubyte v);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3ui)(TGLuint red, TGLuint green, TGLuint blue);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3uiv)(PGLuint v);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3us)(TGLushort red, TGLushort green, TGLushort blue);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3usv)(PGLushort v);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColorPointer)(TGLint Size, unsigned Atype, TGLsizei stride, void * p);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2d)(TGLdouble x, TGLdouble y);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2dv)(PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2f)(float x, float y);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2fv)(PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2i)(TGLint x, TGLint y);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2iv)(PGLint v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2s)(TGLshort x, TGLshort y);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2sv)(PGLshort v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3d)(TGLdouble x, TGLdouble y, TGLdouble z);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3dv)(PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3f)(float x, float y, float z);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3fv)(PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3i)(TGLint x, TGLint y, TGLint z);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3iv)(PGLint v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3s)(TGLshort x, TGLshort y, TGLshort z);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3sv)(PGLshort v);
extern DELPHI_PACKAGE void __stdcall (*glGenQueries)(TGLsizei n, PGLuint ids);
extern DELPHI_PACKAGE void __stdcall (*glDeleteQueries)(TGLsizei n, const PGLuint ids);
extern DELPHI_PACKAGE System::ByteBool __stdcall (*glIsQuery)(TGLuint id);
extern DELPHI_PACKAGE void __stdcall (*glBeginQuery)(unsigned target, TGLuint id);
extern DELPHI_PACKAGE void __stdcall (*glEndQuery)(unsigned target);
extern DELPHI_PACKAGE void __stdcall (*glGetQueryiv)(unsigned target, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glGetQueryObjectiv)(TGLuint id, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glGetQueryObjectuiv)(TGLuint id, unsigned pname, PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glBindBuffer)(unsigned target, unsigned buffer);
extern DELPHI_PACKAGE void __stdcall (*glDeleteBuffers)(int n, const PGLuint buffers);
extern DELPHI_PACKAGE void __stdcall (*glGenBuffers)(int n, PGLuint buffers);
extern DELPHI_PACKAGE System::ByteBool __stdcall (*glIsBuffer)(unsigned buffer);
extern DELPHI_PACKAGE void __stdcall (*glBufferData)(unsigned target, int size, const void * data, unsigned usage);
extern DELPHI_PACKAGE void __stdcall (*glBufferSubData)(unsigned target, unsigned offset, int size, const void * data);
extern DELPHI_PACKAGE void __stdcall (*glGetBufferSubData)(unsigned target, unsigned offset, int size, void * data);
extern DELPHI_PACKAGE void * __stdcall (*glMapBuffer)(unsigned target, unsigned access);
extern DELPHI_PACKAGE System::ByteBool __stdcall (*glUnmapBuffer)(unsigned target);
extern DELPHI_PACKAGE void __stdcall (*glGetBufferParameteriv)(unsigned target, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glGetBufferPointerv)(unsigned target, unsigned pname, void * params);
extern DELPHI_PACKAGE void __stdcall (*glBlendEquationSeparate)(unsigned modeRGB, unsigned modeAlpha);
extern DELPHI_PACKAGE void __stdcall (*glDrawBuffers)(int n, const PGLenum bufs);
extern DELPHI_PACKAGE void __stdcall (*glStencilOpSeparate)(unsigned face, unsigned sfail, unsigned dpfail, unsigned dppass);
extern DELPHI_PACKAGE void __stdcall (*glStencilFuncSeparate)(unsigned face, unsigned func, TGLint ref, TGLuint mask);
extern DELPHI_PACKAGE void __stdcall (*glStencilMaskSeparate)(unsigned face, TGLuint mask);
extern DELPHI_PACKAGE void __stdcall (*glAttachShader)(TGLuint _program, TGLuint shader);
extern DELPHI_PACKAGE void __fastcall (*glBindAttribLocation)(TGLuint _program, TGLuint index, const PGLChar name);
extern DELPHI_PACKAGE void __stdcall (*glCompileShader)(TGLuint shader);
extern DELPHI_PACKAGE unsigned __stdcall (*glCreateProgram)(void);
extern DELPHI_PACKAGE unsigned __stdcall (*glCreateShader)(unsigned _type);
extern DELPHI_PACKAGE void __stdcall (*glDeleteProgram)(TGLuint _program);
extern DELPHI_PACKAGE void __stdcall (*glDeleteShader)(TGLuint shader);
extern DELPHI_PACKAGE void __stdcall (*glDetachShader)(TGLuint _program, TGLuint shader);
extern DELPHI_PACKAGE void __stdcall (*glDisableVertexAttribArray)(TGLuint index);
extern DELPHI_PACKAGE void __stdcall (*glEnableVertexAttribArray)(TGLuint index);
extern DELPHI_PACKAGE void __stdcall (*glGetActiveAttrib)(TGLuint _program, TGLuint index, TGLsizei bufSize, PGLsizei length, PGLint size, PGLenum _type, PGLChar name);
extern DELPHI_PACKAGE void __stdcall (*glGetActiveUniform)(TGLuint _program, TGLuint index, TGLsizei bufSize, PGLsizei length, PGLint size, PGLenum _type, PGLChar name);
extern DELPHI_PACKAGE void __stdcall (*glGetAttachedShaders)(TGLuint _program, TGLsizei maxCount, PGLsizei count, PGLuint obj);
extern DELPHI_PACKAGE int __stdcall (*glGetAttribLocation)(TGLuint _program, const PGLChar name);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramiv)(TGLuint _program, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramInfoLog)(TGLuint _program, TGLsizei bufSize, PGLsizei length, PGLChar infoLog);
extern DELPHI_PACKAGE void __stdcall (*glGetShaderiv)(TGLuint shader, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glGetShaderInfoLog)(TGLuint shader, TGLsizei bufSize, PGLsizei length, PGLChar infoLog);
extern DELPHI_PACKAGE void __stdcall (*glGetShaderSource)(TGLuint shader, TGLsizei bufSize, PGLsizei length, PGLChar source);
extern DELPHI_PACKAGE int __stdcall (*glGetUniformLocation)(TGLuint _program, const PGLChar name);
extern DELPHI_PACKAGE void __stdcall (*glGetUniformfv)(TGLuint _program, TGLint location, PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetUniformiv)(TGLuint _program, TGLint location, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribdv)(TGLuint index, unsigned pname, PGLdouble params);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribfv)(TGLuint index, unsigned pname, PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribiv)(TGLuint index, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribPointerv)(TGLuint index, unsigned pname, void * _pointer);
extern DELPHI_PACKAGE System::ByteBool __stdcall (*glIsProgram)(TGLuint _program);
extern DELPHI_PACKAGE System::ByteBool __stdcall (*glIsShader)(TGLuint shader);
extern DELPHI_PACKAGE void __stdcall (*glLinkProgram)(TGLuint _program);
extern DELPHI_PACKAGE void __stdcall (*glShaderSource)(TGLuint shader, TGLsizei count, const PGLPCharArray _string, const PGLint length);
extern DELPHI_PACKAGE void __stdcall (*glUseProgram)(TGLuint _program);
extern DELPHI_PACKAGE void __stdcall (*glUniform1f)(int location, float v0);
extern DELPHI_PACKAGE void __stdcall (*glUniform2f)(int location, float v0, float v1);
extern DELPHI_PACKAGE void __stdcall (*glUniform3f)(int location, float v0, float v1, float v2);
extern DELPHI_PACKAGE void __stdcall (*glUniform4f)(int location, float v0, float v1, float v2, float v3);
extern DELPHI_PACKAGE void __stdcall (*glUniform1i)(int location, int v0);
extern DELPHI_PACKAGE void __stdcall (*glUniform2i)(int location, int v0, int v1);
extern DELPHI_PACKAGE void __stdcall (*glUniform3i)(int location, int v0, int v1, int v2);
extern DELPHI_PACKAGE void __stdcall (*glUniform4i)(int location, int v0, int v1, int v2, int v3);
extern DELPHI_PACKAGE void __stdcall (*glUniform1fv)(int location, int count, PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glUniform2fv)(int location, int count, PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glUniform3fv)(int location, int count, PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glUniform4fv)(int location, int count, PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glUniform1iv)(int location, int count, PGLint value);
extern DELPHI_PACKAGE void __stdcall (*glUniform2iv)(int location, int count, PGLint value);
extern DELPHI_PACKAGE void __stdcall (*glUniform3iv)(int location, int count, PGLint value);
extern DELPHI_PACKAGE void __stdcall (*glUniform4iv)(int location, int count, PGLint value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix2fv)(int location, int count, System::ByteBool transpose, PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix3fv)(int location, int count, System::ByteBool transpose, PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix4fv)(int location, int count, System::ByteBool transpose, PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glValidateProgram)(TGLuint _program);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib1d)(TGLuint index, TGLdouble x);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib1dv)(TGLuint index, PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib1f)(TGLuint index, float x);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib1fv)(TGLuint index, PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib1s)(TGLuint index, TGLshort x);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib1sv)(TGLuint index, PGLshort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib2d)(TGLuint index, TGLdouble x, TGLdouble y);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib2dv)(TGLuint index, PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib2f)(TGLuint index, float x, float y);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib2fv)(TGLuint index, PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib2s)(TGLuint index, TGLshort x, TGLshort y);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib2sv)(TGLuint index, PGLshort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib3d)(TGLuint index, TGLdouble x, TGLdouble y, TGLdouble z);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib3dv)(TGLuint index, PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib3f)(TGLuint index, float x, float y, float z);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib3fv)(TGLuint index, PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib3s)(TGLuint index, TGLshort x, TGLshort y, TGLshort z);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib3sv)(TGLuint index, PGLshort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4Nbv)(TGLuint index, PGLbyte v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4Niv)(TGLuint index, PGLint v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4Nsv)(TGLuint index, PGLshort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4Nub)(TGLuint index, TGLubyte x, TGLubyte y, TGLubyte z, TGLubyte w);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4Nubv)(TGLuint index, PGLubyte v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4Nuiv)(TGLuint index, PGLuint v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4Nusv)(TGLuint index, PGLushort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4bv)(TGLuint index, PGLbyte v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4d)(TGLuint index, TGLdouble x, TGLdouble y, TGLdouble z, TGLdouble w);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4dv)(TGLuint index, PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4f)(TGLuint index, float x, float y, float z, float w);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4fv)(TGLuint index, PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4iv)(TGLuint index, PGLint v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4s)(TGLuint index, TGLshort x, TGLshort y, TGLshort z, TGLshort w);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4sv)(TGLuint index, PGLshort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4ubv)(TGLuint index, PGLubyte v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4uiv)(TGLuint index, PGLuint v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4usv)(TGLuint index, PGLushort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribPointer)(TGLuint index, TGLint size, unsigned _type, TGLboolean normalized, TGLsizei stride, void * _pointer);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix2x3fv)(TGLint location, TGLsizei count, TGLboolean transpose, PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix3x2fv)(TGLint location, TGLsizei count, TGLboolean transpose, PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix2x4fv)(TGLint location, TGLsizei count, TGLboolean transpose, PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix4x2fv)(TGLint location, TGLsizei count, TGLboolean transpose, PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix3x4fv)(TGLint location, TGLsizei count, TGLboolean transpose, PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix4x3fv)(TGLint location, TGLsizei count, TGLboolean transpose, PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI1i)(TGLuint index, TGLint x);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI2i)(TGLuint index, TGLint x, TGLint y);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI3i)(TGLuint index, TGLint x, TGLint y, TGLint z);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI4i)(TGLuint index, TGLint x, TGLint y, TGLint z, TGLint w);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI1ui)(TGLuint index, TGLuint x);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI2ui)(TGLuint index, TGLuint x, TGLuint y);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI3ui)(TGLuint index, TGLuint x, TGLuint y, TGLuint z);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI4ui)(TGLuint index, TGLuint x, TGLuint y, TGLuint z, TGLuint w);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI1iv)(TGLuint index, PGLint v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI2iv)(TGLuint index, PGLint v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI3iv)(TGLuint index, PGLint v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI4iv)(TGLuint index, PGLint v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI1uiv)(TGLuint index, PGLuint v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI2uiv)(TGLuint index, PGLuint v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI3uiv)(TGLuint index, PGLuint v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI4uiv)(TGLuint index, PGLuint v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI4bv)(TGLuint index, PGLbyte v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI4sv)(TGLuint index, PGLshort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI4ubv)(TGLuint index, PGLubyte v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI4usv)(TGLuint index, PGLushort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribIPointer)(TGLuint index, TGLint size, unsigned _type, TGLsizei stride, void * _pointer);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribIiv)(TGLuint index, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribIuiv)(TGLuint index, unsigned pname, PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glUniform1ui)(TGLint location, TGLuint v0);
extern DELPHI_PACKAGE void __stdcall (*glUniform2ui)(TGLint location, TGLuint v0, TGLuint v1);
extern DELPHI_PACKAGE void __stdcall (*glUniform3ui)(TGLint location, TGLuint v0, TGLuint v1, TGLuint v2);
extern DELPHI_PACKAGE void __stdcall (*glUniform4ui)(TGLint location, TGLuint v0, TGLuint v1, TGLuint v2, TGLuint v3);
extern DELPHI_PACKAGE void __stdcall (*glUniform1uiv)(TGLint location, TGLsizei count, PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glUniform2uiv)(TGLint location, TGLsizei count, PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glUniform3uiv)(TGLint location, TGLsizei count, PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glUniform4uiv)(TGLint location, TGLsizei count, PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glGetUniformuiv)(TGLuint _program, TGLint location, PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glBindFragDataLocation)(TGLuint _program, TGLuint colorNumber, PGLChar name);
extern DELPHI_PACKAGE int __stdcall (*glGetFragDataLocation)(TGLuint _program, PGLChar name);
extern DELPHI_PACKAGE void __stdcall (*glBeginConditionalRender)(TGLuint id, unsigned mode);
extern DELPHI_PACKAGE void __stdcall (*glEndConditionalRender)(void);
extern DELPHI_PACKAGE void __stdcall (*glClampColor)(unsigned target, unsigned clamp);
extern DELPHI_PACKAGE void __stdcall (*glTexParameterIiv)(unsigned target, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glTexParameterIuiv)(unsigned target, unsigned pname, PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glGetTexParameterIiv)(unsigned target, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glGetTexParameterIuiv)(unsigned target, unsigned pname, PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glColorMaski)(TGLuint index, TGLboolean r, TGLboolean g, TGLboolean b, TGLboolean a);
extern DELPHI_PACKAGE void __stdcall (*glGetBooleani_v)(unsigned target, TGLuint index, PGLboolean data);
extern DELPHI_PACKAGE void __stdcall (*glGetIntegeri_v)(unsigned target, TGLuint index, PGLint data);
extern DELPHI_PACKAGE void __stdcall (*glEnablei)(unsigned target, TGLuint index);
extern DELPHI_PACKAGE void __stdcall (*glDisablei)(unsigned target, TGLuint index);
extern DELPHI_PACKAGE System::ByteBool __stdcall (*glIsEnabledi)(unsigned target, TGLuint index);
extern DELPHI_PACKAGE void __stdcall (*glBindBufferRange)(unsigned target, TGLuint index, TGLuint buffer, TGLintptr offset, TGLsizeiptr size);
extern DELPHI_PACKAGE void __stdcall (*glBindBufferBase)(unsigned target, TGLuint index, TGLuint buffer);
extern DELPHI_PACKAGE void __stdcall (*glBeginTransformFeedback)(unsigned primitiveMode);
extern DELPHI_PACKAGE void __stdcall (*glEndTransformFeedback)(void);
extern DELPHI_PACKAGE void __stdcall (*glTransformFeedbackVaryings)(TGLuint _program, TGLsizei count, const PGLPCharArray varyings, unsigned bufferMode);
extern DELPHI_PACKAGE void __stdcall (*glGetTransformFeedbackVarying)(TGLuint _program, TGLuint index, TGLsizei bufSize, PGLsizei length, PGLsizei size, PGLenum _type, PGLChar name);
extern DELPHI_PACKAGE void __stdcall (*glClearBufferiv)(unsigned buffer, TGLint drawbuffer, PGLint value);
extern DELPHI_PACKAGE void __stdcall (*glClearBufferuiv)(unsigned buffer, TGLint drawbuffer, PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glClearBufferfv)(unsigned buffer, TGLint drawbuffer, PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glClearBufferfi)(unsigned buffer, TGLint drawbuffer, float depth, TGLint stencil);
extern DELPHI_PACKAGE char * __stdcall (*glGetStringi)(unsigned name, TGLuint index);
extern DELPHI_PACKAGE void __stdcall (*glDrawArraysInstanced)(unsigned mode, TGLint first, TGLsizei count, TGLsizei primcount);
extern DELPHI_PACKAGE void __stdcall (*glDrawElementsInstanced)(unsigned mode, TGLsizei count, unsigned _type, PGLvoid indices, TGLsizei primcount);
extern DELPHI_PACKAGE void __stdcall (*glTexBuffer)(unsigned target, unsigned internalformat, TGLuint buffer);
extern DELPHI_PACKAGE void __stdcall (*glPrimitiveRestartIndex)(TGLuint index);
extern DELPHI_PACKAGE void __stdcall (*glGetInteger64i_v)(unsigned target, TGLuint index, PGLint64 data);
extern DELPHI_PACKAGE void __stdcall (*glGetBufferParameteri64v)(unsigned target, unsigned pname, PGLint64 params);
extern DELPHI_PACKAGE void __stdcall (*glProgramParameteri)(TGLuint _program, unsigned pname, TGLint value);
extern DELPHI_PACKAGE void __stdcall (*glFramebufferTexture)(unsigned target, unsigned attachment, TGLuint texture, TGLint level);
extern DELPHI_PACKAGE void __stdcall (*gluNurbsCallbackDataEXT)(PGLUNurbs nurb, void * userData);
extern DELPHI_PACKAGE PGLUNurbs __stdcall (*gluNewNurbsTessellatorEXT)(void);
extern DELPHI_PACKAGE void __stdcall (*gluDeleteNurbsTessellatorEXT)(PGLUNurbs nurb);
extern DELPHI_PACKAGE int __stdcall (*wglCreateBufferRegionARB)(HDC DC, int iLayerPlane, unsigned uType);
extern DELPHI_PACKAGE void __stdcall (*wglDeleteBufferRegionARB)(int hRegion);
extern DELPHI_PACKAGE System::LongBool __stdcall (*wglSaveBufferRegionARB)(int hRegion, int x, int y, int width, int height);
extern DELPHI_PACKAGE System::LongBool __stdcall (*wglRestoreBufferRegionARB)(int hRegion, int x, int y, int width, int height, int xSrc, int ySrc);
extern DELPHI_PACKAGE char * __stdcall (*wglGetExtensionsStringARB)(HDC DC);
extern DELPHI_PACKAGE System::LongBool __stdcall (*wglGetPixelFormatAttribivARB)(HDC DC, int iPixelFormat, int iLayerPlane, unsigned nAttributes, const PGLint piAttributes, PGLint piValues);
extern DELPHI_PACKAGE System::LongBool __stdcall (*wglGetPixelFormatAttribfvARB)(HDC DC, int iPixelFormat, int iLayerPlane, unsigned nAttributes, const PGLint piAttributes, PGLfloat piValues);
extern DELPHI_PACKAGE System::LongBool __stdcall (*wglChoosePixelFormatARB)(HDC DC, const PGLint piAttribIList, const PGLfloat pfAttribFList, unsigned nMaxFormats, PGLint piFormats, PGLenum nNumFormats);
extern DELPHI_PACKAGE System::LongBool __stdcall (*wglMakeContextCurrentARB)(HDC hDrawDC, HDC hReadDC, HGLRC _hglrc);
extern DELPHI_PACKAGE HDC __stdcall (*wglGetCurrentReadDCARB)(void);
extern DELPHI_PACKAGE int __stdcall (*wglCreatePbufferARB)(HDC DC, int iPixelFormat, int iWidth, int iHeight, const PGLint piAttribList);
extern DELPHI_PACKAGE HDC __stdcall (*wglGetPbufferDCARB)(HPBUFFERARB hPbuffer);
extern DELPHI_PACKAGE int __stdcall (*wglReleasePbufferDCARB)(HPBUFFERARB hPbuffer, HDC DC);
extern DELPHI_PACKAGE System::LongBool __stdcall (*wglDestroyPbufferARB)(HPBUFFERARB hPbuffer);
extern DELPHI_PACKAGE System::LongBool __stdcall (*wglQueryPbufferARB)(HPBUFFERARB hPbuffer, int iAttribute, PGLint piValue);
extern DELPHI_PACKAGE System::LongBool __stdcall (*wglBindTexImageARB)(HPBUFFERARB hPbuffer, int iBuffer);
extern DELPHI_PACKAGE System::LongBool __stdcall (*wglReleaseTexImageARB)(HPBUFFERARB hpBuffer, int iBuffer);
extern DELPHI_PACKAGE System::LongBool __stdcall (*wglSetPbufferAttribARB)(HPBUFFERARB hpBuffer, const PGLint piAttribList);
extern DELPHI_PACKAGE HGLRC __stdcall (*wglCreateContextAttribsARB)(HDC DC, HGLRC hShareContext, PGLint attribList);
extern DELPHI_PACKAGE bool __fastcall (*wglEnumGpusNV)(unsigned iGpuIndex, HGPUNV &hGpu);
extern DELPHI_PACKAGE bool __fastcall (*wglEnumGpuDevicesNV)(HGPUNV hGpu, unsigned iDeviceIndex, PGPUDEVICE lpGpuDevice);
extern DELPHI_PACKAGE HDC __fastcall (*wglCreateAffinityDCNV)(PHGPUNV hGpuList);
extern DELPHI_PACKAGE bool __fastcall (*wglEnumGpusFromAffinityDCNV)(HDC hAffinityDC, unsigned iGpuIndex, HGPUNV &hGpu);
extern DELPHI_PACKAGE bool __fastcall (*wglDeleteDCNV)(HDC hdc);
extern DELPHI_PACKAGE System::LongBool __stdcall (*wglSwapIntervalEXT)(int interval);
extern DELPHI_PACKAGE int __stdcall (*wglGetSwapIntervalEXT)(void);
extern DELPHI_PACKAGE void __stdcall (*glSamplePassARB)(unsigned pass);
extern DELPHI_PACKAGE void __stdcall (*glActiveTextureARB)(unsigned target);
extern DELPHI_PACKAGE void __stdcall (*glClientActiveTextureARB)(unsigned target);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord1dARB)(unsigned target, TGLdouble s);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord1dVARB)(unsigned target, PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord1fARB)(unsigned target, float s);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord1fVARB)(unsigned target, float v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord1iARB)(unsigned target, TGLint s);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord1iVARB)(unsigned target, PGLint v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord1sARB)(unsigned target, TGLshort s);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord1sVARB)(unsigned target, PGLshort v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord2dARB)(unsigned target, TGLdouble s, TGLdouble t);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord2dvARB)(unsigned target, PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord2fARB)(unsigned target, float s, float t);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord2fvARB)(unsigned target, PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord2iARB)(unsigned target, TGLint s, TGLint t);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord2ivARB)(unsigned target, PGLint v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord2sARB)(unsigned target, TGLshort s, TGLshort t);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord2svARB)(unsigned target, PGLshort v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord3dARB)(unsigned target, TGLdouble s, TGLdouble t, TGLdouble r);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord3dvARB)(unsigned target, PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord3fARB)(unsigned target, float s, float t, float r);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord3fvARB)(unsigned target, PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord3iARB)(unsigned target, TGLint s, TGLint t, TGLint r);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord3ivARB)(unsigned target, PGLint v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord3sARB)(unsigned target, TGLshort s, TGLshort t, TGLshort r);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord3svARB)(unsigned target, PGLshort v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord4dARB)(unsigned target, TGLdouble s, TGLdouble t, TGLdouble r, TGLdouble q);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord4dvARB)(unsigned target, PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord4fARB)(unsigned target, float s, float t, float r, float q);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord4fvARB)(unsigned target, PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord4iARB)(unsigned target, TGLint s, TGLint t, TGLint r, TGLint q);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord4ivARB)(unsigned target, PGLint v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord4sARB)(unsigned target, TGLshort s, TGLshort t, TGLshort r, TGLshort q);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord4svARB)(unsigned target, PGLshort v);
extern DELPHI_PACKAGE void __stdcall (*glLoadTransposeMatrixfARB)(PGLfloat m);
extern DELPHI_PACKAGE void __stdcall (*glLoadTransposeMatrixdARB)(PGLdouble m);
extern DELPHI_PACKAGE void __stdcall (*glMultTransposeMatrixfARB)(PGLfloat m);
extern DELPHI_PACKAGE void __stdcall (*glMultTransposeMatrixdARB)(PGLdouble m);
extern DELPHI_PACKAGE void __stdcall (*glSampleCoverageARB)(TGLclampf Value, TGLboolean invert);
extern DELPHI_PACKAGE void __stdcall (*glCompressedTexImage3DARB)(unsigned target, TGLint level, unsigned internalformat, TGLsizei Width, TGLsizei Height, TGLsizei depth, TGLint border, TGLsizei imageSize, void * data);
extern DELPHI_PACKAGE void __stdcall (*glCompressedTexImage2DARB)(unsigned target, TGLint level, unsigned internalformat, TGLsizei Width, TGLsizei Height, TGLint border, TGLsizei imageSize, void * data);
extern DELPHI_PACKAGE void __stdcall (*glCompressedTexImage1DARB)(unsigned target, TGLint level, unsigned internalformat, TGLsizei Width, TGLint border, TGLsizei imageSize, void * data);
extern DELPHI_PACKAGE void __stdcall (*glCompressedTexSubImage3DARB)(unsigned target, TGLint level, TGLint xoffset, TGLint yoffset, TGLint zoffset, TGLsizei width, TGLsizei height, TGLsizei depth, unsigned Format, TGLsizei imageSize, void * data);
extern DELPHI_PACKAGE void __stdcall (*glCompressedTexSubImage2DARB)(unsigned target, TGLint level, TGLint xoffset, TGLint yoffset, TGLsizei width, TGLsizei height, unsigned Format, TGLsizei imageSize, void * data);
extern DELPHI_PACKAGE void __stdcall (*glCompressedTexSubImage1DARB)(unsigned target, TGLint level, TGLint xoffset, TGLsizei width, unsigned Format, TGLsizei imageSize, void * data);
extern DELPHI_PACKAGE void __stdcall (*glGetCompressedTexImageARB)(unsigned target, TGLint level, void * img);
extern DELPHI_PACKAGE void __stdcall (*glPointParameterfARB)(unsigned pname, float param);
extern DELPHI_PACKAGE void __stdcall (*glPointParameterfvARB)(unsigned pname, PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glWeightbvARB)(TGLint size, PGLbyte weights);
extern DELPHI_PACKAGE void __stdcall (*glWeightsvARB)(TGLint size, PGLshort weights);
extern DELPHI_PACKAGE void __stdcall (*glWeightivARB)(TGLint size, PGLint weights);
extern DELPHI_PACKAGE void __stdcall (*glWeightfvARB)(TGLint size, PGLfloat weights);
extern DELPHI_PACKAGE void __stdcall (*glWeightdvARB)(TGLint size, PGLdouble weights);
extern DELPHI_PACKAGE void __stdcall (*glWeightubvARB)(TGLint size, PGLubyte weights);
extern DELPHI_PACKAGE void __stdcall (*glWeightusvARB)(TGLint size, PGLushort weights);
extern DELPHI_PACKAGE void __stdcall (*glWeightuivARB)(TGLint size, PGLuint weights);
extern DELPHI_PACKAGE void __stdcall (*glWeightPointerARB)(TGLint size, unsigned _type, TGLsizei stride, void * _pointer);
extern DELPHI_PACKAGE void __stdcall (*glVertexBlendARB)(TGLint count);
extern DELPHI_PACKAGE void __stdcall (*glCurrentPaletteMatrixARB)(TGLint index);
extern DELPHI_PACKAGE void __stdcall (*glMatrixIndexubvARB)(TGLint size, PGLubyte indices);
extern DELPHI_PACKAGE void __stdcall (*glMatrixIndexusvARB)(TGLint size, PGLushort indices);
extern DELPHI_PACKAGE void __stdcall (*glMatrixIndexuivARB)(TGLint size, PGLuint indices);
extern DELPHI_PACKAGE void __stdcall (*glMatrixIndexPointerARB)(TGLint size, unsigned _type, TGLsizei stride, void * _pointer);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2dARB)(TGLdouble x, TGLdouble y);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2dvARB)(PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2fARB)(float x, float y);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2fvARB)(PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2iARB)(TGLint x, TGLint y);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2ivARB)(PGLint v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2sARB)(TGLshort x, TGLshort y);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2svARB)(PGLshort v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3dARB)(TGLdouble x, TGLdouble y, TGLdouble z);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3dvARB)(PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3fARB)(float x, float y, float z);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3fvARB)(PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3iARB)(TGLint x, TGLint y, TGLint z);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3ivARB)(PGLint v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3sARB)(TGLshort x, TGLshort y, TGLshort z);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3svARB)(PGLshort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib1dARB)(unsigned index, double x);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib1dvARB)(unsigned index, const PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib1fARB)(unsigned index, float x);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib1fvARB)(unsigned index, const PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib1sARB)(unsigned index, short x);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib1svARB)(unsigned index, const PGLshort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib2dARB)(unsigned index, double x, double y);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib2dvARB)(unsigned index, const PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib2fARB)(unsigned index, float x, float y);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib2fvARB)(unsigned index, const PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib2sARB)(unsigned index, short x, short y);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib2svARB)(unsigned index, const PGLshort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib3dARB)(unsigned index, double x, double y, double z);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib3dvARB)(unsigned index, const PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib3fARB)(unsigned index, float x, float y, float z);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib3fvARB)(unsigned index, const PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib3sARB)(unsigned index, short x, short y, short z);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib3svARB)(unsigned index, const PGLshort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4NbvARB)(unsigned index, const PGLbyte v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4NivARB)(unsigned index, const PGLint v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4NsvARB)(unsigned index, const PGLshort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4NubARB)(unsigned index, System::Byte x, System::Byte y, System::Byte z, System::Byte w);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4NubvARB)(unsigned index, const PGLubyte v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4NuivARB)(unsigned index, const PGLuint v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4NusvARB)(unsigned index, const PGLushort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4bvARB)(unsigned index, const PGLbyte v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4dARB)(unsigned index, double x, double y, double z, double w);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4dvARB)(unsigned index, const PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4fARB)(unsigned index, float x, float y, float z, float w);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4fvARB)(unsigned index, const PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4ivARB)(unsigned index, const PGLint v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4sARB)(unsigned index, short x, short y, short z, short w);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4svARB)(unsigned index, const PGLshort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4ubvARB)(unsigned index, const PGLubyte v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4uivARB)(unsigned index, const PGLuint v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4usvARB)(unsigned index, const PGLushort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribPointerARB)(unsigned index, int size, unsigned _type, System::ByteBool normalized, int stride, const void * _pointer);
extern DELPHI_PACKAGE void __stdcall (*glEnableVertexAttribArrayARB)(unsigned index);
extern DELPHI_PACKAGE void __stdcall (*glDisableVertexAttribArrayARB)(unsigned index);
extern DELPHI_PACKAGE void __stdcall (*glProgramStringARB)(unsigned target, unsigned format, int len, const void * _string);
extern DELPHI_PACKAGE void __stdcall (*glBindProgramARB)(unsigned target, unsigned _program);
extern DELPHI_PACKAGE void __stdcall (*glDeleteProgramsARB)(int n, const PGLuint programs);
extern DELPHI_PACKAGE void __stdcall (*glGenProgramsARB)(int n, PGLuint programs);
extern DELPHI_PACKAGE void __stdcall (*glProgramEnvParameter4dARB)(unsigned target, unsigned index, double x, double y, double z, double w);
extern DELPHI_PACKAGE void __stdcall (*glProgramEnvParameter4dvARB)(unsigned target, unsigned index, const PGLdouble params);
extern DELPHI_PACKAGE void __stdcall (*glProgramEnvParameter4fARB)(unsigned target, unsigned index, float x, float y, float z, float w);
extern DELPHI_PACKAGE void __stdcall (*glProgramEnvParameter4fvARB)(unsigned target, unsigned index, const PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glProgramLocalParameter4dARB)(unsigned target, unsigned index, double x, double y, double z, double w);
extern DELPHI_PACKAGE void __stdcall (*glProgramLocalParameter4dvARB)(unsigned target, unsigned index, const PGLdouble params);
extern DELPHI_PACKAGE void __stdcall (*glProgramLocalParameter4fARB)(unsigned target, unsigned index, float x, float y, float z, float w);
extern DELPHI_PACKAGE void __stdcall (*glProgramLocalParameter4fvARB)(unsigned target, unsigned index, const PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramEnvParameterdvARB)(unsigned target, unsigned index, PGLdouble params);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramEnvParameterfvARB)(unsigned target, unsigned index, PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramLocalParameterdvARB)(unsigned target, unsigned index, PGLdouble params);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramLocalParameterfvARB)(unsigned target, unsigned index, PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramivARB)(unsigned target, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramStringARB)(unsigned target, unsigned pname, void * _string);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribdvARB)(unsigned index, unsigned pname, PGLdouble params);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribfvARB)(unsigned index, unsigned pname, PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribivARB)(unsigned index, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribPointervARB)(unsigned index, unsigned pname, void * _pointer);
extern DELPHI_PACKAGE System::ByteBool __stdcall (*glIsProgramARB)(unsigned _program);
extern DELPHI_PACKAGE void __stdcall (*glBindBufferARB)(unsigned target, unsigned buffer);
extern DELPHI_PACKAGE void __stdcall (*glDeleteBuffersARB)(int n, const PGLuint buffers);
extern DELPHI_PACKAGE void __stdcall (*glGenBuffersARB)(int n, PGLuint buffers);
extern DELPHI_PACKAGE System::ByteBool __stdcall (*glIsBufferARB)(unsigned buffer);
extern DELPHI_PACKAGE void __stdcall (*glBufferDataARB)(unsigned target, int size, const void * data, unsigned usage);
extern DELPHI_PACKAGE void __stdcall (*glBufferSubDataARB)(unsigned target, unsigned offset, int size, const void * data);
extern DELPHI_PACKAGE void __stdcall (*glGetBufferSubDataARB)(unsigned target, unsigned offset, int size, void * data);
extern DELPHI_PACKAGE void * __stdcall (*glMapBufferARB)(unsigned target, unsigned access);
extern DELPHI_PACKAGE System::ByteBool __stdcall (*glUnmapBufferARB)(unsigned target);
extern DELPHI_PACKAGE void __stdcall (*glGetBufferParameterivARB)(unsigned target, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glGetBufferPointervARB)(unsigned target, unsigned pname, void * params);
extern DELPHI_PACKAGE void __stdcall (*glGenQueriesARB)(TGLsizei n, PGLuint ids);
extern DELPHI_PACKAGE void __stdcall (*glDeleteQueriesARB)(TGLsizei n, const PGLuint ids);
extern DELPHI_PACKAGE System::ByteBool __stdcall (*glIsQueryARB)(TGLuint id);
extern DELPHI_PACKAGE void __stdcall (*glBeginQueryARB)(unsigned target, TGLuint id);
extern DELPHI_PACKAGE void __stdcall (*glEndQueryARB)(unsigned target);
extern DELPHI_PACKAGE void __stdcall (*glGetQueryivARB)(unsigned target, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glGetQueryObjectivARB)(TGLuint id, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glGetQueryObjectuivARB)(TGLuint id, unsigned pname, PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glDeleteObjectARB)(GLhandleARB obj);
extern DELPHI_PACKAGE unsigned __stdcall (*glGetHandleARB)(unsigned pname);
extern DELPHI_PACKAGE void __stdcall (*glDetachObjectARB)(GLhandleARB containerObj, GLhandleARB attachedObj);
extern DELPHI_PACKAGE unsigned __stdcall (*glCreateShaderObjectARB)(unsigned shaderType);
extern DELPHI_PACKAGE void __stdcall (*glShaderSourceARB)(GLhandleARB shaderObj, int count, const PGLPCharArray _string, const PGLint length);
extern DELPHI_PACKAGE void __stdcall (*glCompileShaderARB)(GLhandleARB shaderObj);
extern DELPHI_PACKAGE unsigned __stdcall (*glCreateProgramObjectARB)(void);
extern DELPHI_PACKAGE void __stdcall (*glAttachObjectARB)(GLhandleARB containerObj, GLhandleARB obj);
extern DELPHI_PACKAGE void __stdcall (*glLinkProgramARB)(GLhandleARB programObj);
extern DELPHI_PACKAGE void __stdcall (*glUseProgramObjectARB)(GLhandleARB programObj);
extern DELPHI_PACKAGE void __stdcall (*glValidateProgramARB)(GLhandleARB programObj);
extern DELPHI_PACKAGE void __stdcall (*glUniform1fARB)(int location, float v0);
extern DELPHI_PACKAGE void __stdcall (*glUniform2fARB)(int location, float v0, float v1);
extern DELPHI_PACKAGE void __stdcall (*glUniform3fARB)(int location, float v0, float v1, float v2);
extern DELPHI_PACKAGE void __stdcall (*glUniform4fARB)(int location, float v0, float v1, float v2, float v3);
extern DELPHI_PACKAGE void __stdcall (*glUniform1iARB)(int location, int v0);
extern DELPHI_PACKAGE void __stdcall (*glUniform2iARB)(int location, int v0, int v1);
extern DELPHI_PACKAGE void __stdcall (*glUniform3iARB)(int location, int v0, int v1, int v2);
extern DELPHI_PACKAGE void __stdcall (*glUniform4iARB)(int location, int v0, int v1, int v2, int v3);
extern DELPHI_PACKAGE void __stdcall (*glUniform1fvARB)(int location, int count, PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glUniform2fvARB)(int location, int count, PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glUniform3fvARB)(int location, int count, PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glUniform4fvARB)(int location, int count, PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glUniform1ivARB)(int location, int count, PGLint value);
extern DELPHI_PACKAGE void __stdcall (*glUniform2ivARB)(int location, int count, PGLint value);
extern DELPHI_PACKAGE void __stdcall (*glUniform3ivARB)(int location, int count, PGLint value);
extern DELPHI_PACKAGE void __stdcall (*glUniform4ivARB)(int location, int count, PGLint value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix2fvARB)(int location, int count, System::ByteBool transpose, PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix3fvARB)(int location, int count, System::ByteBool transpose, PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix4fvARB)(int location, int count, System::ByteBool transpose, PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glGetObjectParameterfvARB)(GLhandleARB obj, unsigned pname, PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetObjectParameterivARB)(GLhandleARB obj, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glGetInfoLogARB)(GLhandleARB obj, int maxLength, PGLsizei length, PGLChar infoLog);
extern DELPHI_PACKAGE void __stdcall (*glGetAttachedObjectsARB)(GLhandleARB containerObj, int maxCount, PGLsizei count, PGLhandleARB obj);
extern DELPHI_PACKAGE int __stdcall (*glGetUniformLocationARB)(GLhandleARB programObj, const PGLChar name);
extern DELPHI_PACKAGE void __stdcall (*glGetActiveUniformARB)(GLhandleARB programObj, unsigned index, int maxLength, PGLsizei length, PGLint size, PGLenum _type, PGLChar name);
extern DELPHI_PACKAGE void __stdcall (*glGetUniformfvARB)(GLhandleARB programObj, int location, PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetUniformivARB)(GLhandleARB programObj, int location, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glGetShaderSourceARB)(GLhandleARB obj, int maxLength, PGLsizei length, PGLChar source);
extern DELPHI_PACKAGE void __stdcall (*glBindAttribLocationARB)(GLhandleARB programObj, unsigned index, const PGLChar name);
extern DELPHI_PACKAGE void __stdcall (*glGetActiveAttribARB)(GLhandleARB programObj, unsigned index, int maxLength, PGLsizei length, PGLint size, PGLenum _type, PGLChar name);
extern DELPHI_PACKAGE int __stdcall (*glGetAttribLocationARB)(GLhandleARB programObj, const PGLChar name);
extern DELPHI_PACKAGE void __stdcall (*glDrawBuffersARB)(int n, const PGLenum bufs);
extern DELPHI_PACKAGE void __stdcall (*glClampColorARB)(unsigned target, unsigned clamp);
extern DELPHI_PACKAGE void __stdcall (*glDrawArraysInstancedARB)(unsigned mode, TGLint first, TGLsizei count, TGLsizei primcount);
extern DELPHI_PACKAGE void __stdcall (*glDrawElementsInstancedARB)(unsigned mode, TGLsizei count, unsigned _type, PGLvoid indices, TGLsizei primcount);
extern DELPHI_PACKAGE System::ByteBool __stdcall (*glIsRenderbuffer)(TGLuint renderbuffer);
extern DELPHI_PACKAGE void __stdcall (*glBindRenderbuffer)(unsigned target, TGLuint renderbuffer);
extern DELPHI_PACKAGE void __stdcall (*glDeleteRenderbuffers)(TGLsizei n, PGLuint renderbuffers);
extern DELPHI_PACKAGE void __stdcall (*glGenRenderbuffers)(TGLsizei n, PGLuint renderbuffers);
extern DELPHI_PACKAGE void __stdcall (*glRenderbufferStorage)(unsigned target, unsigned internalformat, TGLsizei width, TGLsizei height);
extern DELPHI_PACKAGE void __stdcall (*glRenderbufferStorageMultisample)(unsigned target, TGLsizei samples, unsigned internalformat, TGLsizei width, TGLsizei height);
extern DELPHI_PACKAGE void __stdcall (*glGetRenderbufferParameteriv)(unsigned target, unsigned pname, PGLint params);
extern DELPHI_PACKAGE System::ByteBool __stdcall (*glIsFramebuffer)(TGLuint framebuffer);
extern DELPHI_PACKAGE void __stdcall (*glBindFramebuffer)(unsigned target, TGLuint framebuffer);
extern DELPHI_PACKAGE void __stdcall (*glDeleteFramebuffers)(TGLsizei n, PGLuint framebuffers);
extern DELPHI_PACKAGE void __stdcall (*glGenFramebuffers)(TGLsizei n, PGLuint framebuffers);
extern DELPHI_PACKAGE unsigned __stdcall (*glCheckFramebufferStatus)(unsigned target);
extern DELPHI_PACKAGE void __stdcall (*glFramebufferTexture1D)(unsigned target, unsigned attachment, unsigned textarget, TGLuint texture, TGLint level);
extern DELPHI_PACKAGE void __stdcall (*glFramebufferTexture2D)(unsigned target, unsigned attachment, unsigned textarget, TGLuint texture, TGLint level);
extern DELPHI_PACKAGE void __stdcall (*glFramebufferTexture3D)(unsigned target, unsigned attachment, unsigned textarget, TGLuint texture, TGLint level, TGLint layer);
extern DELPHI_PACKAGE void __stdcall (*glFramebufferTextureLayer)(unsigned target, unsigned attachment, TGLuint texture, TGLint level, TGLint layer);
extern DELPHI_PACKAGE void __stdcall (*glFramebufferRenderbuffer)(unsigned target, unsigned attachment, unsigned renderbuffertarget, TGLuint renderbuffer);
extern DELPHI_PACKAGE void __stdcall (*glGetFramebufferAttachmentParameteriv)(unsigned target, unsigned attachment, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glBlitFramebuffer)(TGLint srcX0, TGLint srcY0, TGLint srcX1, TGLint srcY1, TGLint dstX0, TGLint dstY0, TGLint dstX1, TGLint dstY1, TGLbitfield mask, unsigned filter);
extern DELPHI_PACKAGE void __stdcall (*glGenerateMipmap)(unsigned target);
extern DELPHI_PACKAGE void __stdcall (*glProgramParameteriARB)(TGLuint _program, unsigned pname, TGLint value);
extern DELPHI_PACKAGE void __stdcall (*glFramebufferTextureARB)(unsigned target, unsigned attachment, TGLuint texture, TGLint level);
extern DELPHI_PACKAGE void __stdcall (*glFramebufferTextureLayerARB)(unsigned target, unsigned attachment, TGLuint texture, TGLint level, TGLint layer);
extern DELPHI_PACKAGE void __stdcall (*glFramebufferTextureFaceARB)(unsigned target, unsigned attachment, TGLuint texture, TGLint level, unsigned face);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribDivisorARB)(TGLuint index, TGLuint divisor);
extern DELPHI_PACKAGE void * __stdcall (*glMapBufferRange)(unsigned target, TGLint offset, TGLsizei length, TGLbitfield access);
extern DELPHI_PACKAGE void __stdcall (*glFlushMappedBufferRange)(unsigned target, TGLint offset, TGLsizei length);
extern DELPHI_PACKAGE void __stdcall (*glTexBufferARB)(unsigned target, unsigned internalformat, TGLuint buffer);
extern DELPHI_PACKAGE void __stdcall (*glBindVertexArray)(TGLuint _array);
extern DELPHI_PACKAGE void __stdcall (*glDeleteVertexArrays)(TGLsizei n, PGLuint arrays);
extern DELPHI_PACKAGE void __stdcall (*glGenVertexArrays)(TGLsizei n, PGLuint arrays);
extern DELPHI_PACKAGE System::ByteBool __stdcall (*glIsVertexArray)(TGLuint _array);
extern DELPHI_PACKAGE void __stdcall (*glGetUniformIndices)(TGLuint _program, TGLsizei uniformCount, PGLPCharArray uniformNames, PGLuint uniformIndices);
extern DELPHI_PACKAGE void __stdcall (*glGetActiveUniformsiv)(TGLuint _program, TGLsizei uniformCount, PGLuint uniformIndices, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glGetActiveUniformName)(TGLuint _program, TGLuint uniformIndex, TGLsizei bufSize, PGLsizei length, PGLChar uniformName);
extern DELPHI_PACKAGE unsigned __stdcall (*glGetUniformBlockIndex)(TGLuint _program, PGLChar uniformBlockName);
extern DELPHI_PACKAGE void __stdcall (*glGetActiveUniformBlockiv)(TGLuint _program, TGLuint uniformBlockIndex, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glGetActiveUniformBlockName)(TGLuint _program, TGLuint uniformBlockIndex, TGLsizei bufSize, PGLsizei length, PGLChar uniformBlockName);
extern DELPHI_PACKAGE void __stdcall (*glUniformBlockBinding)(TGLuint _program, TGLuint uniformBlockIndex, TGLuint uniformBlockBinding);
extern DELPHI_PACKAGE void __stdcall (*glCopyBufferSubData)(unsigned readTarget, unsigned writeTarget, TGLintptr readOffset, TGLintptr writeOffset, TGLsizeiptr size);
extern DELPHI_PACKAGE void __stdcall (*glDrawElementsBaseVertex)(unsigned mode, TGLsizei count, unsigned _type, PGLvoid indices, TGLint basevertex);
extern DELPHI_PACKAGE void __stdcall (*glDrawRangeElementsBaseVertex)(unsigned mode, TGLuint start, TGLuint _end, TGLsizei count, unsigned _type, PGLvoid indices, TGLint basevertex);
extern DELPHI_PACKAGE void __stdcall (*glDrawElementsInstancedBaseVertex)(unsigned mode, TGLsizei count, unsigned _type, PGLvoid indices, TGLsizei primcount, TGLint basevertex);
extern DELPHI_PACKAGE void __stdcall (*glMultiDrawElementsBaseVertex)(unsigned mode, PGLsizei count, unsigned _type, void *indices, TGLsizei primcount, PGLint basevertex);
extern DELPHI_PACKAGE void __stdcall (*glProvokingVertex)(unsigned mode);
extern DELPHI_PACKAGE __int64 __stdcall (*glFenceSync)(unsigned condition, TGLbitfield flags);
extern DELPHI_PACKAGE System::ByteBool __stdcall (*glIsSync)(TGLsync sync);
extern DELPHI_PACKAGE void __stdcall (*glDeleteSync)(TGLsync sync);
extern DELPHI_PACKAGE unsigned __stdcall (*glClientWaitSync)(TGLsync sync, TGLbitfield flags, TGLuint64 timeout);
extern DELPHI_PACKAGE void __stdcall (*glWaitSync)(TGLsync sync, TGLbitfield flags, TGLuint64 timeout);
extern DELPHI_PACKAGE void __stdcall (*glGetInteger64v)(unsigned pname, PGLint64 params);
extern DELPHI_PACKAGE void __stdcall (*glGetSynciv)(TGLsync sync, unsigned pname, TGLsizei bufSize, PGLsizei length, PGLint values);
extern DELPHI_PACKAGE void __stdcall (*glTexImage2DMultisample)(unsigned target, TGLsizei samples, TGLint internalformat, TGLsizei width, TGLsizei height, TGLboolean fixedsamplelocations);
extern DELPHI_PACKAGE void __stdcall (*glTexImage3DMultisample)(unsigned target, TGLsizei samples, TGLint internalformat, TGLsizei width, TGLsizei height, TGLsizei depth, TGLboolean fixedsamplelocations);
extern DELPHI_PACKAGE void __stdcall (*glGetMultisamplefv)(unsigned pname, TGLuint index, PGLfloat val);
extern DELPHI_PACKAGE void __stdcall (*glSampleMaski)(TGLuint index, TGLbitfield mask);
extern DELPHI_PACKAGE void __stdcall (*glBlendEquationi)(TGLuint buf, unsigned mode);
extern DELPHI_PACKAGE void __stdcall (*glBlendEquationSeparatei)(TGLuint buf, unsigned modeRGB, unsigned modeAlpha);
extern DELPHI_PACKAGE void __stdcall (*glBlendFunci)(TGLuint buf, unsigned src, unsigned dst);
extern DELPHI_PACKAGE void __stdcall (*glBlendFuncSeparatei)(TGLuint buf, unsigned srcRGB, unsigned dstRGB, unsigned srcAlpha, unsigned dstAlpha);
extern DELPHI_PACKAGE void __stdcall (*glMinSampleShading)(TGLclampf value);
extern DELPHI_PACKAGE void __stdcall (*glBindFragDataLocationIndexed)(TGLuint _program, TGLuint colorNumber, TGLuint index, const PGLChar name);
extern DELPHI_PACKAGE int __stdcall (*glGetFragDataIndex)(TGLuint _program, const PGLChar name);
extern DELPHI_PACKAGE void __stdcall (*glGenSamplers)(TGLsizei count, PGLuint samplers);
extern DELPHI_PACKAGE void __stdcall (*glDeleteSamplers)(TGLsizei count, const PGLuint samplers);
extern DELPHI_PACKAGE System::ByteBool __stdcall (*glIsSampler)(TGLuint sampler);
extern DELPHI_PACKAGE void __stdcall (*glBindSampler)(TGLuint _unit, TGLuint sampler);
extern DELPHI_PACKAGE void __stdcall (*glSamplerParameteri)(TGLuint sampler, unsigned pname, TGLint param);
extern DELPHI_PACKAGE void __stdcall (*glSamplerParameteriv)(TGLuint sampler, unsigned pname, const PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glSamplerParameterf)(TGLuint sampler, unsigned pname, float param);
extern DELPHI_PACKAGE void __stdcall (*glSamplerParameterfv)(TGLuint sampler, unsigned pname, const PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glSamplerParameterIiv)(TGLuint sampler, unsigned pname, const PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glSamplerParameterIuiv)(TGLuint sampler, unsigned pname, const PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glGetSamplerParameteriv)(TGLuint sampler, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glGetSamplerParameterIiv)(TGLuint sampler, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glGetSamplerParameterfv)(TGLuint sampler, unsigned pname, PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetSamplerParameterIfv)(TGLuint sampler, unsigned pname, PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glQueryCounter)(TGLuint id, unsigned target);
extern DELPHI_PACKAGE void __stdcall (*glGetQueryObjecti64v)(TGLuint id, unsigned pname, PGLint64 params);
extern DELPHI_PACKAGE void __stdcall (*glGetQueryObjectui64v)(TGLuint id, unsigned pname, PGLuint64 params);
extern DELPHI_PACKAGE void __stdcall (*glVertexP2ui)(unsigned _type, TGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glVertexP2uiv)(unsigned _type, const PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glVertexP3ui)(unsigned _type, TGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glVertexP3uiv)(unsigned _type, const PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glVertexP4ui)(unsigned _type, TGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glVertexP4uiv)(unsigned _type, const PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glTexCoordP1ui)(unsigned _type, TGLuint coords);
extern DELPHI_PACKAGE void __stdcall (*glTexCoordP1uiv)(unsigned _type, const PGLuint coords);
extern DELPHI_PACKAGE void __stdcall (*glTexCoordP2ui)(unsigned _type, TGLuint coords);
extern DELPHI_PACKAGE void __stdcall (*glTexCoordP2uiv)(unsigned _type, const PGLuint coords);
extern DELPHI_PACKAGE void __stdcall (*glTexCoordP3ui)(unsigned _type, TGLuint coords);
extern DELPHI_PACKAGE void __stdcall (*glTexCoordP3uiv)(unsigned _type, const PGLuint coords);
extern DELPHI_PACKAGE void __stdcall (*glTexCoordP4ui)(unsigned _type, TGLuint coords);
extern DELPHI_PACKAGE void __stdcall (*glTexCoordP4uiv)(unsigned _type, const PGLuint coords);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoordP1ui)(unsigned texture, unsigned _type, TGLuint coords);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoordP1uiv)(unsigned texture, unsigned _type, const PGLuint coords);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoordP2ui)(unsigned texture, unsigned _type, TGLuint coords);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoordP2uiv)(unsigned texture, unsigned _type, const PGLuint coords);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoordP3ui)(unsigned texture, unsigned _type, TGLuint coords);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoordP3uiv)(unsigned texture, unsigned _type, const PGLuint coords);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoordP4ui)(unsigned texture, unsigned _type, TGLuint coords);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoordP4uiv)(unsigned texture, unsigned _type, const PGLuint coords);
extern DELPHI_PACKAGE void __stdcall (*glNormalP3ui)(unsigned _type, TGLuint coords);
extern DELPHI_PACKAGE void __stdcall (*glNormalP3uiv)(unsigned _type, const PGLuint coords);
extern DELPHI_PACKAGE void __stdcall (*glColorP3ui)(unsigned _type, TGLuint color);
extern DELPHI_PACKAGE void __stdcall (*glColorP3uiv)(unsigned _type, const PGLuint color);
extern DELPHI_PACKAGE void __stdcall (*glColorP4ui)(unsigned _type, TGLuint color);
extern DELPHI_PACKAGE void __stdcall (*glColorP4uiv)(unsigned _type, const PGLuint color);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColorP3ui)(unsigned _type, TGLuint color);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColorP3uiv)(unsigned _type, const PGLuint color);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribP1ui)(TGLuint index, unsigned _type, TGLboolean normalized, TGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribP1uiv)(TGLuint index, unsigned _type, TGLboolean normalized, const PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribP2ui)(TGLuint index, unsigned _type, TGLboolean normalized, TGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribP2uiv)(TGLuint index, unsigned _type, TGLboolean normalized, const PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribP3ui)(TGLuint index, unsigned _type, TGLboolean normalized, TGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribP3uiv)(TGLuint index, unsigned _type, TGLboolean normalized, const PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribP4ui)(TGLuint index, unsigned _type, TGLboolean normalized, TGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribP4uiv)(TGLuint index, unsigned _type, TGLboolean normalized, const PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glDrawArraysIndirect)(unsigned mode, const PGLvoid indirect);
extern DELPHI_PACKAGE void __stdcall (*glDrawElementsIndirect)(unsigned mode, unsigned _type, const PGLvoid indirect);
extern DELPHI_PACKAGE void __stdcall (*glUniform1d)(TGLint location, TGLdouble x);
extern DELPHI_PACKAGE void __stdcall (*glUniform2d)(TGLint location, TGLdouble x, TGLdouble y);
extern DELPHI_PACKAGE void __stdcall (*glUniform3d)(TGLint location, TGLdouble x, TGLdouble y, TGLdouble z);
extern DELPHI_PACKAGE void __stdcall (*glUniform4d)(TGLint location, TGLdouble x, TGLdouble y, TGLdouble z, TGLdouble w);
extern DELPHI_PACKAGE void __stdcall (*glUniform1dv)(TGLint location, TGLsizei count, const PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glUniform2dv)(TGLint location, TGLsizei count, const PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glUniform3dv)(TGLint location, TGLsizei count, const PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glUniform4dv)(TGLint location, TGLsizei count, const PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix2dv)(TGLint location, TGLsizei count, TGLboolean transpose, const PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix3dv)(TGLint location, TGLsizei count, TGLboolean transpose, const PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix4dv)(TGLint location, TGLsizei count, TGLboolean transpose, const PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix2x3dv)(TGLint location, TGLsizei count, TGLboolean transpose, const PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix2x4dv)(TGLint location, TGLsizei count, TGLboolean transpose, const PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix3x2dv)(TGLint location, TGLsizei count, TGLboolean transpose, const PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix3x4dv)(TGLint location, TGLsizei count, TGLboolean transpose, const PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix4x2dv)(TGLint location, TGLsizei count, TGLboolean transpose, const PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix4x3dv)(TGLint location, TGLsizei count, TGLboolean transpose, const PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glGetUniformdv)(TGLuint _program, TGLint location, PGLdouble params);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform1dEXT)(TGLuint _program, TGLint location, TGLdouble x);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform2dEXT)(TGLuint _program, TGLint location, TGLdouble x, TGLdouble y);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform3dEXT)(TGLuint _program, TGLint location, TGLdouble x, TGLdouble y, TGLdouble z);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform4dEXT)(TGLuint _program, TGLint location, TGLdouble x, TGLdouble y, TGLdouble z, TGLdouble w);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform1dvEXT)(TGLuint _program, TGLint location, TGLsizei count, const PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform2dvEXT)(TGLuint _program, TGLint location, TGLsizei count, const PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform3dvEXT)(TGLuint _program, TGLint location, TGLsizei count, const PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform4dvEXT)(TGLuint _program, TGLint location, TGLsizei count, const PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix2dvEXT)(TGLuint _program, TGLint location, TGLsizei count, TGLboolean transpose, const PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix3dvEXT)(TGLuint _program, TGLint location, TGLsizei count, TGLboolean transpose, const PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix4dvEXT)(TGLuint _program, TGLint location, TGLsizei count, TGLboolean transpose, const PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix2x3dvEXT)(TGLuint _program, TGLint location, TGLsizei count, TGLboolean transpose, const PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix2x4dvEXT)(TGLuint _program, TGLint location, TGLsizei count, TGLboolean transpose, const PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix3x2dvEXT)(TGLuint _program, TGLint location, TGLsizei count, TGLboolean transpose, const PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix3x4dvEXT)(TGLuint _program, TGLint location, TGLsizei count, TGLboolean transpose, const PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix4x2dvEXT)(TGLuint _program, TGLint location, TGLsizei count, TGLboolean transpose, const PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix4x3dvEXT)(TGLuint _program, TGLint location, TGLsizei count, TGLboolean transpose, const PGLdouble value);
extern DELPHI_PACKAGE int __stdcall (*glGetSubroutineUniformLocation)(TGLuint _program, unsigned shadertype, const PGLChar name);
extern DELPHI_PACKAGE unsigned __stdcall (*glGetSubroutineIndex)(TGLuint _program, unsigned shadertype, const PGLChar name);
extern DELPHI_PACKAGE void __stdcall (*glGetActiveSubroutineUniformiv)(TGLuint _program, unsigned shadertype, TGLuint index, unsigned pname, PGLint values);
extern DELPHI_PACKAGE void __stdcall (*glGetActiveSubroutineUniformName)(TGLuint _program, unsigned shadertype, TGLuint index, TGLsizei bufsize, PGLsizei length, PGLChar name);
extern DELPHI_PACKAGE void __stdcall (*glGetActiveSubroutineName)(TGLuint _program, unsigned shadertype, TGLuint index, TGLsizei bufsize, PGLsizei length, PGLChar name);
extern DELPHI_PACKAGE void __stdcall (*glUniformSubroutinesuiv)(unsigned shadertype, TGLsizei count, const PGLuint indices);
extern DELPHI_PACKAGE void __stdcall (*glGetUniformSubroutineuiv)(unsigned shadertype, TGLint location, PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramStageiv)(TGLuint _program, unsigned shadertype, unsigned pname, PGLint values);
extern DELPHI_PACKAGE void __stdcall (*glPatchParameteri)(unsigned pname, TGLint value);
extern DELPHI_PACKAGE void __stdcall (*glPatchParameterfv)(unsigned pname, const PGLfloat values);
extern DELPHI_PACKAGE void __stdcall (*glBindTransformFeedback)(unsigned target, TGLuint id);
extern DELPHI_PACKAGE void __stdcall (*glDeleteTransformFeedbacks)(TGLsizei n, const PGLuint ids);
extern DELPHI_PACKAGE void __stdcall (*glGenTransformFeedbacks)(TGLsizei n, PGLuint ids);
extern DELPHI_PACKAGE System::ByteBool __stdcall (*glIsTransformFeedback)(TGLuint id);
extern DELPHI_PACKAGE void __stdcall (*glPauseTransformFeedback)(void);
extern DELPHI_PACKAGE void __stdcall (*glResumeTransformFeedback)(void);
extern DELPHI_PACKAGE void __stdcall (*glDrawTransformFeedback)(unsigned mode, TGLuint id);
extern DELPHI_PACKAGE void __stdcall (*glDrawTransformFeedbackStream)(unsigned mode, TGLuint id, TGLuint stream);
extern DELPHI_PACKAGE void __stdcall (*glBeginQueryIndexed)(unsigned target, TGLuint index, TGLuint id);
extern DELPHI_PACKAGE void __stdcall (*glEndQueryIndexed)(unsigned target, TGLuint index);
extern DELPHI_PACKAGE void __stdcall (*glGetQueryIndexediv)(unsigned target, TGLuint index, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glArrayElementArrayEXT)(unsigned mode, TGLsizei count, void * pi);
extern DELPHI_PACKAGE void __stdcall (*glAddSwapHintRectWIN)(TGLint x, TGLint y, TGLsizei width, TGLsizei height);
extern DELPHI_PACKAGE void __stdcall (*glBlendColorEXT)(TGLclampf red, TGLclampf green, TGLclampf blue, TGLclampf alpha);
extern DELPHI_PACKAGE void __stdcall (*glPolygonOffsetEXT)(float factor, float bias);
extern DELPHI_PACKAGE void __stdcall (*glTexImage3DEXT)(unsigned target, TGLint level, unsigned internalformat, TGLsizei width, TGLsizei height, TGLsizei depth, TGLint border, unsigned Format, unsigned AType, void * pixels);
extern DELPHI_PACKAGE void __stdcall (*glTexSubImage1DEXT)(unsigned target, TGLint level, TGLint xoffset, TGLsizei width, unsigned format, unsigned Atype, void * pixels);
extern DELPHI_PACKAGE void __stdcall (*glTexSubImage2DEXT)(unsigned target, TGLint level, TGLint xoffset, TGLint yoffset, TGLsizei width, TGLsizei height, unsigned format, unsigned Atype, void * pixels);
extern DELPHI_PACKAGE void __stdcall (*glTexSubImage3DEXT)(unsigned target, TGLint level, TGLint xoffset, TGLint yoffset, TGLint zoffset, TGLsizei width, TGLsizei height, TGLsizei depth, unsigned format, unsigned Atype, void * pixels);
extern DELPHI_PACKAGE void __stdcall (*glCopyTexImage1DEXT)(unsigned target, TGLint level, unsigned internalFormat, TGLint x, TGLint y, TGLsizei width, TGLint border);
extern DELPHI_PACKAGE void __stdcall (*glCopyTexImage2DEXT)(unsigned target, TGLint level, unsigned internalFormat, TGLint x, TGLint y, TGLsizei width, TGLsizei height, TGLint border);
extern DELPHI_PACKAGE void __stdcall (*glCopyTexSubImage1DEXT)(unsigned target, TGLint level, TGLint xoffset, TGLint x, TGLint y, TGLsizei width);
extern DELPHI_PACKAGE void __stdcall (*glCopyTexSubImage2DEXT)(unsigned target, TGLint level, TGLint xoffset, TGLint yoffset, TGLint x, TGLint y, TGLsizei width, TGLsizei height);
extern DELPHI_PACKAGE void __stdcall (*glCopyTexSubImage3DEXT)(unsigned target, TGLint level, TGLint xoffset, TGLint yoffset, TGLint zoffset, TGLint x, TGLint y, TGLsizei width, TGLsizei height);
extern DELPHI_PACKAGE void __stdcall (*glGenTexturesEXT)(TGLsizei n, PGLuint textures);
extern DELPHI_PACKAGE void __stdcall (*glDeleteTexturesEXT)(TGLsizei n, PGLuint textures);
extern DELPHI_PACKAGE void __stdcall (*glBindTextureEXT)(unsigned target, TGLuint texture);
extern DELPHI_PACKAGE void __stdcall (*glPrioritizeTexturesEXT)(TGLsizei n, PGLuint textures, PGLclampf priorities);
extern DELPHI_PACKAGE System::ByteBool __stdcall (*glAreTexturesResidentEXT)(TGLsizei n, PGLuint textures, PGLboolean residences);
extern DELPHI_PACKAGE System::ByteBool __stdcall (*glIsTextureEXT)(TGLuint texture);
extern DELPHI_PACKAGE void __stdcall (*glSampleMaskSGIS)(TGLclampf Value, TGLboolean invert);
extern DELPHI_PACKAGE void __stdcall (*glSamplePatternSGIS)(unsigned pattern);
extern DELPHI_PACKAGE void __stdcall (*glBlendEquationEXT)(unsigned mode);
extern DELPHI_PACKAGE void __stdcall (*glColorTableEXT)(unsigned target, unsigned internalFormat, TGLsizei width, unsigned format, unsigned atype, void * data);
extern DELPHI_PACKAGE void __stdcall (*glColorSubTableExt)(unsigned target, TGLsizei start, TGLsizei count, unsigned format, unsigned atype, void * data);
extern DELPHI_PACKAGE void __stdcall (*glGetColorTableEXT)(unsigned target, unsigned format, unsigned atype, void * data);
extern DELPHI_PACKAGE void __stdcall (*glGetColorTableParameterfvEXT)(unsigned target, unsigned pname, PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetColorTableParameterivEXT)(unsigned target, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glIndexMaterialEXT)(unsigned face, unsigned mode);
extern DELPHI_PACKAGE void __stdcall (*glIndexFuncEXT)(unsigned func, float ref);
extern DELPHI_PACKAGE void __stdcall (*glLockArraysEXT)(TGLint first, TGLsizei count);
extern DELPHI_PACKAGE void __stdcall (*glUnlockArraysEXT)(void);
extern DELPHI_PACKAGE void __stdcall (*glDrawRangeElementsEXT)(unsigned mode, TGLuint start, TGLuint Aend, TGLsizei Count, unsigned Atype, void * indices);
extern DELPHI_PACKAGE void __stdcall (*glBeginSceneEXT)(void);
extern DELPHI_PACKAGE void __stdcall (*glEndSceneEXT)(void);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3bEXT)(TGLbyte red, TGLbyte green, TGLbyte blue);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3bvEXT)(PGLbyte v);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3dEXT)(TGLdouble red, TGLdouble green, TGLdouble blue);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3dvEXT)(PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3fEXT)(float red, float green, float blue);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3fvEXT)(PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3iEXT)(TGLint red, TGLint green, TGLint blue);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3ivEXT)(PGLint v);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3sEXT)(TGLshort red, TGLshort green, TGLshort blue);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3svEXT)(PGLshort v);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3ubEXT)(TGLubyte red, TGLubyte green, TGLubyte blue);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3ubvEXT)(PGLubyte v);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3uiEXT)(TGLuint red, TGLuint green, TGLuint blue);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3uivEXT)(PGLuint v);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3usEXT)(TGLushort red, TGLushort green, TGLushort blue);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3usvEXT)(PGLushort v);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColorPointerEXT)(TGLint Size, unsigned Atype, TGLsizei stride, void * p);
extern DELPHI_PACKAGE void __stdcall (*glMultiDrawArraysEXT)(unsigned mode, PGLint First, PGLsizei Count, TGLsizei primcount);
extern DELPHI_PACKAGE void __stdcall (*glMultiDrawElementsEXT)(unsigned mode, PGLsizei Count, unsigned AType, void *indices, TGLsizei primcount);
extern DELPHI_PACKAGE void __stdcall (*glFogCoordfEXT)(float coord);
extern DELPHI_PACKAGE void __stdcall (*glFogCoordfvEXT)(PGLfloat coord);
extern DELPHI_PACKAGE void __stdcall (*glFogCoorddEXT)(TGLdouble coord);
extern DELPHI_PACKAGE void __stdcall (*glFogCoorddvEXT)(PGLdouble coord);
extern DELPHI_PACKAGE void __stdcall (*glFogCoordPointerEXT)(unsigned AType, TGLsizei stride, void * p);
extern DELPHI_PACKAGE void __stdcall (*glBlendFuncSeparateEXT)(unsigned sfactorRGB, unsigned dfactorRGB, unsigned sfactorAlpha, unsigned dfactorAlpha);
extern DELPHI_PACKAGE void __stdcall (*glFlushVertexArrayRangeNV)(void);
extern DELPHI_PACKAGE void __stdcall (*glVertexArrayRangeNV)(TGLsizei Size, void * p);
extern DELPHI_PACKAGE void * __stdcall (*wglAllocateMemoryNV)(TGLsizei size, float readFrequency, float writeFrequency, float priority);
extern DELPHI_PACKAGE void __stdcall (*wglFreeMemoryNV)(void * ptr);
extern DELPHI_PACKAGE void __stdcall (*glCombinerParameterfvNV)(unsigned pname, PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glCombinerParameterfNV)(unsigned pname, float param);
extern DELPHI_PACKAGE void __stdcall (*glCombinerParameterivNV)(unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glCombinerParameteriNV)(unsigned pname, TGLint param);
extern DELPHI_PACKAGE void __stdcall (*glCombinerInputNV)(unsigned stage, unsigned portion, unsigned variable, unsigned input, unsigned mapping, unsigned componentUsage);
extern DELPHI_PACKAGE void __stdcall (*glCombinerOutputNV)(unsigned stage, unsigned portion, unsigned abOutput, unsigned cdOutput, unsigned sumOutput, unsigned scale, unsigned bias, TGLboolean abDotProduct, TGLboolean cdDotProduct, TGLboolean muxSum);
extern DELPHI_PACKAGE void __stdcall (*glFinalCombinerInputNV)(unsigned variable, unsigned input, unsigned mapping, unsigned componentUsage);
extern DELPHI_PACKAGE void __stdcall (*glGetCombinerInputParameterfvNV)(unsigned stage, unsigned portion, unsigned variable, unsigned pname, PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetCombinerInputParameterivNV)(unsigned stage, unsigned portion, unsigned variable, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glGetCombinerOutputParameterfvNV)(unsigned stage, unsigned portion, unsigned pname, PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetCombinerOutputParameterivNV)(unsigned stage, unsigned portion, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glGetFinalCombinerInputParameterfvNV)(unsigned variable, unsigned pname, PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetFinalCombinerInputParameterivNV)(unsigned variable, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glResizeBuffersMESA)(void);
extern DELPHI_PACKAGE void __stdcall (*glTbufferMask3DFX)(TGLuint mask);
extern DELPHI_PACKAGE void __stdcall (*glSampleMaskEXT)(TGLclampf Value, TGLboolean invert);
extern DELPHI_PACKAGE void __stdcall (*glSamplePatternEXT)(unsigned pattern);
extern DELPHI_PACKAGE void __stdcall (*glTextureColorMaskSGIS)(TGLboolean red, TGLboolean green, TGLboolean blue, TGLboolean alpha);
extern DELPHI_PACKAGE void __stdcall (*glGenFencesNV)(TGLsizei n, PGLuint fences);
extern DELPHI_PACKAGE void __stdcall (*glDeleteFencesNV)(TGLsizei n, PGLuint fences);
extern DELPHI_PACKAGE void __stdcall (*glSetFenceNV)(TGLuint fence, unsigned condition);
extern DELPHI_PACKAGE System::ByteBool __stdcall (*glTestFenceNV)(TGLuint fence);
extern DELPHI_PACKAGE void __stdcall (*glFinishFenceNV)(TGLuint fence);
extern DELPHI_PACKAGE System::ByteBool __stdcall (*glIsFenceNV)(TGLuint fence);
extern DELPHI_PACKAGE void __stdcall (*glGetFenceivNV)(TGLuint fence, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glAreProgramsResidentNV)(TGLsizei n, PGLuint programs, PGLboolean residences);
extern DELPHI_PACKAGE void __stdcall (*glBindProgramNV)(unsigned target, TGLuint id);
extern DELPHI_PACKAGE void __stdcall (*glDeleteProgramsNV)(TGLsizei n, PGLuint programs);
extern DELPHI_PACKAGE void __stdcall (*glExecuteProgramNV)(unsigned target, TGLuint id, PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGenProgramsNV)(TGLsizei n, PGLuint programs);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramParameterdvNV)(unsigned target, TGLuint index, unsigned pname, PGLdouble params);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramParameterfvNV)(unsigned target, TGLuint index, unsigned pname, PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramivNV)(TGLuint id, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramStringNV)(TGLuint id, unsigned pname, PGLubyte programIdx);
extern DELPHI_PACKAGE void __stdcall (*glGetTrackMatrixivNV)(unsigned target, TGLuint address, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribdvNV)(TGLuint index, unsigned pname, PGLdouble params);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribfvNV)(TGLuint index, unsigned pname, PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribivNV)(TGLuint index, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribPointervNV)(TGLuint index, unsigned pname, PGLPointer pointer);
extern DELPHI_PACKAGE System::ByteBool __stdcall (*glIsProgramNV)(TGLuint id);
extern DELPHI_PACKAGE void __stdcall (*glLoadProgramNV)(unsigned target, TGLuint id, TGLsizei len, PGLubyte programIdx);
extern DELPHI_PACKAGE void __stdcall (*glProgramParameter4dNV)(unsigned target, TGLuint index, TGLdouble x, TGLdouble y, TGLdouble z, TGLdouble w);
extern DELPHI_PACKAGE void __stdcall (*glProgramParameter4dvNV)(unsigned target, TGLuint index, PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glProgramParameter4fNV)(unsigned target, TGLuint index, float x, float y, float z, float w);
extern DELPHI_PACKAGE void __stdcall (*glProgramParameter4fvNV)(unsigned target, TGLuint index, PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glProgramParameters4dvNV)(unsigned target, TGLuint index, TGLsizei count, PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glProgramParameters4fvNV)(unsigned target, TGLuint index, TGLsizei count, PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glRequestResidentProgramsNV)(TGLsizei n, PGLuint programs);
extern DELPHI_PACKAGE void __stdcall (*glTrackMatrixNV)(unsigned target, TGLuint address, unsigned matrix, unsigned transform);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribPointerNV)(TGLuint index, TGLint fsize, unsigned vertextype, TGLsizei stride, void * pointer);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib1dNV)(TGLuint index, TGLdouble x);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib1dvNV)(TGLuint index, PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib1fNV)(TGLuint index, float x);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib1fvNV)(TGLuint index, PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib1sNV)(TGLuint index, TGLshort x);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib1svNV)(TGLuint index, PGLshort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib2dNV)(TGLuint index, TGLdouble x, TGLdouble y);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib2dvNV)(TGLuint index, PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib2fNV)(TGLuint index, float x, float y);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib2fvNV)(TGLuint index, PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib2sNV)(TGLuint index, TGLshort x, TGLshort y);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib2svNV)(TGLuint index, PGLshort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib3dNV)(TGLuint index, TGLdouble x, TGLdouble y, TGLdouble z);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib3dvNV)(TGLuint index, PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib3fNV)(TGLuint index, float x, float y, float z);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib3fvNV)(TGLuint index, PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib3sNV)(TGLuint index, TGLshort x, TGLshort y, TGLshort z);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib3svNV)(TGLuint index, PGLshort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4dNV)(TGLuint index, TGLdouble x, TGLdouble y, TGLdouble z, TGLdouble w);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4dvNV)(TGLuint index, PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4fNV)(TGLuint index, float x, float y, float z, float w);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4fvNV)(TGLuint index, PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4sNV)(TGLuint index, TGLshort x, TGLshort y, TGLdouble z, TGLshort w);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4svNV)(TGLuint index, PGLshort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4ubvNV)(TGLuint index, PGLubyte v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribs1dvNV)(TGLuint index, TGLsizei count, PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribs1fvNV)(TGLuint index, TGLsizei count, PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribs1svNV)(TGLuint index, TGLsizei count, PGLshort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribs2dvNV)(TGLuint index, TGLsizei count, PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribs2fvNV)(TGLuint index, TGLsizei count, PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribs2svNV)(TGLuint index, TGLsizei count, PGLshort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribs3dvNV)(TGLuint index, TGLsizei count, PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribs3fvNV)(TGLuint index, TGLsizei count, PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribs3svNV)(TGLuint index, TGLsizei count, PGLshort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribs4dvNV)(TGLuint index, TGLsizei count, PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribs4fvNV)(TGLuint index, TGLsizei count, PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribs4svNV)(TGLuint index, TGLsizei count, PGLshort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribs4ubvNV)(TGLuint index, TGLsizei count, PGLubyte v);
extern DELPHI_PACKAGE void __stdcall (*glGenOcclusionQueriesNV)(TGLsizei n, PGLuint ids);
extern DELPHI_PACKAGE void __stdcall (*glDeleteOcclusionQueriesNV)(TGLsizei n, const PGLuint ids);
extern DELPHI_PACKAGE System::ByteBool __stdcall (*glIsOcclusionQueryNV)(TGLuint id);
extern DELPHI_PACKAGE void __stdcall (*glBeginOcclusionQueryNV)(TGLuint id);
extern DELPHI_PACKAGE void __stdcall (*glEndOcclusionQueryNV)(void);
extern DELPHI_PACKAGE void __stdcall (*glGetOcclusionQueryivNV)(TGLuint id, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glGetOcclusionQueryuivNV)(TGLuint id, unsigned pname, PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glPointParameteriNV)(unsigned pname, TGLint param);
extern DELPHI_PACKAGE void __stdcall (*glPointParameterivNV)(unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glActiveStencilFaceEXT)(unsigned face);
extern DELPHI_PACKAGE void __stdcall (*glDrawBuffersATI)(int n, const PGLenum bufs);
extern DELPHI_PACKAGE void __stdcall (*glPrimitiveRestartNV)(void);
extern DELPHI_PACKAGE void __stdcall (*glPrimitiveRestartIndexNV)(TGLuint index);
extern DELPHI_PACKAGE void __stdcall (*glDepthBoundsEXT)(TGLclampd zmin, TGLclampd zmax);
extern DELPHI_PACKAGE void __stdcall (*glBlendEquationSeparateEXT)(unsigned modeRGB, unsigned modeAlpha);
extern DELPHI_PACKAGE System::ByteBool __stdcall (*glIsRenderbufferEXT)(TGLuint renderbuffer);
extern DELPHI_PACKAGE void __stdcall (*glBindRenderbufferEXT)(unsigned target, TGLuint renderbuffer);
extern DELPHI_PACKAGE void __stdcall (*glDeleteRenderbuffersEXT)(TGLsizei n, PGLuint renderbuffers);
extern DELPHI_PACKAGE void __stdcall (*glGenRenderbuffersEXT)(TGLsizei n, PGLuint renderbuffers);
extern DELPHI_PACKAGE void __stdcall (*glRenderbufferStorageEXT)(unsigned target, unsigned internalformat, TGLsizei width, TGLsizei height);
extern DELPHI_PACKAGE void __stdcall (*glGetRenderbufferParameterivEXT)(unsigned target, unsigned pname, PGLint params);
extern DELPHI_PACKAGE System::ByteBool __stdcall (*glIsFramebufferEXT)(TGLuint framebuffer);
extern DELPHI_PACKAGE void __stdcall (*glBindFramebufferEXT)(unsigned target, TGLuint framebuffer);
extern DELPHI_PACKAGE void __stdcall (*glDeleteFramebuffersEXT)(TGLsizei n, PGLuint framebuffers);
extern DELPHI_PACKAGE void __stdcall (*glGenFramebuffersEXT)(TGLsizei n, PGLuint framebuffers);
extern DELPHI_PACKAGE unsigned __stdcall (*glCheckFramebufferStatusEXT)(unsigned target);
extern DELPHI_PACKAGE void __stdcall (*glFramebufferTexture1DEXT)(unsigned target, unsigned attachment, unsigned textarget, TGLuint texture, TGLint level);
extern DELPHI_PACKAGE void __stdcall (*glFramebufferTexture2DEXT)(unsigned target, unsigned attachment, unsigned textarget, TGLuint texture, TGLint level);
extern DELPHI_PACKAGE void __stdcall (*glFramebufferTexture3DEXT)(unsigned target, unsigned attachment, unsigned textarget, TGLuint texture, TGLint level, TGLint zoffset);
extern DELPHI_PACKAGE void __stdcall (*glFramebufferRenderbufferEXT)(unsigned target, unsigned attachment, unsigned renderbuffertarget, TGLuint renderbuffer);
extern DELPHI_PACKAGE void __stdcall (*glGetFramebufferAttachmentParameterivEXT)(unsigned target, unsigned attachment, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glGenerateMipmapEXT)(unsigned target);
extern DELPHI_PACKAGE void __stdcall (*glStencilClearTagEXT)(TGLsizei stencilTagBits, TGLuint stencilClearTag);
extern DELPHI_PACKAGE void __stdcall (*glBlitFramebufferEXT)(TGLint srcX0, TGLint srcY0, TGLint srcX1, TGLint srcY1, TGLint dstX0, TGLint dstY0, TGLint dstX1, TGLint dstY1, TGLbitfield mask, unsigned filter);
extern DELPHI_PACKAGE void __stdcall (*glRenderbufferStorageMultisampleEXT)(unsigned target, TGLsizei samples, unsigned internalformat, TGLsizei width, TGLsizei height);
extern DELPHI_PACKAGE void __stdcall (*glGetQueryObjecti64vEXT)(TGLuint id, unsigned pname, PGLint64EXT params);
extern DELPHI_PACKAGE void __stdcall (*glGetQueryObjectui64vEXT)(TGLuint id, unsigned pname, PGLuint64EXT params);
extern DELPHI_PACKAGE void __stdcall (*glProgramEnvParameters4fvEXT)(unsigned target, TGLuint index, TGLsizei count, const PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glProgramLocalParameters4fvEXT)(unsigned target, TGLuint index, TGLsizei count, const PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glProgramVertexLimitNV)(unsigned target, TGLint limit);
extern DELPHI_PACKAGE void __stdcall (*glProgramParameteriEXT)(TGLuint _program, unsigned pname, TGLint value);
extern DELPHI_PACKAGE void __stdcall (*glFramebufferTextureEXT)(unsigned target, unsigned attachment, TGLuint texture, TGLint level);
extern DELPHI_PACKAGE void __stdcall (*glFramebufferTextureLayerEXT)(unsigned target, unsigned attachment, TGLuint texture, TGLint level, TGLint layer);
extern DELPHI_PACKAGE void __stdcall (*glFramebufferTextureFaceEXT)(unsigned target, unsigned attachment, TGLuint texture, TGLint level, unsigned face);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI1iEXT)(TGLuint index, TGLint x);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI2iEXT)(TGLuint index, TGLint x, TGLint y);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI3iEXT)(TGLuint index, TGLint x, TGLint y, TGLint z);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI4iEXT)(TGLuint index, TGLint x, TGLint y, TGLint z, TGLint w);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI1uiEXT)(TGLuint index, TGLuint x);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI2uiEXT)(TGLuint index, TGLuint x, TGLuint y);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI3uiEXT)(TGLuint index, TGLuint x, TGLuint y, TGLuint z);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI4uiEXT)(TGLuint index, TGLuint x, TGLuint y, TGLuint z, TGLuint w);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI1ivEXT)(TGLuint index, PGLint v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI2ivEXT)(TGLuint index, PGLint v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI3ivEXT)(TGLuint index, PGLint v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI4ivEXT)(TGLuint index, PGLint v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI1uivEXT)(TGLuint index, PGLuint v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI2uivEXT)(TGLuint index, PGLuint v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI3uivEXT)(TGLuint index, PGLuint v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI4uivEXT)(TGLuint index, PGLuint v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI4bvEXT)(TGLuint index, PGLbyte v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI4svEXT)(TGLuint index, PGLshort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI4ubvEXT)(TGLuint index, PGLubyte v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI4usvEXT)(TGLuint index, PGLushort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribIPointerEXT)(TGLuint index, TGLint size, unsigned _type, TGLsizei stride, void * _pointer);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribIivEXT)(TGLuint index, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribIuivEXT)(TGLuint index, unsigned pname, PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glUniform1uiEXT)(TGLint location, TGLuint v0);
extern DELPHI_PACKAGE void __stdcall (*glUniform2uiEXT)(TGLint location, TGLuint v0, TGLuint v1);
extern DELPHI_PACKAGE void __stdcall (*glUniform3uiEXT)(TGLint location, TGLuint v0, TGLuint v1, TGLuint v2);
extern DELPHI_PACKAGE void __stdcall (*glUniform4uiEXT)(TGLint location, TGLuint v0, TGLuint v1, TGLuint v2, TGLuint v3);
extern DELPHI_PACKAGE void __stdcall (*glUniform1uivEXT)(TGLint location, TGLsizei count, PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glUniform2uivEXT)(TGLint location, TGLsizei count, PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glUniform3uivEXT)(TGLint location, TGLsizei count, PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glUniform4uivEXT)(TGLint location, TGLsizei count, PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glGetUniformuivEXT)(TGLuint _program, TGLint location, PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glBindFragDataLocationEXT)(TGLuint _program, TGLuint colorNumber, PGLChar name);
extern DELPHI_PACKAGE int __stdcall (*glGetFragDataLocationEXT)(TGLuint _program, PGLChar name);
extern DELPHI_PACKAGE void __stdcall (*glDrawArraysInstancedEXT)(unsigned mode, TGLint first, TGLsizei count, TGLsizei primcount);
extern DELPHI_PACKAGE void __stdcall (*glDrawElementsInstancedEXT)(unsigned mode, TGLsizei count, unsigned _type, PGLvoid indices, TGLsizei primcount);
extern DELPHI_PACKAGE void __stdcall (*glTexBufferEXT)(unsigned target, unsigned internalformat, TGLuint buffer);
extern DELPHI_PACKAGE void __stdcall (*glColorMaskIndexedEXT)(TGLuint buf, TGLboolean r, TGLboolean g, TGLboolean b, TGLboolean a);
extern DELPHI_PACKAGE void __stdcall (*glGetBooleanIndexedvEXT)(unsigned value, TGLuint index, PGLboolean data);
extern DELPHI_PACKAGE void __stdcall (*glGetIntegerIndexedvEXT)(unsigned value, TGLuint index, PGLint data);
extern DELPHI_PACKAGE void __stdcall (*glEnableIndexedEXT)(unsigned target, TGLuint index);
extern DELPHI_PACKAGE void __stdcall (*glDisableIndexedEXT)(unsigned target, TGLuint index);
extern DELPHI_PACKAGE System::ByteBool __stdcall (*glIsEnabledIndexedEXT)(unsigned target, TGLuint index);
extern DELPHI_PACKAGE void __stdcall (*glBindBufferRangeNV)(unsigned target, TGLuint index, TGLuint buffer, TGLintptr offset, TGLsizeiptr size);
extern DELPHI_PACKAGE void __stdcall (*glBindBufferOffsetNV)(unsigned target, TGLuint index, TGLuint buffer, TGLintptr offset);
extern DELPHI_PACKAGE void __stdcall (*glBindBufferBaseNV)(unsigned target, TGLuint index, TGLuint buffer);
extern DELPHI_PACKAGE void __stdcall (*glTransformFeedbackAttribsNV)(TGLsizei count, PGLint attribs, unsigned bufferMode);
extern DELPHI_PACKAGE void __stdcall (*glTransformFeedbackVaryingsNV)(TGLuint _program, TGLsizei count, PGLint locations, unsigned bufferMode);
extern DELPHI_PACKAGE void __stdcall (*glBeginTransformFeedbackNV)(unsigned primitiveMode);
extern DELPHI_PACKAGE void __stdcall (*glEndTransformFeedbackNV)(void);
extern DELPHI_PACKAGE int __stdcall (*glGetVaryingLocationNV)(TGLuint _program, PGLChar name);
extern DELPHI_PACKAGE void __stdcall (*glGetActiveVaryingNV)(TGLuint _program, TGLuint index, TGLsizei bufSize, PGLsizei length, PGLsizei size, unsigned _type, PGLChar name);
extern DELPHI_PACKAGE void __stdcall (*glActiveVaryingNV)(TGLuint _program, PGLChar name);
extern DELPHI_PACKAGE void __stdcall (*glGetTransformFeedbackVaryingNV)(TGLuint _program, TGLuint index, PGLint location);
extern DELPHI_PACKAGE void __stdcall (*glUniformBufferEXT)(TGLuint _program, TGLint location, TGLuint buffer);
extern DELPHI_PACKAGE int __stdcall (*glGetUniformBufferSizeEXT)(TGLuint _program, TGLint location);
extern DELPHI_PACKAGE PGLint __stdcall (*glGetUniformOffsetEXT)(TGLuint _program, TGLint location);
extern DELPHI_PACKAGE void __stdcall (*glClearColorIiEXT)(TGLint r, TGLint g, TGLint b, TGLint a);
extern DELPHI_PACKAGE void __stdcall (*glClearColorIuiEXT)(TGLuint r, TGLuint g, TGLuint b, TGLuint a);
extern DELPHI_PACKAGE void __stdcall (*glTexParameterIivEXT)(unsigned target, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glTexParameterIuivEXT)(unsigned target, unsigned pname, PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glGetTexParameterIivEXT)(unsigned target, unsigned pname, PGLint params);
extern DELPHI_PACKAGE void __stdcall (*glGetTexParameterIuivEXT)(unsigned target, unsigned pname, PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glBeginConditionalRenderNV)(TGLuint id, unsigned mode);
extern DELPHI_PACKAGE void __stdcall (*glEndConditionalRenderNV)(void);
extern DELPHI_PACKAGE void __stdcall (*glBindBufferRangeEXT)(unsigned target, TGLuint index, TGLuint buffer, TGLintptr offset, TGLsizeiptr size);
extern DELPHI_PACKAGE void __stdcall (*glBindBufferOffsetEXT)(unsigned target, TGLuint index, TGLuint buffer, TGLintptr offset);
extern DELPHI_PACKAGE void __stdcall (*glBindBufferBaseEXT)(unsigned target, TGLuint index, TGLuint buffer);
extern DELPHI_PACKAGE void __stdcall (*glBeginTransformFeedbackEXT)(unsigned primitiveMode);
extern DELPHI_PACKAGE void __stdcall (*glEndTransformFeedbackEXT)(void);
extern DELPHI_PACKAGE void __stdcall (*glTransformFeedbackVaryingsEXT)(TGLuint _program, TGLsizei count, const PGLPCharArray varyings, unsigned bufferMode);
extern DELPHI_PACKAGE void __stdcall (*glGetTransformFeedbackVaryingEXT)(TGLuint _program, TGLuint index, TGLsizei bufSize, PGLsizei length, PGLsizei size, PGLenum _type, PGLChar name);
extern DELPHI_PACKAGE void __stdcall (*glTessellationFactorAMD)(float factor);
extern DELPHI_PACKAGE void __stdcall (*glTessellationModeAMD)(unsigned mode);
extern DELPHI_PACKAGE void __stdcall (*glCopyImageSubDataNV)(unsigned srcName, unsigned srcTarget, int srcLevel, int srcX, int srcY, int srcZ, unsigned dstName, unsigned dstTarget, int dstLevel, int dstX, int dstY, int dstZ, int width, int height, int depth);
extern DELPHI_PACKAGE void __stdcall (*glMakeBufferResidentNV)(unsigned target, unsigned access);
extern DELPHI_PACKAGE void __stdcall (*glMakeBufferNonResidentNV)(unsigned target);
extern DELPHI_PACKAGE System::ByteBool __stdcall (*glIsBufferResidentNV)(unsigned target);
extern DELPHI_PACKAGE void __stdcall (*glMakeNamedBufferResidentNV)(TGLuint buffer, unsigned access);
extern DELPHI_PACKAGE void __stdcall (*glMakeNamedBufferNonResidentNV)(TGLuint buffer);
extern DELPHI_PACKAGE System::ByteBool __stdcall (*glIsNamedBufferResidentNV)(TGLuint buffer);
extern DELPHI_PACKAGE void __stdcall (*glGetBufferParameterui64vNV)(unsigned target, unsigned pname, PGLuint64EXT params);
extern DELPHI_PACKAGE void __stdcall (*glGetNamedBufferParameterui64vNV)(TGLuint buffer, unsigned pname, PGLuint64EXT params);
extern DELPHI_PACKAGE void __stdcall (*glGetIntegerui64vNV)(unsigned value, PGLuint64EXT result);
extern DELPHI_PACKAGE void __stdcall (*glUniformui64NV)(TGLint location, TGLuint64EXT value);
extern DELPHI_PACKAGE void __stdcall (*glUniformui64vNV)(int location, TGLsizei count, const PGLuint64EXT value);
extern DELPHI_PACKAGE void __stdcall (*glGetUniformui64vNV)(TGLuint _program, TGLint location, PGLuint64EXT params);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformui64NV)(TGLuint _program, TGLint location, TGLuint64EXT value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformui64vNV)(TGLuint _program, TGLint location, TGLsizei count, const PGLuint64EXT value);
extern DELPHI_PACKAGE void __stdcall (*glBufferAddressRangeNV)(unsigned pname, TGLuint index, TGLuint64EXT address, TGLsizeiptr length);
extern DELPHI_PACKAGE void __stdcall (*glVertexFormatNV)(TGLint size, unsigned _type, TGLsizei stride);
extern DELPHI_PACKAGE void __stdcall (*glNormalFormatNV)(unsigned _type, TGLsizei stride);
extern DELPHI_PACKAGE void __stdcall (*glColorFormatNV)(TGLint size, unsigned _type, TGLsizei stride);
extern DELPHI_PACKAGE void __stdcall (*glIndexFormatNV)(unsigned _type, TGLsizei stride);
extern DELPHI_PACKAGE void __stdcall (*glTexCoordFormatNV)(TGLint size, unsigned _type, TGLsizei stride);
extern DELPHI_PACKAGE void __stdcall (*glEdgeFlagFormatNV)(TGLsizei stride);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColorFormatNV)(TGLint size, unsigned _type, TGLsizei stride);
extern DELPHI_PACKAGE void __stdcall (*glFogCoordFormatNV)(unsigned _type, TGLsizei stride);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribFormatNV)(TGLuint index, TGLint size, unsigned _type, TGLboolean normalized, TGLsizei stride);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribIFormatNV)(TGLuint index, TGLint size, unsigned _type, TGLsizei stride);
extern DELPHI_PACKAGE void __stdcall (*glGetIntegerui64i_vNV)(unsigned value, TGLuint index, PGLuint64EXT result);
extern DELPHI_PACKAGE void __stdcall (*glFrameTerminatorGREMEDY)(void);
extern DELPHI_PACKAGE void __stdcall (*glStringMarkerGREMEDY)(int len, PGLChar str);
extern DELPHI_PACKAGE bool vIgnoreOpenGLErrors;
extern DELPHI_PACKAGE void * __fastcall GLGetProcAddress(PGLChar ProcName);
extern DELPHI_PACKAGE void __fastcall CheckOpenGLError(void);
extern DELPHI_PACKAGE void __fastcall ClearGLError(void);
extern DELPHI_PACKAGE void __fastcall RaiseOpenGLError(const System::UnicodeString msg);
extern DELPHI_PACKAGE void __fastcall ReadExtensions(void);
extern DELPHI_PACKAGE void __fastcall ReadWGLExtensions(void);
extern DELPHI_PACKAGE void __fastcall TrimAndSplitVersionString(System::UnicodeString Buffer, /* out */ int &Max, /* out */ int &Min);
extern DELPHI_PACKAGE bool __fastcall IsVersionMet(int MajorVersion, int MinorVersion, int actualMajorVersion, int actualMinorVersion);
extern DELPHI_PACKAGE void __fastcall ReadImplementationProperties(void);
extern DELPHI_PACKAGE void __fastcall ReadWGLImplementationProperties(void);
extern DELPHI_PACKAGE bool __fastcall InitOpenGL(void);
extern DELPHI_PACKAGE bool __fastcall InitOpenGLFromLibrary(const System::UnicodeString GLName, const System::UnicodeString GLUName);
extern DELPHI_PACKAGE bool __fastcall IsOpenGLInitialized(void);
extern DELPHI_PACKAGE void __fastcall CloseOpenGL(void);
extern DELPHI_PACKAGE void __fastcall UnloadOpenGL(void);
extern DELPHI_PACKAGE bool __fastcall LoadOpenGL(void);
extern DELPHI_PACKAGE bool __fastcall LoadOpenGLFromLibrary(const System::UnicodeString GLName, const System::UnicodeString GLUName);
extern DELPHI_PACKAGE bool __fastcall IsOpenGLLoaded(void);
extern DELPHI_PACKAGE bool __fastcall IsMesaGL(void);
extern DELPHI_PACKAGE bool __fastcall IsOpenGLVersionMet(int MajorVersion, int MinorVersion);

#if defined(UNICODE)
#if defined(__BORLANDC__) && !defined(__clang__)
#pragma option push -w-inl
#endif
inline System::LongBool __stdcall wglUseFontBitmaps(HDC DC, unsigned p2, unsigned p3, unsigned p4)
{
	return wglUseFontBitmapsW(DC, p2, p3, p4);
}
#if defined(__BORLANDC__) && !defined(__clang__)
#pragma option pop
#endif

#else
#if defined(__BORLANDC__) && !defined(__clang__)
#pragma option push -w-inl
#endif
inline System::LongBool __stdcall wglUseFontBitmaps(HDC DC, unsigned p2, unsigned p3, unsigned p4)
{
	return wglUseFontBitmapsA(DC, p2, p3, p4);
}
#if defined(__BORLANDC__) && !defined(__clang__)
#pragma option pop
#endif

#endif


#if defined(UNICODE)
#if defined(__BORLANDC__) && !defined(__clang__)
#pragma option push -w-inl
#endif
inline System::LongBool __stdcall wglUseFontOutlines(HDC p1, unsigned p2, unsigned p3, unsigned p4, float p5, float p6, int p7, Winapi::Windows::PGlyphMetricsFloat p8)
{
	return wglUseFontOutlinesW(p1, p2, p3, p4, p5, p6, p7, p8);
}
#if defined(__BORLANDC__) && !defined(__clang__)
#pragma option pop
#endif

#else
#if defined(__BORLANDC__) && !defined(__clang__)
#pragma option push -w-inl
#endif
inline System::LongBool __stdcall wglUseFontOutlines(HDC p1, unsigned p2, unsigned p3, unsigned p4, float p5, float p6, int p7, Winapi::Windows::PGlyphMetricsFloat p8)
{
	return wglUseFontOutlinesA(p1, p2, p3, p4, p5, p6, p7, p8);
}
#if defined(__BORLANDC__) && !defined(__clang__)
#pragma option pop
#endif

#endif

}	/* namespace Opengl4 */
}	/* namespace Stage */
#if !defined(DELPHIHEADER_NO_IMPLICIT_NAMESPACE_USE) && !defined(NO_USING_NAMESPACE_STAGE_OPENGL4)
using namespace Stage::Opengl4;
#endif
#if !defined(DELPHIHEADER_NO_IMPLICIT_NAMESPACE_USE) && !defined(NO_USING_NAMESPACE_STAGE)
using namespace Stage;
#endif
#pragma pack(pop)
#pragma option pop

#pragma delphiheader end.
//-- end unit ----------------------------------------------------------------
#endif	// Stage_OpenGL4HPP
